{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/MySubmission/MySubmissionList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/mySubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","approver","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","QuestionnaireForBusinessOwnerDataService","isBusinessOwnerSummaryPage","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee16","indexesToUpdate","_context16","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","option","checked","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","viewAs","log","renderSubmitterInfo","renderTasks","renderApprovals","renderSkipCheckbox","renderButtons","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","dispatchBusinessOwnerApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","dispatchBusinessOwnerDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmission","_x20","_x21","approveQuestionnaireSubmissionFromBusinessOwner","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmission","_x22","_x23","denyQuestionnaireSubmissionFromBusinessOwner","_ref13","_callee10","_ref14","_context10","_x16","_x17","_ref15","_callee11","_ref16","_context11","_x18","_x19","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","productName","class","list","mySubmissionListState","_ref23","_callee15","_context15","fetchUserSubmissionList","_x26","_x27","_dispatchLoadDataAction","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","MySubmission_MySubmissionList","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","submissionList","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","mySubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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ACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"722eb88d619b28d15de8\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([368,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 598;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\"\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multi selection\") {\n            type = \"Checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"Checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")),\n            defaultRadioButtonValue : _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")),\n            defaultCheckboxValue : JSON.parse(_.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchUserSubmissionList(userID: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\nimport UserParser from \"../utils/UserParser\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string, isBusinessOwnerSummaryPage: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken, isBusinessOwnerSummaryPage} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\", IsBusinessOwnerSummaryPage: \"${isBusinessOwnerSummaryPage}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport QuestionnaireForBusinessOwnerDataService from \"../services/QuestionnaireForBusinessOwnerDataService\";\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchUserSubmissionList(user.id);\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && !input.data && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                        <td className=\"label\"><label>{label}</label></td>\n                        <td>\n                          {options.length &&\n                            options.map((option, index) => {\n                              let checked = _.toString(option.value) === _.toString(values[id]);\n\n                              return (\n                                <div key={index}>\n                                  <span>\n                                    <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                    <label>{option.label}</label>\n                                  </span>\n\n                                </div>\n                              );\n                            })\n                          }\n                        </td>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    console.log(submission);\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Required\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Required') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionFromBusinessOwner,\n  denyQuestionnaireSubmissionFromBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    console.log(user);\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {MyQuestionnaireItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    mySubmissionList: state.mySubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<MyQuestionnaireItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: MyQuestionnaireItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div class=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle=\"\" username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../MySubmission/MySubmissionList\";\n\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n\n    try {\n      const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n        uuid: this.props.uuid,\n        secureToken: this.props.token,\n        isBusinessOwnerSummaryPage: '1'\n      });\n      this.setState({\n        siteTitle: data.siteTitle,\n        submission: data.submission,\n      });\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: MySubmissionListState = {\n  submissionList: []\n}\n\nexport function mySubmissionListState(state: MySubmissionListState = initalState, action: any): MySubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {mySubmissionListState} from \"./mySubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  mySubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}