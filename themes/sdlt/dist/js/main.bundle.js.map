{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Logo.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/Home/risk-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Common/RiskResultContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/Common/LikelihoodLegendContainer.js","webpack:///./src/js/services/SecurityRiskAssessmentTaskDataService.js","webpack:///./src/js/actions/securityRiskAssessment.js","webpack:///./src/js/components/SecurityRiskAssessment/SecurityRiskAssessmentContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/securityRiskAssessmentState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/icons/pdf.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","FETCH_MY_PRODUCT_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","SRA","LOAD_SECURITY_RISK_ASSESSMENT","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","maxLength","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","likelihoodJSON","jsonArray","toArray","operator","colour","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","RiskIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","secureToken","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","taskName","taskType","approver","riskResults","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","JiraTicketParser","jiraKey","TaskDataService","args","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","maxlength","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","viewAs","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","alreadySubmittedAlert","buttons","editIcon","pdfIcon","existsUnansweredQuestion","summaryButton","redirectToQuestionnaireSummary","Questionnaire_AnswersPreview","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","PDFUtil_typeof","results","resultObj","rating","riskName","weights","score","table","headerRows","widths","body","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","_x10","_x11","RiskResultContainer","RiskResultContainer_objectSpread","riskResult","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","renderSubmitterInfo","renderTasks","renderApprovals","Common_RiskResultContainer","renderSkipCheckbox","renderButtons","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToSecurityRiskAssessment","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","viewAnswersButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchBusinessOwnerApproveSubmissionAction","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchBusinessOwnerDenySubmissionAction","dispatchDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmissionAsBusinessOwner","_x20","_x21","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmissionAsBusinessOwner","_x22","_x23","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref13","_callee10","_ref14","_context10","approveQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","denyQuestionnaireSubmission","_x18","_x19","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","backButton","editButton","pdfButton","downloadPdf","resultStatus","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","_props","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","LikelihoodLegendContainer","likelihoodThresholds","LikelihoodLegendContainer_objectSpread","likelihoodThreshold","SecurityRiskAssessmentTaskDataService","likelihoodRatings","parseLikelihoodJSONObject","loadSecurityRiskAssessment","securityRiskAssessment_objectSpread","fetchSecurityRiskAssessmentTasK","SecurityRiskAssessmentContainer","SecurityRiskAssessmentContainer_objectSpread","securityRiskAssessmentData","Common_LikelihoodLegendContainer","securityRiskAssessmentState","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","search","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","SecurityRiskAssessment_SecurityRiskAssessmentContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","HashRouter","es","App_MainApp","vendorContainer","App_VendorApp"],"mappings":"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IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,I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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"3f53ad2c237918adb85d\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([371,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/2d7ab2e275175116af7444a221be9f74.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 211,\n\t\"./af.js\": 211,\n\t\"./ar\": 212,\n\t\"./ar-dz\": 213,\n\t\"./ar-dz.js\": 213,\n\t\"./ar-kw\": 214,\n\t\"./ar-kw.js\": 214,\n\t\"./ar-ly\": 215,\n\t\"./ar-ly.js\": 215,\n\t\"./ar-ma\": 216,\n\t\"./ar-ma.js\": 216,\n\t\"./ar-sa\": 217,\n\t\"./ar-sa.js\": 217,\n\t\"./ar-tn\": 218,\n\t\"./ar-tn.js\": 218,\n\t\"./ar.js\": 212,\n\t\"./az\": 219,\n\t\"./az.js\": 219,\n\t\"./be\": 220,\n\t\"./be.js\": 220,\n\t\"./bg\": 221,\n\t\"./bg.js\": 221,\n\t\"./bm\": 222,\n\t\"./bm.js\": 222,\n\t\"./bn\": 223,\n\t\"./bn.js\": 223,\n\t\"./bo\": 224,\n\t\"./bo.js\": 224,\n\t\"./br\": 225,\n\t\"./br.js\": 225,\n\t\"./bs\": 226,\n\t\"./bs.js\": 226,\n\t\"./ca\": 227,\n\t\"./ca.js\": 227,\n\t\"./cs\": 228,\n\t\"./cs.js\": 228,\n\t\"./cv\": 229,\n\t\"./cv.js\": 229,\n\t\"./cy\": 230,\n\t\"./cy.js\": 230,\n\t\"./da\": 231,\n\t\"./da.js\": 231,\n\t\"./de\": 232,\n\t\"./de-at\": 233,\n\t\"./de-at.js\": 233,\n\t\"./de-ch\": 234,\n\t\"./de-ch.js\": 234,\n\t\"./de.js\": 232,\n\t\"./dv\": 235,\n\t\"./dv.js\": 235,\n\t\"./el\": 236,\n\t\"./el.js\": 236,\n\t\"./en-SG\": 237,\n\t\"./en-SG.js\": 237,\n\t\"./en-au\": 238,\n\t\"./en-au.js\": 238,\n\t\"./en-ca\": 239,\n\t\"./en-ca.js\": 239,\n\t\"./en-gb\": 240,\n\t\"./en-gb.js\": 240,\n\t\"./en-ie\": 241,\n\t\"./en-ie.js\": 241,\n\t\"./en-il\": 242,\n\t\"./en-il.js\": 242,\n\t\"./en-nz\": 243,\n\t\"./en-nz.js\": 243,\n\t\"./eo\": 244,\n\t\"./eo.js\": 244,\n\t\"./es\": 245,\n\t\"./es-do\": 246,\n\t\"./es-do.js\": 246,\n\t\"./es-us\": 247,\n\t\"./es-us.js\": 247,\n\t\"./es.js\": 245,\n\t\"./et\": 248,\n\t\"./et.js\": 248,\n\t\"./eu\": 249,\n\t\"./eu.js\": 249,\n\t\"./fa\": 250,\n\t\"./fa.js\": 250,\n\t\"./fi\": 251,\n\t\"./fi.js\": 251,\n\t\"./fo\": 252,\n\t\"./fo.js\": 252,\n\t\"./fr\": 253,\n\t\"./fr-ca\": 254,\n\t\"./fr-ca.js\": 254,\n\t\"./fr-ch\": 255,\n\t\"./fr-ch.js\": 255,\n\t\"./fr.js\": 253,\n\t\"./fy\": 256,\n\t\"./fy.js\": 256,\n\t\"./ga\": 257,\n\t\"./ga.js\": 257,\n\t\"./gd\": 258,\n\t\"./gd.js\": 258,\n\t\"./gl\": 259,\n\t\"./gl.js\": 259,\n\t\"./gom-latn\": 260,\n\t\"./gom-latn.js\": 260,\n\t\"./gu\": 261,\n\t\"./gu.js\": 261,\n\t\"./he\": 262,\n\t\"./he.js\": 262,\n\t\"./hi\": 263,\n\t\"./hi.js\": 263,\n\t\"./hr\": 264,\n\t\"./hr.js\": 264,\n\t\"./hu\": 265,\n\t\"./hu.js\": 265,\n\t\"./hy-am\": 266,\n\t\"./hy-am.js\": 266,\n\t\"./id\": 267,\n\t\"./id.js\": 267,\n\t\"./is\": 268,\n\t\"./is.js\": 268,\n\t\"./it\": 269,\n\t\"./it-ch\": 270,\n\t\"./it-ch.js\": 270,\n\t\"./it.js\": 269,\n\t\"./ja\": 271,\n\t\"./ja.js\": 271,\n\t\"./jv\": 272,\n\t\"./jv.js\": 272,\n\t\"./ka\": 273,\n\t\"./ka.js\": 273,\n\t\"./kk\": 274,\n\t\"./kk.js\": 274,\n\t\"./km\": 275,\n\t\"./km.js\": 275,\n\t\"./kn\": 276,\n\t\"./kn.js\": 276,\n\t\"./ko\": 277,\n\t\"./ko.js\": 277,\n\t\"./ku\": 278,\n\t\"./ku.js\": 278,\n\t\"./ky\": 279,\n\t\"./ky.js\": 279,\n\t\"./lb\": 280,\n\t\"./lb.js\": 280,\n\t\"./lo\": 281,\n\t\"./lo.js\": 281,\n\t\"./lt\": 282,\n\t\"./lt.js\": 282,\n\t\"./lv\": 283,\n\t\"./lv.js\": 283,\n\t\"./me\": 284,\n\t\"./me.js\": 284,\n\t\"./mi\": 285,\n\t\"./mi.js\": 285,\n\t\"./mk\": 286,\n\t\"./mk.js\": 286,\n\t\"./ml\": 287,\n\t\"./ml.js\": 287,\n\t\"./mn\": 288,\n\t\"./mn.js\": 288,\n\t\"./mr\": 289,\n\t\"./mr.js\": 289,\n\t\"./ms\": 290,\n\t\"./ms-my\": 291,\n\t\"./ms-my.js\": 291,\n\t\"./ms.js\": 290,\n\t\"./mt\": 292,\n\t\"./mt.js\": 292,\n\t\"./my\": 293,\n\t\"./my.js\": 293,\n\t\"./nb\": 294,\n\t\"./nb.js\": 294,\n\t\"./ne\": 295,\n\t\"./ne.js\": 295,\n\t\"./nl\": 296,\n\t\"./nl-be\": 297,\n\t\"./nl-be.js\": 297,\n\t\"./nl.js\": 296,\n\t\"./nn\": 298,\n\t\"./nn.js\": 298,\n\t\"./pa-in\": 299,\n\t\"./pa-in.js\": 299,\n\t\"./pl\": 300,\n\t\"./pl.js\": 300,\n\t\"./pt\": 301,\n\t\"./pt-br\": 302,\n\t\"./pt-br.js\": 302,\n\t\"./pt.js\": 301,\n\t\"./ro\": 303,\n\t\"./ro.js\": 303,\n\t\"./ru\": 304,\n\t\"./ru.js\": 304,\n\t\"./sd\": 305,\n\t\"./sd.js\": 305,\n\t\"./se\": 306,\n\t\"./se.js\": 306,\n\t\"./si\": 307,\n\t\"./si.js\": 307,\n\t\"./sk\": 308,\n\t\"./sk.js\": 308,\n\t\"./sl\": 309,\n\t\"./sl.js\": 309,\n\t\"./sq\": 310,\n\t\"./sq.js\": 310,\n\t\"./sr\": 311,\n\t\"./sr-cyrl\": 312,\n\t\"./sr-cyrl.js\": 312,\n\t\"./sr.js\": 311,\n\t\"./ss\": 313,\n\t\"./ss.js\": 313,\n\t\"./sv\": 314,\n\t\"./sv.js\": 314,\n\t\"./sw\": 315,\n\t\"./sw.js\": 315,\n\t\"./ta\": 316,\n\t\"./ta.js\": 316,\n\t\"./te\": 317,\n\t\"./te.js\": 317,\n\t\"./tet\": 318,\n\t\"./tet.js\": 318,\n\t\"./tg\": 319,\n\t\"./tg.js\": 319,\n\t\"./th\": 320,\n\t\"./th.js\": 320,\n\t\"./tl-ph\": 321,\n\t\"./tl-ph.js\": 321,\n\t\"./tlh\": 322,\n\t\"./tlh.js\": 322,\n\t\"./tr\": 323,\n\t\"./tr.js\": 323,\n\t\"./tzl\": 324,\n\t\"./tzl.js\": 324,\n\t\"./tzm\": 325,\n\t\"./tzm-latn\": 326,\n\t\"./tzm-latn.js\": 326,\n\t\"./tzm.js\": 325,\n\t\"./ug-cn\": 327,\n\t\"./ug-cn.js\": 327,\n\t\"./uk\": 328,\n\t\"./uk.js\": 328,\n\t\"./ur\": 329,\n\t\"./ur.js\": 329,\n\t\"./uz\": 330,\n\t\"./uz-latn\": 331,\n\t\"./uz-latn.js\": 331,\n\t\"./uz.js\": 330,\n\t\"./vi\": 332,\n\t\"./vi.js\": 332,\n\t\"./x-pseudo\": 333,\n\t\"./x-pseudo.js\": 333,\n\t\"./yo\": 334,\n\t\"./yo.js\": 334,\n\t\"./zh-cn\": 335,\n\t\"./zh-cn.js\": 335,\n\t\"./zh-hk\": 336,\n\t\"./zh-hk.js\": 336,\n\t\"./zh-tw\": 337,\n\t\"./zh-tw.js\": 337\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 601;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\",\n    FETCH_MY_PRODUCT_LIST:\"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  SRA: {\n    LOAD_SECURITY_RISK_ASSESSMENT: \"SRA/LOAD_SECURITY_RISK_ASSESSMENT\",\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/review/${uuid}?token=${token}`;\n      return;\n    }\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToSecurityRiskAssessment(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/security-risk-assessment/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/security-risk-assessment/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            maxLength: Number.parseInt(_.toString(_.get(inputSchema, \"MaxLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\nimport type {LikelihoodThreshold} from \"../types/Task\";\nimport toArray from \"lodash/toArray\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n\n  static parseLikelihoodJSONObject(likelihoodJSON: string | Object): LikelihoodThreshold {\n    const jsonArray = (typeof likelihoodJSON === \"string\" ? JSON.parse(likelihoodJSON) : likelihoodJSON);\n\n    if (jsonArray) {\n      return toArray(jsonArray).map((jsonObject) => {\n        return {\n          name: toString(get(jsonObject, \"Name\")),\n          value: toString(get(jsonObject, \"Value\")),\n          operator: toString(get(jsonObject, \"Operator\")),\n          colour: toString(get(jsonObject, \"Colour\"))\n        }\n      });\n    }\n\n    return [];\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\nimport RiskIcon from \"../../img/Home/risk-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = PocIcon;\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n        case \"risk_questionnaire\":\n          icon = RiskIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string, secureToken:string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    RiskResultData,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: _.has(submissionJSON, 'RiskResultData') ? JSON.parse(_.get(submissionJSON, \"RiskResultData\", \"\")) : \"\"\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n\n  static async approveQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n    RiskResultData\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n      riskResults: _.has(submissionJSONObject, 'RiskResultData') ? JSON.parse(_.get(submissionJSONObject, \"RiskResultData\", \"\")) : \"\"\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\n// load questionanqire submissions\n// this is same for SA, User, BO, CISO and normal user\nexport function loadQuestionnaireSubmissionState(submissionHash: string, secureToken: string): ThunkAction {\n  if(typeof(secureToken) == \"undefined\") {\n    secureToken = '';\n  }\n\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash, secureToken);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\n// As a User submit the questionnaire\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// As a user submit the  Questionnaire submission for approval\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// Assign to SA\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a SA / CISO\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a SA / CISO\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a BO\nexport function approveQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a BO\nexport function denyQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Edit answers of the Questionnaire Submission as a User\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// load all the Questionnaire Submissions of the logged in user\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list of pending approval list\n// for SA, CISO and Business owner\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list for the business owner\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      //set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue,\n                  maxLength\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder} maxlength={maxLength > 0 ? maxLength : 4096}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = dataArr.join(', ');\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport URLUtil from \"../../utils/URLUtil\";\n\ntype Props = {\n  siteTitle: string,\n  secureToken: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      viewAs,\n      secureToken,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    const alreadySubmittedAlert = (\n      <div className=\"alert alert-success text-center\">\n        This questionnaire has already been submitted.\n      </div>\n    )\n\n    const buttons = (\n      <div className=\"buttons\">\n      <LightButton title=\"EDIT ANSWERS\"\n                   iconImage={editIcon}\n                   classes={[\"button\"]}\n                   onClick={handleEditAnswerButtonClick}/>\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n      <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                  classes={[\"button\"]}\n                  disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                  onClick={handleSubmitButtonClick}/>\n      </div>\n    );\n\n    const summaryButton = (\n      <div className=\"buttons\">\n      <LightButton title=\"BACK TO SUMMARY\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireSummary(submission.submissionUUID, secureToken)}/>\n      </div>\n    );\n\n    return (\n      <div className=\"Review\">\n        {submission.status !== \"in_progress\" && alreadySubmittedAlert}\n        <AnswersPreview questions={submission.questions}/>\n        {(viewAs === 'submitter' && (submission.status === \"in_progress\" || submission.status === \"submitted\")) && buttons}\n        {(viewAs !== 'submitter') && summaryButton}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle, result, riskResults} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = dataArr.join(', ');\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    if(typeof riskResults === 'object' && riskResults.length > 0) {\n      let results = [\n        [\n          { text: 'Risk Name', bold: true, alignment: 'center' },\n          { text: 'Weights', bold: true, alignment: 'center' },\n          { text: 'Score', bold: true, alignment: 'center' },\n          { text: 'Rating', bold: true, alignment: 'center' },\n        ]\n      ];\n      riskResults.forEach(function(result, i){\n        let resultObj = { text: result.rating, alignment: 'center', color: '#'+result.colour, bold: true };\n\n        if (result.rating == 'Unknown') {\n          resultObj = { text: 'Unknown', alignment: 'center', color: '#000000', bold: true };\n        }\n\n\n        results.push([\n          { text: result.riskName },\n          result.weights,\n          result.score,\n          resultObj\n        ])\n      })\n      content.push({\n        table: {\n          headerRows: 1,\n          //actual rendered width of footer and header images\n          widths: [237, 75, 75, 75],\n          body: results\n        },\n        width: 500,\n        margin: [0, 0, 0, defaultFontSize]\n      });\n    }\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {\n      title,\n      siteTitle,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n          viewAs={viewAs}\n          submission={submission}\n          secureToken={secureToken}\n          handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n          handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n          handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {RiskResult} from \"../../types/Questionnaire\";\n\ntype Props = {\n  riskResults: Array<RiskResult> | null,\n};\n\nclass RiskResultContainer extends Component<Props> {\n  render() {\n    const {riskResults} = {...this.props};\n\n    if (riskResults.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"risks\">\n        <h3>Risk Result</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_table_header\">\n                <th>Risk Name</th>\n                <th>Weights</th>\n                <th>Score</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {riskResults.map((riskResult, index): RiskResult => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {riskResult.riskName}\n                    </td>\n                    <td>\n                      {riskResult.weights}\n                    </td>\n                    <td>\n                      {riskResult.score}\n                    </td>\n                    <td style={{color:'#' + riskResult.colour}}>\n                      {riskResult.rating}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskResultContainer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        <RiskResultContainer riskResults={submission.riskResults}/>\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                if (taskType === \"security risk assessment\") {\n                  URLUtil.redirectToSecurityRiskAssessment(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      user,\n      viewAs,\n      token,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    const viewAnswersButton = user ? (\n      <LightButton title=\"VIEW ANSWERS\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireReview(submission.submissionUUID, token)}\n      />\n    ) : '';\n\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {viewAnswersButton}\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {viewAnswersButton}\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Required\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Required') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionAsBusinessOwner,\n  denyQuestionnaireSubmissionAsBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    // load the Submission data on the summary screen\n    dispatchLoadSubmissionAction(submissionHash: string, secureToken: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash, secureToken));\n    },\n\n    // as a BO approve/ deny the submission\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(approveQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(denyQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n\n    // user can edit answers and submit the questionnaire for approval\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n\n    // as a SA and ciso approve/ deny the submission\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n\n    // As a SA assign the submission to cureent logged in user\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string, secureToken: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction, secureToken} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash, secureToken);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {location, title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an businessOwner approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n                 token={secureToken}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    let riskResults;\n    if(submission && submission.riskResults) {\n      riskResults = submission.riskResults;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n      riskResults: riskResults ? riskResults : [],\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean,\n  secureToken: string\n};\n\nclass TaskSubmission extends Component<Props> {\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs,\n      secureToken\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const riskResult = taskSubmission.riskResults && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <RiskResultContainer riskResults={taskSubmission.riskResults}/>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n        {riskResult}\n        <div className=\"buttons\">\n          {editButton}\n          {pdfButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle,\n      currentUser\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n      riskResults: taskSubmission.riskResults,\n    });\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken:string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteTitle={siteTitle}\n          secureToken={secureToken}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteTitle={siteTitle}\n          currentUser={currentUser}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken:string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      secureToken,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"start\":\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    myProductList: state.questionnaireSubmissionListState.myProductList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteTitle} username={currentUser.name} />\n        {list(myProductList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {LikelihoodThreshold} from \"../../types/Task\";\n\ntype Props = {\n  LikelihoodThresholds: Array<LikelihoodThreshold> | null,\n};\n\nclass LikelihoodLegendContainer extends Component<Props> {\n  render() {\n    const {likelihoodThresholds} = {...this.props};\n\n    if (likelihoodThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"LikelihoodLegend\">\n        <h3>Likelihood Legend</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"likelihood_legend_header\">\n                <th>Threshold</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {likelihoodThresholds.map((likelihoodThreshold, index): Array<LikelihoodThreshold> => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {likelihoodThreshold.operator + likelihoodThreshold.value}\n                    </td>\n                    <td style={{color:'#' + likelihoodThreshold.colour}}>\n                      {likelihoodThreshold.name}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LikelihoodLegendContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class SecurityRiskAssessmentTaskDataService {\n\n  static async fetchSecurityRiskAssessmentTasK(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    QuestionnaireSubmission {\n      UUID\n    }\n    LikelihoodRatings\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      likelihoodRatings: TaskParser.parseLikelihoodJSONObject(get(submissionJSONObject, \"LikelihoodRatings\"))\n    };\n\n    return data;\n  }\n}\n","import {ThunkAction} from \"redux-thunk\";\nimport ActionType from \"./ActionType\";\nimport SecurityRiskAssessmentTaskDataService from \"../services/SecurityRiskAssessmentTaskDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadSecurityRiskAssessment(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await SecurityRiskAssessmentTaskDataService.fetchSecurityRiskAssessmentTasK({\n        uuid,\n        secureToken\n      });\n\n      const action = {\n        type: ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport LikelihoodLegendContainer from \"../Common/LikelihoodLegendContainer\";\nimport type {User} from \"../../types/User\";\nimport {\n  loadSecurityRiskAssessment\n} from \"../../actions/securityRiskAssessment\";\nimport type {SecurityRiskAssessment} from \"../../types/Task\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    securityRiskAssessmentData: state.securityRiskAssessmentState.securityRiskAssessmentData\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadSecurityRiskAssessment({uuid, secureToken}));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken: string,\n  siteTitle?: string,\n  currentUser?: User | null,\n  securityRiskAssessmentData?: SecurityRiskAssessment | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n};\n\nclass SecurityRiskAssessmentContainer extends Component<Props> {\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      securityRiskAssessmentData,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !siteTitle || !securityRiskAssessmentData) {\n      return null;\n    }\n\n    const backButton = (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(securityRiskAssessmentData.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    );\n\n    return (\n      <div className=\"SecurityRiskAssessmentContainer\">\n        <Header title={securityRiskAssessmentData.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <div className=\"SecurityRiskAssessmentResult\">\n          <LikelihoodLegendContainer likelihoodThresholds={securityRiskAssessmentData.likelihoodRatings} />\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SecurityRiskAssessmentContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\nimport SecurityRiskAssessmentContainer from \"../SecurityRiskAssessment/SecurityRiskAssessmentContainer.js\"\nimport {parse} from \"query-string\";\n\nclass MainApp extends Component<*> {\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n            {({match, location}) => {\n              let secureToken = '';\n              if (location.search) {\n                const queryString = parse(location.search);\n                secureToken = queryString.token;\n              }\n              return (\n                <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/security-risk-assessment/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SecurityRiskAssessmentContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport type {SecurityRiskAssessmentState} from \"../store/SecurityRiskAssessmentState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {SecurityRiskAssessment} from \"../types/Task\";\n\nconst defaultStartState: SecurityRiskAssessmentState = {\n  securityRiskAssessmentData: null,\n};\n\nexport function securityRiskAssessmentState(state: SecurityRiskAssessmentState = defaultStartState, action: *): SecurityRiskAssessmentState {\n  if (action.type === ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT) {\n    return {\n      securityRiskAssessmentData: action.payload,\n    };\n  }\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\nimport {securityRiskAssessmentState} from \"./securityRiskAssessmentState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState,\n  securityRiskAssessmentState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";"],"sourceRoot":""}