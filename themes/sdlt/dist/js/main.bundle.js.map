{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./src/img/icons/pdf.svg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","FETCH_MY_PRODUCT_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","approver","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","QuestionnaireForBusinessOwnerDataService","isBusinessOwnerSummaryPage","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderSkipCheckbox","renderButtons","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","dispatchBusinessOwnerApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","dispatchBusinessOwnerDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmission","_x20","_x21","approveQuestionnaireSubmissionFromBusinessOwner","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmission","_x22","_x23","denyQuestionnaireSubmissionFromBusinessOwner","_ref13","_callee10","_ref14","_context10","_x16","_x17","_ref15","_callee11","_ref16","_context11","_x18","_x19","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","pdfButton","downloadPdf","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","_this$state2","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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C,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"4063680269bb73ed5a56\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([370,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 600;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\",\n    FETCH_MY_PRODUCT_LIST:\"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\nimport UserParser from \"../utils/UserParser\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string, isBusinessOwnerSummaryPage: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken, isBusinessOwnerSummaryPage} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\", IsBusinessOwnerSummaryPage: \"${isBusinessOwnerSummaryPage}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport QuestionnaireForBusinessOwnerDataService from \"../services/QuestionnaireForBusinessOwnerDataService\";\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      //set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = JSON.stringify(dataArr);\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle, result} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = JSON.stringify(dataArr);\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Applicable\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Applicable') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionFromBusinessOwner,\n  denyQuestionnaireSubmissionFromBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {pdfButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle,\n      currentUser\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n    });\n  }\n}\n\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteTitle={siteTitle}\n          currentUser={currentUser}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    myProductList: state.questionnaireSubmissionListState.myProductList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteTitle} username={currentUser.name} />\n        {list(myProductList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n\n    try {\n      const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n        uuid: this.props.uuid,\n        secureToken: this.props.token,\n        isBusinessOwnerSummaryPage: '1'\n      });\n      this.setState({\n        siteTitle: data.siteTitle,\n        submission: data.submission,\n      });\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\nimport LightButton from \"../Button/LightButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {pdfButton}\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle\n    } = {...this.state};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}