{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/Home/risk-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Logo.svg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./src/img/icons/edit.svg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/utils/SiteConfigParser.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Common/RiskResultContainer.js","webpack:///./src/js/utils/SecurityRiskAssessmentUtil.js","webpack:///./src/js/constants/values.js","webpack:///./src/js/components/Common/SubmissionExpired.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/ComponentSelection/ControlInfo.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/Common/SubmissionNotCompleted.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/SecurityRiskAssessment/LikelihoodLegendContainer.js","webpack:///./src/js/components/SecurityRiskAssessment/ImpactThresholdContainer.js","webpack:///./src/js/components/SecurityRiskAssessment/RiskAssessmentMatrixTableContainer.js","webpack:///./src/js/components/SecurityRiskAssessment/RiskRatingThresholdContainer.js","webpack:///./src/js/services/SecurityRiskAssessmentTaskDataService.js","webpack:///./src/js/actions/securityRiskAssessment.js","webpack:///./src/js/components/SecurityRiskAssessment/SecurityRiskAssessmentContainer.js","webpack:///./src/js/services/ControlValidationAuditDataService.js","webpack:///./src/js/actions/controlValidationAudit.js","webpack:///./src/js/components/ControlValidationAudit/ControlValidationAuditContainer.js","webpack:///./src/js/components/Common/Loading.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/securityRiskAssessmentState.js","webpack:///./src/js/reducers/controlValidationAuditState.js","webpack:///./src/js/reducers/loadingState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/pdf.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST_REQUEST","FETCH_MY_SUBMISSION_LIST_SUCCESS","FETCH_MY_SUBMISSION_LIST_FAILURE","FETCH_AWAITING_APPROVAL_LIST_REQUEST","FETCH_AWAITING_APPROVAL_LIST_SUCCESS","FETCH_AWAITING_APPROVAL_LIST_FAILURE","FETCH_MY_PRODUCT_LIST_REQUEST","FETCH_MY_PRODUCT_LIST_SUCCESS","FETCH_MY_PRODUCT_LIST_FAILURE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE_REQUEST","LOAD_QUESTIONNAIRE_SUBMISSION_STATE_SUCCESS","LOAD_QUESTIONNAIRE_SUBMISSION_STATE_FAILURE","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","SAVE_SELECTED_COMPONENT_REQUEST","SAVE_SELECTED_COMPONENT_SUCCESS","SAVE_SELECTED_COMPONENT_FAILURE","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","LOAD_SELECTED_COMPONENTS","SRA","LOAD_SECURITY_RISK_ASSESSMENT_REQUEST","LOAD_SECURITY_RISK_ASSESSMENT_SUCCESS","LOAD_SECURITY_RISK_ASSESSMENT_FAILURE","LOAD_IMPACT_THRESHOLD","CVA","LOAD_CONTROL_VALIDATION_AUDIT_REQUEST","LOAD_CONTROL_VALIDATION_AUDIT_SUCCESS","LOAD_CONTROL_VALIDATION_AUDIT_FAILURE","EMPTY_CONTROL_VALIDATION_AUDIT_DATA","UPDATE_CONTROL_VALIDATION_AUDIT_DATA","SAVE_CONTROL_VALIDATION_AUDIT_DATA","RE_SYNC_WITH_JIRA_REQUEST","RE_SYNC_WITH_JIRA_SUCCESS","RE_SYNC_WITH_JIRA_FAILURE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","LOAD_SITE_CONFIG","URLUtil","uuid","location","href","token","arguments","returnType","url","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","maxLength","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","componentTarget","questions","parseQuestionsFromJSON","likelihoodJSON","jsonArray","toArray","operator","colour","tsObject","taskSubmissions","taskSubmission","taskType","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","RiskIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","logoPath","siteConfig","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","index","Home_Pillar","Home_TaskButton","Footer","footerCopyrightText","Footer_objectSpread","SiteConfigParser","siteConfigJSON","defaultFooterText","String","fromCharCode","Date","getFullYear","siteTitle","DefaultLogoImage","homePageBackgroundImagePath","DefaultBackgroundImage","pdfHeaderImageLink","DefaultPDFHeaderImage","pdfFooterImageLink","DefaultPDFFooterImage","SiteConfigDataService","responseJSONObject","siteData","parseSiteConfigFromJSON","loadSiteConfig","fetchSiteConfig","HomeContainer","dispatchLoadHomeDataAction","_this$props","HomeContainer_objectSpread","style","backgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","siteConfigState","BaseButton","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","parseUserFromJSON","secureToken","submissionJSON","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskName","approver","riskResults","answerData","answerDataStr","btoa","unescape","encodeURIComponent","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","seletcedComponent","productAspect","controls","control","implementationGuidance","selectedOption","jiraTicketLink","JiraTicketParser","jiraKey","TaskDataService","args","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","productAspects","siblingSubmissions","parseAlltaskSubmissionforQuestionnaire","taskId","taskJSONObject","components","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","logopath","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","maxlength","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","loadingState","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","viewAs","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","alreadySubmittedAlert","buttons","editIcon","pdfIcon","existsUnansweredQuestion","summaryButton","redirectToQuestionnaireSummary","Questionnaire_AnswersPreview","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","fallback","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImageData","image","width","margin","text","arr","isLast","PDFUtil_typeof","results","resultObj","rating","riskName","weights","score","table","headerRows","widths","body","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","_x10","_x11","RiskResultContainer","RiskResultContainer_objectSpread","riskResult","SecurityRiskAssessmentUtil","allTaskSubmissions","ts","SubmissionExpired","_Component","SubmissionExpired_classCallCheck","SubmissionExpired_possibleConstructorReturn","SubmissionExpired_getPrototypeOf","SubmissionExpired_inherits","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","unfinishedMessage","filteredTask","riskQuestionnaireTask","isRQCompleted","sub","hasSelectableComponents","Summary_objectSpread","SubmissionExpired_SubmissionExpired","renderSubmitterInfo","renderTasks","renderApprovals","Common_RiskResultContainer","renderSkipCheckbox","renderButtons","_this2","isSRATaskFinalised","unfinshedRQTaskMessage","unfinishedTaskSubmissionMessage","getSraIsFinalisedAlert","taskNameAndStatus","taskRedirectURL","redirectToTaskSubmission","redirectToComponentSelectionSubmission","redirectToSecurityRiskAssessment","redirectToControlValidationAudit","links","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","viewAnswersButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchBusinessOwnerApproveSubmissionAction","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchBusinessOwnerDenySubmissionAction","dispatchDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmissionAsBusinessOwner","_x20","_x21","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmissionAsBusinessOwner","_x22","_x23","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref13","_callee10","_ref14","_context10","approveQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","denyQuestionnaireSubmission","_x18","_x19","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","SecurityComponentDataService","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","availableComponents","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","loadSelectedComponents","savedComponent","component","isSaved","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","saveSelectedComponents","componentSelectionState","SecurityComponentID","ProductAspect","TaskSubmissionID","updateTaskSubmissionWithSelectedComponents","_args9","taskSubmissionUUID","questionnaireUUID","moveToPreviousQuestionInTaskSubmission","_args11","editCompletedTaskSubmission","_args13","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","backButton","editButton","resultStatus","pdfButton","downloadPdf","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentSelectionUtil","collection","LeftBar_LeftBar_classCallCheck","LeftBar_LeftBar_possibleConstructorReturn","LeftBar_LeftBar_getPrototypeOf","selectedProductAspect","LeftBar_LeftBar_objectSpread","removeComponent","addComponent","_this$state","isSelected","isSelectedComponentExist","isDisable","isComponentSaved","LeftBar_LeftBarItem_LeftBarItem","ControlInfo","ControlInfo_classCallCheck","ControlInfo_possibleConstructorReturn","ControlInfo_getPrototypeOf","isExpanded","React","ControlInfo_objectSpread","react_fa_lib","ComponentInfo","ComponentInfo_objectSpread","childControls","ControlInfo_ControlInfo","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","createJIRATickets","finishWithSelection","saveControls","extraButtons","isStandaloneTask","isGroupbyProductAspect","LeftBar_LeftBar_LeftBar","doescomponentExistForProductAspect","ComponentInfo_ComponentInfo","Fragment","height","marginRight","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","createJiraTickets","SubmissionNotCompleted","SubmissionNotCompleted_classCallCheck","SubmissionNotCompleted_possibleConstructorReturn","SubmissionNotCompleted_getPrototypeOf","SubmissionNotCompleted_inherits","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchSaveLocalControlsAction","dispatchFinishAction","showEditControlButton","editControlButton","SubmissionNotCompleted_SubmissionNotCompleted","_props","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","releaseDate","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","LikelihoodLegendContainer","likelihoodThresholds","LikelihoodLegendContainer_objectSpread","likelihoodThreshold","backgroundColor","ImpactThresholdContainer","impactThresholds","ImpactThresholdContainer_objectSpread","impactThreshold","RiskAssessmentMatrixTableContainer","hasProductAspects","calculatedSRAData","risk","riskIndex","productAspectIndex","rowData","riskId","baseImpactScore","riskDescription","currentLikelihood","currentImpact","currentRiskRating","renderTableRow","productAspectName","riskDetail","display","renderComponents","renderCurrentLikelihood","renderCurrentImapct","renderCurrentRiskRating","componentIndex","implementedControls","recommendedControls","renderControls","controlIndex","impactWeight","likelihoodWeight","impactPenalty","likelihoodPenalty","formula","currentImapct","renderTableHeader","renderTableBody","RiskRatingThresholdContainer","riskRatingThresholds","RiskRatingThresholdContainer_objectSpread","tableHeader","headerText","tableRows","row","rowIndex","column","columnIndex","SecurityRiskAssessmentTaskDataService","securityRiskAssessmentData","UUID","submitterID","sraData","impactThresholdJSONObject","loadSecurityRiskAssessment","securityRiskAssessment_objectSpread","securityRiskAssessment_asyncToGenerator","fetchSecurityRiskAssessmentTasK","SecurityRiskAssessmentContainer","SecurityRiskAssessmentContainer_objectSpread","impactThresholdData","_securityRiskAssessme","isSiblingTaskPending","isSubmitter","finaliseButton","dispatchFinaliseAction","SecurityRiskAssessment_RiskAssessmentMatrixTableContainer","SecurityRiskAssessment_LikelihoodLegendContainer","SecurityRiskAssessment_ImpactThresholdContainer","SecurityRiskAssessment_RiskRatingThresholdContainer","securityRiskAssessmentState","fetchImpactThreshold","ControlValidationAuditDataService","parseCVAFromJSONObject","controlData","controlDataStr","loadControlValidationAudit","controlValidationAudit_objectSpread","controlValidationAudit_asyncToGenerator","fetchControlValidationAuditTaskSubmission","ControlValidationAuditContainer","controlValidationAuditData","cvaSelectedComponents","renderComponentGroupByProductAspect","renderComponent","filterComponent","componentKey","renderControl","controlKey","renderRemoteControls","renderLocalControl","optionIndex","defaultChecked","dispatchUpdateControlValidationQuestionDataAction","controlID","componentID","ControlValidationAuditContainer_objectSpread","dispatchSaveControlValidationAuditDataAction","dispatchReSyncWithJira","submitButton","reSync","renderCVAQuestionsForm","controlValidationAuditState","ControlValidationAuditContainer_asyncToGenerator","saveControlValidationAuditData","selectedOptionDetail","reSyncWithJira","Loading","Loading_classCallCheck","Loading_possibleConstructorReturn","Loading_getPrototypeOf","Loading_inherits","spin","MainApp","loading","Loading_Loading","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","search","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","ControlValidationAudit_ControlValidationAuditContainer","SecurityRiskAssessment_SecurityRiskAssessmentContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","withRouter","some","val","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","savedComponents","isComponentExist","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","availableComponent","seletedComponent","assign","questionnaireSubmissionListState_objectSpread","securityRiskAssessmentState_objectSpread","controlValidationAuditState_objectSpread","selectedcomponent","matches","exec","_matches","_slicedToArray","loadingState_objectSpread","loadingState_defineProperty","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","HashRouter","es","App_MainApp","vendorContainer","App_VendorApp"],"mappings":"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AA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"8d420535063b0d203a75\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([375,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/2d7ab2e275175116af7444a221be9f74.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","var map = {\n\t\"./af\": 214,\n\t\"./af.js\": 214,\n\t\"./ar\": 215,\n\t\"./ar-dz\": 216,\n\t\"./ar-dz.js\": 216,\n\t\"./ar-kw\": 217,\n\t\"./ar-kw.js\": 217,\n\t\"./ar-ly\": 218,\n\t\"./ar-ly.js\": 218,\n\t\"./ar-ma\": 219,\n\t\"./ar-ma.js\": 219,\n\t\"./ar-sa\": 220,\n\t\"./ar-sa.js\": 220,\n\t\"./ar-tn\": 221,\n\t\"./ar-tn.js\": 221,\n\t\"./ar.js\": 215,\n\t\"./az\": 222,\n\t\"./az.js\": 222,\n\t\"./be\": 223,\n\t\"./be.js\": 223,\n\t\"./bg\": 224,\n\t\"./bg.js\": 224,\n\t\"./bm\": 225,\n\t\"./bm.js\": 225,\n\t\"./bn\": 226,\n\t\"./bn.js\": 226,\n\t\"./bo\": 227,\n\t\"./bo.js\": 227,\n\t\"./br\": 228,\n\t\"./br.js\": 228,\n\t\"./bs\": 229,\n\t\"./bs.js\": 229,\n\t\"./ca\": 230,\n\t\"./ca.js\": 230,\n\t\"./cs\": 231,\n\t\"./cs.js\": 231,\n\t\"./cv\": 232,\n\t\"./cv.js\": 232,\n\t\"./cy\": 233,\n\t\"./cy.js\": 233,\n\t\"./da\": 234,\n\t\"./da.js\": 234,\n\t\"./de\": 235,\n\t\"./de-at\": 236,\n\t\"./de-at.js\": 236,\n\t\"./de-ch\": 237,\n\t\"./de-ch.js\": 237,\n\t\"./de.js\": 235,\n\t\"./dv\": 238,\n\t\"./dv.js\": 238,\n\t\"./el\": 239,\n\t\"./el.js\": 239,\n\t\"./en-SG\": 240,\n\t\"./en-SG.js\": 240,\n\t\"./en-au\": 241,\n\t\"./en-au.js\": 241,\n\t\"./en-ca\": 242,\n\t\"./en-ca.js\": 242,\n\t\"./en-gb\": 243,\n\t\"./en-gb.js\": 243,\n\t\"./en-ie\": 244,\n\t\"./en-ie.js\": 244,\n\t\"./en-il\": 245,\n\t\"./en-il.js\": 245,\n\t\"./en-nz\": 246,\n\t\"./en-nz.js\": 246,\n\t\"./eo\": 247,\n\t\"./eo.js\": 247,\n\t\"./es\": 248,\n\t\"./es-do\": 249,\n\t\"./es-do.js\": 249,\n\t\"./es-us\": 250,\n\t\"./es-us.js\": 250,\n\t\"./es.js\": 248,\n\t\"./et\": 251,\n\t\"./et.js\": 251,\n\t\"./eu\": 252,\n\t\"./eu.js\": 252,\n\t\"./fa\": 253,\n\t\"./fa.js\": 253,\n\t\"./fi\": 254,\n\t\"./fi.js\": 254,\n\t\"./fo\": 255,\n\t\"./fo.js\": 255,\n\t\"./fr\": 256,\n\t\"./fr-ca\": 257,\n\t\"./fr-ca.js\": 257,\n\t\"./fr-ch\": 258,\n\t\"./fr-ch.js\": 258,\n\t\"./fr.js\": 256,\n\t\"./fy\": 259,\n\t\"./fy.js\": 259,\n\t\"./ga\": 260,\n\t\"./ga.js\": 260,\n\t\"./gd\": 261,\n\t\"./gd.js\": 261,\n\t\"./gl\": 262,\n\t\"./gl.js\": 262,\n\t\"./gom-latn\": 263,\n\t\"./gom-latn.js\": 263,\n\t\"./gu\": 264,\n\t\"./gu.js\": 264,\n\t\"./he\": 265,\n\t\"./he.js\": 265,\n\t\"./hi\": 266,\n\t\"./hi.js\": 266,\n\t\"./hr\": 267,\n\t\"./hr.js\": 267,\n\t\"./hu\": 268,\n\t\"./hu.js\": 268,\n\t\"./hy-am\": 269,\n\t\"./hy-am.js\": 269,\n\t\"./id\": 270,\n\t\"./id.js\": 270,\n\t\"./is\": 271,\n\t\"./is.js\": 271,\n\t\"./it\": 272,\n\t\"./it-ch\": 273,\n\t\"./it-ch.js\": 273,\n\t\"./it.js\": 272,\n\t\"./ja\": 274,\n\t\"./ja.js\": 274,\n\t\"./jv\": 275,\n\t\"./jv.js\": 275,\n\t\"./ka\": 276,\n\t\"./ka.js\": 276,\n\t\"./kk\": 277,\n\t\"./kk.js\": 277,\n\t\"./km\": 278,\n\t\"./km.js\": 278,\n\t\"./kn\": 279,\n\t\"./kn.js\": 279,\n\t\"./ko\": 280,\n\t\"./ko.js\": 280,\n\t\"./ku\": 281,\n\t\"./ku.js\": 281,\n\t\"./ky\": 282,\n\t\"./ky.js\": 282,\n\t\"./lb\": 283,\n\t\"./lb.js\": 283,\n\t\"./lo\": 284,\n\t\"./lo.js\": 284,\n\t\"./lt\": 285,\n\t\"./lt.js\": 285,\n\t\"./lv\": 286,\n\t\"./lv.js\": 286,\n\t\"./me\": 287,\n\t\"./me.js\": 287,\n\t\"./mi\": 288,\n\t\"./mi.js\": 288,\n\t\"./mk\": 289,\n\t\"./mk.js\": 289,\n\t\"./ml\": 290,\n\t\"./ml.js\": 290,\n\t\"./mn\": 291,\n\t\"./mn.js\": 291,\n\t\"./mr\": 292,\n\t\"./mr.js\": 292,\n\t\"./ms\": 293,\n\t\"./ms-my\": 294,\n\t\"./ms-my.js\": 294,\n\t\"./ms.js\": 293,\n\t\"./mt\": 295,\n\t\"./mt.js\": 295,\n\t\"./my\": 296,\n\t\"./my.js\": 296,\n\t\"./nb\": 297,\n\t\"./nb.js\": 297,\n\t\"./ne\": 298,\n\t\"./ne.js\": 298,\n\t\"./nl\": 299,\n\t\"./nl-be\": 300,\n\t\"./nl-be.js\": 300,\n\t\"./nl.js\": 299,\n\t\"./nn\": 301,\n\t\"./nn.js\": 301,\n\t\"./pa-in\": 302,\n\t\"./pa-in.js\": 302,\n\t\"./pl\": 303,\n\t\"./pl.js\": 303,\n\t\"./pt\": 304,\n\t\"./pt-br\": 305,\n\t\"./pt-br.js\": 305,\n\t\"./pt.js\": 304,\n\t\"./ro\": 306,\n\t\"./ro.js\": 306,\n\t\"./ru\": 307,\n\t\"./ru.js\": 307,\n\t\"./sd\": 308,\n\t\"./sd.js\": 308,\n\t\"./se\": 309,\n\t\"./se.js\": 309,\n\t\"./si\": 310,\n\t\"./si.js\": 310,\n\t\"./sk\": 311,\n\t\"./sk.js\": 311,\n\t\"./sl\": 312,\n\t\"./sl.js\": 312,\n\t\"./sq\": 313,\n\t\"./sq.js\": 313,\n\t\"./sr\": 314,\n\t\"./sr-cyrl\": 315,\n\t\"./sr-cyrl.js\": 315,\n\t\"./sr.js\": 314,\n\t\"./ss\": 316,\n\t\"./ss.js\": 316,\n\t\"./sv\": 317,\n\t\"./sv.js\": 317,\n\t\"./sw\": 318,\n\t\"./sw.js\": 318,\n\t\"./ta\": 319,\n\t\"./ta.js\": 319,\n\t\"./te\": 320,\n\t\"./te.js\": 320,\n\t\"./tet\": 321,\n\t\"./tet.js\": 321,\n\t\"./tg\": 322,\n\t\"./tg.js\": 322,\n\t\"./th\": 323,\n\t\"./th.js\": 323,\n\t\"./tl-ph\": 324,\n\t\"./tl-ph.js\": 324,\n\t\"./tlh\": 325,\n\t\"./tlh.js\": 325,\n\t\"./tr\": 326,\n\t\"./tr.js\": 326,\n\t\"./tzl\": 327,\n\t\"./tzl.js\": 327,\n\t\"./tzm\": 328,\n\t\"./tzm-latn\": 329,\n\t\"./tzm-latn.js\": 329,\n\t\"./tzm.js\": 328,\n\t\"./ug-cn\": 330,\n\t\"./ug-cn.js\": 330,\n\t\"./uk\": 331,\n\t\"./uk.js\": 331,\n\t\"./ur\": 332,\n\t\"./ur.js\": 332,\n\t\"./uz\": 333,\n\t\"./uz-latn\": 334,\n\t\"./uz-latn.js\": 334,\n\t\"./uz.js\": 333,\n\t\"./vi\": 335,\n\t\"./vi.js\": 335,\n\t\"./x-pseudo\": 336,\n\t\"./x-pseudo.js\": 336,\n\t\"./yo\": 337,\n\t\"./yo.js\": 337,\n\t\"./zh-cn\": 338,\n\t\"./zh-cn.js\": 338,\n\t\"./zh-hk\": 339,\n\t\"./zh-hk.js\": 339,\n\t\"./zh-tw\": 340,\n\t\"./zh-tw.js\": 340\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 600;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type LoadSiteConfigAction = {\n  type: string,\n  payload: string\n}\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type LoadSelectedComponentsAction= {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    // fetch my questinnaire submission List\n    FETCH_MY_SUBMISSION_LIST_REQUEST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST/REQUEST\",\n    FETCH_MY_SUBMISSION_LIST_SUCCESS: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST/SUCCESS\",\n    FETCH_MY_SUBMISSION_LIST_FAILURE: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST/FAILURE\",\n    // fetch AWAITING_APPROVAL_LIST\n    FETCH_AWAITING_APPROVAL_LIST_REQUEST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST/REQUEST\",\n    FETCH_AWAITING_APPROVAL_LIST_SUCCESS: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST/SUCCESS\",\n    FETCH_AWAITING_APPROVAL_LIST_FAILURE: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST/FAILURE\",\n    // fetch _MY_PRODUCT_LIST\n    FETCH_MY_PRODUCT_LIST_REQUEST: \"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST/REQUEST\",\n    FETCH_MY_PRODUCT_LIST_SUCCESS: \"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST/SUCCESS\",\n    FETCH_MY_PRODUCT_LIST_FAILURE: \"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST/FAILURE\",\n    // LOAD QUESTIONNAIRE SUBMISSION STATE\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE_REQUEST: \"QUESTIONNAIRE/LOAD_QUESTIONNAIRE_SUBMISSION_STATE/REQUEST\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE_SUCCESS: \"QUESTIONNAIRE/LOAD_QUESTIONNAIRE_SUBMISSION_STATE/SUCCESS\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE_FAILURE: \"QUESTIONNAIRE/LOAD_QUESTIONNAIRE_SUBMISSION_STATE/FAILURE\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n    // fake action to display loading icon when user click on CREATE JIRA TICKETS/Save Controls for CS task\n    SAVE_SELECTED_COMPONENT_REQUEST: \"TASK/SAVE_SELECTED_COMPONENT/REQUEST\",\n    SAVE_SELECTED_COMPONENT_SUCCESS: \"TASK/SAVE_SELECTED_COMPONENT/SUCCESS\",\n    SAVE_SELECTED_COMPONENT_FAILURE: \"TASK/SAVE_SELECTED_COMPONENT/FAILURE\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\",\n    LOAD_SELECTED_COMPONENTS: \"COMPONENTSELECTION/LOAD_SELECTED_COMPONENTS\",\n  },\n  SRA: {\n    LOAD_SECURITY_RISK_ASSESSMENT_REQUEST: \"SRA/LOAD_SECURITY_RISK_ASSESSMENT/REQUEST\",\n    LOAD_SECURITY_RISK_ASSESSMENT_SUCCESS: \"SRA/LOAD_SECURITY_RISK_ASSESSMENT/SUCCESS\",\n    LOAD_SECURITY_RISK_ASSESSMENT_FAILURE: \"SRA/LOAD_SECURITY_RISK_ASSESSMENT/FAILURE\",\n    LOAD_IMPACT_THRESHOLD: \"SRA/LOAD_IMPACT_THRESHOLD\",\n  },\n  CVA: {\n    LOAD_CONTROL_VALIDATION_AUDIT_REQUEST: \"CVA/LOAD_CONTROL_VALIDATION_AUDIT/REQUEST\",\n    LOAD_CONTROL_VALIDATION_AUDIT_SUCCESS: \"CVA/LOAD_CONTROL_VALIDATION_AUDIT/SUCCESS\",\n    LOAD_CONTROL_VALIDATION_AUDIT_FAILURE: \"CVA/LOAD_CONTROL_VALIDATION_AUDIT/FAILURE\",\n    EMPTY_CONTROL_VALIDATION_AUDIT_DATA: \"CVA/EMPTY_CONTROL_VALIDATION_AUDIT_DATA\",\n    UPDATE_CONTROL_VALIDATION_AUDIT_DATA: \"CVA/UPDATE_CONTROL_VALIDATION_AUDIT_DATA\",\n    SAVE_CONTROL_VALIDATION_AUDIT_DATA: \"CVA/SAVE_CONTROL_VALIDATION_AUDIT_DATA\",\n    RE_SYNC_WITH_JIRA_REQUEST: \"CVA/RE_SYNC_WITH_JIRA/REQUEST\",\n    RE_SYNC_WITH_JIRA_SUCCESS: \"CVA/RE_SYNC_WITH_JIRA/SUCCESS\",\n    RE_SYNC_WITH_JIRA_FAILURE: \"CVA/RE_SYNC_WITH_JIRA/FAILURE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    LOAD_SITE_CONFIG: \"SITE_CONFIG/LOAD_SITE_CONFIG\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/review/${uuid}?token=${token}`;\n      return;\n    }\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\", returnType: string = \"redirect\") {\n      let url= `/task/submission/${uuid}`;\n\n      if (token) {\n        url = `/task/submission/${uuid}?token=${token}`;\n      }\n\n      if (returnType == \"urlString\") {\n        return url;\n      }\n\n      window.location.href = `/#/${url}`;\n    }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\", returnType: string = \"redirect\") {\n    let url = `/component-selection/submission/${uuid}`;\n\n    if (token) {\n      url = `/component-selection/submission/${uuid}?token=${token}`;\n    }\n\n    if (returnType == \"urlString\") {\n      return url;\n    }\n\n    window.location.href = `/#/${url}`;\n  }\n\n  static redirectToSecurityRiskAssessment(uuid: string, token: string = \"\", returnType: string = \"redirect\") {\n    let url = `/security-risk-assessment/submission/${uuid}`;\n\n    if (token) {\n      url = `/security-risk-assessment/submission/${uuid}?token=${token}`;\n    }\n\n    if (returnType == \"urlString\") {\n      return url;\n    }\n\n    window.location.href = `/#/${url}`;\n  }\n\n  static redirectToControlValidationAudit(uuid: string, token: string = \"\", returnType: string = \"redirect\") {\n    let url = `/control-validation-audit/submission/${uuid}`;\n\n    if (token) {\n      url = `/control-validation-audit/submission/${uuid}?token=${token}`;\n    }\n\n    if (returnType == \"urlString\") {\n      return url;\n    }\n\n    window.location.href = `/#/${url}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"product aspects\", \"date\", \"url\", \"radio\", \"checkbox\", \"release date\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            maxLength: Number.parseInt(_.toString(_.get(inputSchema, \"MaxLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\nimport type {LikelihoodThreshold} from \"../types/Task\";\nimport toArray from \"lodash/toArray\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n    const componentTarget = toString(get(jsonObject, \"ComponentTarget\", \"\"));\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, componentTarget, questions};\n  }\n\n  static parseLikelihoodJSONObject(likelihoodJSON: string | Object): LikelihoodThreshold {\n    const jsonArray = (typeof likelihoodJSON === \"string\" ? JSON.parse(likelihoodJSON) : likelihoodJSON);\n\n    if (jsonArray) {\n      return toArray(jsonArray).map((jsonObject) => {\n        return {\n          name: toString(get(jsonObject, \"Name\")),\n          value: toString(get(jsonObject, \"Value\")),\n          operator: toString(get(jsonObject, \"Operator\")),\n          colour: toString(get(jsonObject, \"Colour\"))\n        }\n      });\n    }\n\n    return [];\n  }\n\n  static parseAlltaskSubmissionforQuestionnaire(tsObject) {\n    if (!tsObject) {\n      return [];\n    }\n    const taskSubmissions = get(tsObject, \"QuestionnaireSubmission.TaskSubmissions\", \"\")\n\n    if(get(tsObject, \"Submission.TaskType\", \"\") === 'questionnaire') {\n      return [];\n    }\n\n    if (!taskSubmissions) {\n      return [];\n    }\n\n    return taskSubmissions.map((taskSubmission) => {\n      return {\n        uuid: toString(get(taskSubmission, \"UUID\")),\n        taskType: toString(get(taskSubmission, \"TaskType\")),\n        status: toString(get(taskSubmission, \"Status\"))\n      }\n    });\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\nimport RiskIcon from \"../../img/Home/risk-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n      ComponentTarget\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = PocIcon;\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n        case \"risk_questionnaire\":\n          icon = RiskIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport type {SiteConfig} from \"../../store/SiteConfig\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState,\n  siteConfig: SiteConfig,\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n    const {logoPath} = {...this.props.siteConfig};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={logoPath} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={'pillar_'+(index+1)}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task, index) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = `/component-selection/standalone/${task.id}?componentTarget=${task.componentTarget}`;\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name} key={'standalone_task_'+(index+1)}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  footerCopyrightText: string;\n};\n\nclass Footer extends Component<Props> {\n  static defaultProps = {\n    footerCopyrightText: \"\",\n  };\n\n  render() {\n    const {footerCopyrightText} = {...this.props};\n    return (\n      <footer className=\"Footer\">\n        <div>\n        {footerCopyrightText}\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport type {Siteconfig} from \"../types/SiteConfig\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport DefaultLogoImage from \"../../img/Logo.svg\";\nimport DefaultBackgroundImage from \"../../img/Home/background.jpg\";\nimport DefaultPDFHeaderImage from \"../../img/PDF/heading.jpg\";\nimport DefaultPDFFooterImage from \"../../img/PDF/footer.jpg\";\n\nexport default class SiteConfigParser {\n  static parseSiteConfigFromJSON(siteConfigJSON: string | Object): Siteconfig {\n    const jsonObject = (typeof siteConfigJSON === \"string\" ? JSON.parse(siteConfigJSON) : siteConfigJSON);\n    const defaultFooterText = String.fromCharCode(169) + ' NZTA ' + (new Date()).getFullYear();\n\n    // Ensure defaults are configured for when user-contributed config doesn't yet exist\n    return {\n      siteTitle: toString(get(jsonObject, \"Title\") || 'NZTA SDLT'),\n      footerCopyrightText: toString(get(jsonObject, \"FooterCopyrightText\", '') || defaultFooterText),\n      logoPath: toString(get(jsonObject, \"LogoPath\", '') || DefaultLogoImage),\n      homePageBackgroundImagePath: toString(get(jsonObject, \"HomePageBackgroundImagePath\", '') || DefaultBackgroundImage),\n      pdfHeaderImageLink: toString(get(jsonObject, \"PdfHeaderImageLink\", '') || DefaultPDFHeaderImage),\n      pdfFooterImageLink: toString(get(jsonObject, \"PdfFooterImageLink\", '') || DefaultPDFFooterImage)\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport SiteConfigParser from \"../utils/SiteConfigParser\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n    FooterCopyrightText\n    LogoPath\n    HomePageBackgroundImagePath\n    PdfHeaderImageLink\n    PdfFooterImageLink\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const siteData = _.get(responseJSONObject, \"data.readSiteConfig.0\", null);\n    const siteConfig = SiteConfigParser.parseSiteConfigFromJSON(siteData);\n    return siteConfig;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {LoadSiteConfigAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteConfig(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: LoadSiteConfigAction = {\n        type: ActionType.SITE_CONFIG.LOAD_SITE_CONFIG,\n        payload: siteConfig,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n    siteConfig: state.siteConfigState.siteConfig,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n      dispatch(loadSiteConfig());\n    },\n  };\n};\n\ntype Props = {\n  siteConfig?: SiteConfig | null,\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void,\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    const {\n      siteConfig,\n      homeState,\n    } = {...this.props};\n\n    if (!homeState || !siteConfig) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${siteConfig.homePageBackgroundImagePath}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={homeState} siteConfig={siteConfig}/>\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\nimport SiteConfigParser from \"../utils/SiteConfigParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n    FooterCopyrightText\n    LogoPath\n    HomePageBackgroundImagePath\n    PdfHeaderImageLink\n    PdfFooterImageLink\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      siteConfig: SiteConfigParser.parseSiteConfigFromJSON(siteData),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string, secureToken:string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    RiskResultData,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n    FooterCopyrightText\n    LogoPath\n    HomePageBackgroundImagePath\n    PdfHeaderImageLink\n    PdfFooterImageLink\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !submissionJSON || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteConfig: SiteConfigParser.parseSiteConfigFromJSON(siteData),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: _.has(submissionJSON, 'RiskResultData') ? JSON.parse(_.get(submissionJSON, \"RiskResultData\", \"[]\")) : \"[]\"\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(unescape(encodeURIComponent(JSON.stringify(answerData))));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(unescape(encodeURIComponent(JSON.stringify(answerData))));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        ReleaseDate\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['releaseDate'] = _.get(item, 'ReleaseDate', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n\n  static async approveQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      let seletcedComponent = SecurityComponentParser.parseFromJSONObject(get(jsonObject, \"SecurityComponent\"));\n      seletcedComponent.productAspect = toString(get(jsonObject, \"ProductAspect\", \"\"));\n      return seletcedComponent;\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\", \"\")),\n      name: toString(get(jsonObject, \"Name\", \"\")),\n      description: toString(get(jsonObject, \"Description\")),\n      controls: (get(jsonObject, \"Controls\") || []).map((control) => {\n        return {\n          id: toString(get(control, \"ID\", \"\")),\n          name: toString(get(control, \"Name\", \"\")),\n          description: toString(get(control, \"Description\", \"\")),\n          implementationGuidance: toString(get(control, \"ImplementationGuidance\", \"\"))\n        }\n      })\n    }\n  }\n\n  static parseCVAFromJSONObject(jsonArray: *): SecurityComponent {\n    return jsonArray.map((jsonObject) => {\n\n      return {\n        id: toString(get(jsonObject, \"id\", \"\")),\n        name: toString(get(jsonObject, \"name\", \"\")),\n        productAspect:toString(get(jsonObject, \"productAspect\", \"\")),\n        controls: (get(jsonObject, \"controls\") || []).map((control) => {\n          return {\n            id: toString(get(control, \"id\", \"\")),\n            name: toString(get(control, \"name\", \"\")),\n            selectedOption: toString(get(control, \"selectedOption\", \"\")),\n            description: toString(get(control, \"description\", \"\")),\n            implementationGuidance: toString(get(control, \"implementationGuidance\", \"\"))\n          }\n        }),\n        jiraTicketLink: toString(get(jsonObject, \"jiraTicketLink\", \"\")),\n      }\n    });\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n      TaskSubmissions {\n        UUID\n        Status\n        TaskType\n      }\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      ProductAspect\n      SecurityComponent {\n        ID\n        Name\n        Description\n        Controls {\n          ID\n          Name\n          Description\n          ImplementationGuidance\n        }\n      }\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n    RiskResultData\n    ComponentTarget\n    ProductAspects\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n      riskResults: _.has(submissionJSONObject, 'RiskResultData') ? JSON.parse(_.get(submissionJSONObject, \"RiskResultData\", \"[]\")) : \"[]\",\n      productAspects:  _.has(submissionJSONObject, 'ProductAspects') ? JSON.parse(_.get(submissionJSONObject, \"ProductAspects\", [])) : [],\n      componentTarget: toString(get(submissionJSONObject, \"ComponentTarget\", \"\")),\n      siblingSubmissions: TaskParser.parseAlltaskSubmissionforQuestionnaire(submissionJSONObject)\n    };\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(unescape(encodeURIComponent(JSON.stringify(answerData))));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      components: Array,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, components, jiraKey} = {...args};\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n Components: \"${window.btoa(JSON.stringify(components))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\n// load questionanqire submissions\n// this is same for SA, User, BO, CISO and normal user\nexport function loadQuestionnaireSubmissionState(submissionHash: string, secureToken: string): ThunkAction {\n  if(typeof(secureToken) == \"undefined\") {\n    secureToken = '';\n  }\n\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    await dispatch({type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE_REQUEST});\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash, secureToken);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      await dispatch({ type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE_FAILURE, error: error});\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE_SUCCESS,\n    payload\n  }\n}\n\n// TODO: split big functions\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\n// As a User submit the questionnaire\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// As a user submit the  Questionnaire submission for approval\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// Assign to SA\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a SA / CISO\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a SA / CISO\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a BO\nexport function approveQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a BO\nexport function denyQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Edit answers of the Questionnaire Submission as a User\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// load all the Questionnaire Submissions of the logged in user\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST_REQUEST});\n\n    try {\n      // Call re sync with jira data api\n      const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST_SUCCESS,\n        payload: data\n      });\n    }\n    catch (error) {\n      await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\n// Questionnaire Submissions list of pending approval list\n// for SA, CISO and Business owner\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n\n    await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST_REQUEST});\n\n    try {\n      // Call re sync with jira data api\n      const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST_SUCCESS,\n        payload: data\n      });\n    }\n    catch (error) {\n      await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\n// Questionnaire Submissions list for the business owner\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n\n    await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST_REQUEST});\n\n    try {\n      // Call re sync with jira data api\n      const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    }\n    catch (error) {\n      await dispatch({ type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean,\n  logopath?: string,\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    logopath: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username, logopath} = {...this.props};\n    \n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={logopath} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, siteConfig, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={siteConfig.siteTitle} username={user.name} logopath={siteConfig.logoPath}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{\n            __html: question.description\n          }}\n        >\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      // set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\" || type === \"release date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n\n          if (type === \"product aspects\" && value &&\n            !/^[0-9a-zA-Z\\s\\n]+$/i.test(value)) {\n            errors[id] = \"- Please enter alpha-numeric characters only.\";\n            return;\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue,\n                  maxLength\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder} maxlength={maxLength > 0 ? maxLength : 4096}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <label>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  {option.label}\n                                </label>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <label>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"checkbox\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  {option.label}\n                                </label>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\" || type === \"release date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\" || type === \"product aspects\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n    loadingState: state.loadingState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n  loadingState: object<*>\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction, loadingState} = {...this.props};\n    const {title, siteConfig, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission || !siteConfig) {\n      return null;\n    }\n\n    if (loadingState['QUESTIONNAIRE/LOAD_QUESTIONNAIRE_SUBMISSION_STATE']) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteConfig.siteTitle} username={user.name} logopath={siteConfig.logoPath}/>\n          <div className=\"questionnaire-message\">\n            <h3>\n              The questionnaire is not in progress...\n            </h3>\n          </div>\n          <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteConfig.siteTitle} logopath={siteConfig.logoPath} username={user.name} />\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\" || input.type === \"release date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea and \"product aspects\"\n        if (input.type === \"textarea\" || input.type === \"product aspects\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = dataArr.join(', ');\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport URLUtil from \"../../utils/URLUtil\";\n\ntype Props = {\n  secureToken: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      viewAs,\n      secureToken,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    const alreadySubmittedAlert = (\n      <div className=\"alert alert-success text-center\">\n        This questionnaire has already been submitted.\n      </div>\n    )\n\n    const buttons = (\n      <div className=\"buttons\">\n      <LightButton title=\"EDIT ANSWERS\"\n                   iconImage={editIcon}\n                   classes={[\"button\"]}\n                   onClick={handleEditAnswerButtonClick}/>\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n      <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                  classes={[\"button\"]}\n                  disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                  onClick={handleSubmitButtonClick}/>\n      </div>\n    );\n\n    const summaryButton = (\n      <div className=\"buttons\">\n      <LightButton title=\"BACK TO SUMMARY\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireSummary(submission.submissionUUID, secureToken)}/>\n      </div>\n    );\n\n    return (\n      <div className=\"Review\">\n        {submission.status !== \"in_progress\" && alreadySubmittedAlert}\n        <AnswersPreview questions={submission.questions}/>\n        {(viewAs === 'submitter' && (submission.status === \"in_progress\" || submission.status === \"submitted\")) && buttons}\n        {(viewAs !== 'submitter') && summaryButton}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\nimport SiteConfigParser from \"../utils/SiteConfigParser\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL || fallback);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteConfig, result, riskResults} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n    // Header image\n    const headingImageData = await getImageDataByURL(siteConfig.pdfHeaderImageLink);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteConfig.siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea or \"product aspects\"\n          if (input.type === \"textarea\" || input.type === \"product aspects\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = dataArr.join(', ');\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    if(typeof riskResults === 'object' && riskResults.length > 0) {\n      let results = [\n        [\n          { text: 'Risk Name', bold: true, alignment: 'center' },\n          { text: 'Weights', bold: true, alignment: 'center' },\n          { text: 'Score', bold: true, alignment: 'center' },\n          { text: 'Rating', bold: true, alignment: 'center' },\n        ]\n      ];\n      riskResults.forEach(function(result, i){\n        let resultObj = { text: result.rating, alignment: 'center', color: '#'+result.colour, bold: true };\n\n        if (result.rating == 'Unknown') {\n          resultObj = { text: 'Unknown', alignment: 'center', color: '#000000', bold: true };\n        }\n\n\n        results.push([\n          { text: result.riskName },\n          result.weights,\n          result.score,\n          resultObj\n        ])\n      })\n      content.push({\n        table: {\n          headerRows: 1,\n          //actual rendered width of footer and header images\n          widths: [237, 75, 75, 75],\n          body: results\n        },\n        width: 500,\n        margin: [0, 0, 0, defaultFontSize]\n      });\n    }\n\n    // Footer image\n    const footerImageData = await getImageDataByURL(siteConfig.pdfFooterImageLink);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Unable to generate your PDF. Maybe you have a browser Ad-Block extension enabled?\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {\n      title,\n      siteConfig,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !siteConfig) {\n      return null;\n    }\n\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name} logopath={siteConfig.logoPath}/>\n        <Review siteTitle={siteConfig.siteTitle}\n          viewAs={viewAs}\n          submission={submission}\n          secureToken={secureToken}\n          handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n          handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n          handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle, siteConfig} = {...this.props.submissionState};\n    if (!submission || !siteConfig) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteConfig: siteConfig,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n// this file is used on both Risk questionnaire and task\nimport React, {Component} from \"react\";\nimport type {RiskResult} from \"../../types/Questionnaire\";\n\ntype Props = {\n  riskResults: Array<RiskResult> | null,\n};\n\nclass RiskResultContainer extends Component<Props> {\n  render() {\n    const {riskResults} = {...this.props};\n\n    if (!riskResults || riskResults.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"risks\">\n        <h3>Risk Result</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_table_header\">\n                <th>Risk Name</th>\n                <th>Weights</th>\n                <th>Score</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {riskResults.map((riskResult, index): RiskResult => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {riskResult.riskName}\n                    </td>\n                    <td>\n                      {riskResult.weights}\n                    </td>\n                    <td>\n                      {riskResult.score}\n                    </td>\n                    <td style={{color:'#' + riskResult.colour}}>\n                      {riskResult.rating}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskResultContainer;\n","import React, {Component} from \"react\";\nimport {Submission} from \"../types/Questionnaire\"\nimport {\n  SRA_IS_FINALISED_MESSAGE\n} from '../constants/values';\n\n\nexport default class SecurityRiskAssessmentUtil {\n  static isSRATaskFinalised(allTaskSubmissions) {\n    return allTaskSubmissions.filter(\n      (ts) => ts.taskType === 'security risk assessment' && ts.status === 'complete'\n    ).length > 0;\n  };\n\n  static isSiblingTaskPending(allTaskSubmissions) {\n    const status = ['start', 'in_progress', 'waiting_for_approval'];\n    return allTaskSubmissions.filter(\n      (ts) => ts.taskType !== 'security risk assessment' && status.includes(ts.status)\n    ).length > 0;\n  };\n\n  static getSraIsFinalisedAlert() {\n    return (\n      <div className=\"alert alert-success text-center\">\n        {SRA_IS_FINALISED_MESSAGE}\n      </div>\n    );\n  };\n}\n","// @flow\n\n//this is the highest possible threshold score on the security risk assessment matrix\nexport const DEFAULT_SRA_MATRIX_THRESHOLD_SCORE = 100;\nexport const DEFAULT_SRA_UNFINISHED_TASKS_MESSAGE = 'Please complete all tasks to see the Security Risk Assessment';\nexport const DEFAULT_CVA_CONTROLS_ANSWER_YES = 'Yes';\nexport const DEFAULT_CVA_CONTROLS_ANSWER_NO = 'No';\nexport const DEFAULT_CVA_CONTROLS_ANSWER_NOT_APPLICABLE = 'N/A';\nexport const CTL_STATUS_1 = 'Realised';\nexport const CTL_STATUS_2 = 'Intended';\nexport const CTL_STATUS_3 = 'Not Applicable';\nexport const DEFAULT_NO_CONTROLS_MESSAGE = 'There are no controls for the component.';\nexport const DEFAULT_CVA_UNFINISHED_TASKS_MESSAGE = 'No components have been selected. Please complete the component selection task with at least one component selected.';\nexport const SRA_IS_FINALISED_MESSAGE = 'The security risk assessment is finalised.  The tasks can no longer be edited and will be included in the Certification and Accreditation Report. If you need to change your task answers, you will need to submit a new questionnaire.';\n","// @flow\nimport React, {Component} from \"react\";\n\nexport class SubmissionExpired extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          The submission you are attempting to view does not exist or has expired.\n          Please follow <a href=\"/\">this link</a> to the homepage where you can create a new submission.\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\nimport {\n  DEFAULT_SRA_UNFINISHED_TASKS_MESSAGE\n} from \"../../constants/values\";\nimport SecurityRiskAssessmentUtil from \"../../utils/SecurityRiskAssessmentUtil\";\nimport {SubmissionExpired} from \"../Common/SubmissionExpired\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  unfinishedTaskSubmissionMessage()\n  {\n    const taskSubmissions = this.props.submission.taskSubmissions;\n    let unfinishedMessage = '';\n\n    const filteredTask = taskSubmissions.filter((taskSubmission)=> {\n      return taskSubmission.taskType === 'risk questionnaire'\n    });\n\n    if (filteredTask.length > 0) {\n      const riskQuestionnaireTask = filteredTask[0];\n      const isRQCompleted = (riskQuestionnaireTask.status === 'complete' || riskQuestionnaireTask.status == \"approved\");\n      if(riskQuestionnaireTask && !isRQCompleted) {\n        unfinishedMessage = `Please complete \"${riskQuestionnaireTask.taskName}\" to see the Security Risk Assessment`;\n      }\n    }\n\n    return unfinishedMessage;\n  }\n\n  hasSelectableComponents(sub)\n  {\n    let taskSubmissions = sub.taskSubmissions,\n      hasSelectableComponents = false;\n\n    taskSubmissions.forEach((submission, index) => {\n      let isComponentSelection = (submission.taskType === 'selection');\n      if(isComponentSelection) {\n        hasSelectableComponents = true;\n      }\n    });\n\n    return hasSelectableComponents;\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Questionnaire Submission has not been completed...\n          </h3>\n        </div>\n      );\n    }\n\n    if (submission.status === \"expired\") {\n      return (\n        <SubmissionExpired/>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        <RiskResultContainer riskResults={submission.riskResults}/>\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    const isSRATaskFinalised = SecurityRiskAssessmentUtil.isSRATaskFinalised(submission.taskSubmissions);\n\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    const unfinshedRQTaskMessage = this.unfinishedTaskSubmissionMessage() ? (\n      <div className=\"alert alert-warning\">{this.unfinishedTaskSubmissionMessage()}</div>\n    ) : null;\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {unfinshedRQTaskMessage}\n        {isSRATaskFinalised ? SecurityRiskAssessmentUtil.getSraIsFinalisedAlert() : null}\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n\n          let taskRedirectURL = URLUtil.redirectToTaskSubmission(uuid, token, \"urlString\");\n\n          if (taskType === \"selection\") {\n            taskRedirectURL = URLUtil.redirectToComponentSelectionSubmission(uuid, token, \"urlString\");\n          }\n\n          if (taskType === \"security risk assessment\") {\n            taskRedirectURL = URLUtil.redirectToSecurityRiskAssessment(uuid, token, \"urlString\");\n          }\n\n          if (taskType === \"control validation audit\") {\n            taskRedirectURL = URLUtil.redirectToControlValidationAudit(uuid, token, \"urlString\");\n          }\n\n          const links = (\n            <Link to={taskRedirectURL}>\n              {taskNameAndStatus}\n            </Link>\n          );\n\n          return (\n            <div key={uuid}>\n              {unfinshedRQTaskMessage && taskType === 'security risk assessment' ? null : links}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      user,\n      viewAs,\n      token,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    const viewAnswersButton = user ? (\n      <LightButton title=\"VIEW ANSWERS\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireReview(submission.submissionUUID, token)}\n      />\n    ) : '';\n\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {viewAnswersButton}\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {viewAnswersButton}\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Required\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Required') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionAsBusinessOwner,\n  denyQuestionnaireSubmissionAsBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n    loadingState: state.loadingState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    // load the Submission data on the summary screen\n    dispatchLoadSubmissionAction(submissionHash: string, secureToken: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash, secureToken));\n    },\n\n    // as a BO approve/ deny the submission\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(approveQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(denyQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n\n    // user can edit answers and submit the questionnaire for approval\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n\n    // as a SA and ciso approve/ deny the submission\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n\n    // As a SA assign the submission to cureent logged in user\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string, secureToken: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  loadingState: object<*>\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction, secureToken} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash, secureToken);\n  }\n\n  render() {\n    const {secureToken, loadingState} = {...this.props};\n    const {\n      location,\n      title,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover,\n      siteConfig\n      } = {...this.props.submissionState};\n\n    if (!user || !submission || !siteConfig) {\n      return null;\n    }\n\n    if (loadingState['QUESTIONNAIRE/LOAD_QUESTIONNAIRE_SUBMISSION_STATE']) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an businessOwner approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name} logopath={siteConfig.logoPath}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n                 token={secureToken}\n        />\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteConfig} = {...this.props.submissionState};\n\n    if (!submission || !siteConfig) {\n      return;\n    }\n\n    let riskResults;\n    if(submission && submission.riskResults) {\n      riskResults = submission.riskResults;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteConfig: siteConfig,\n      riskResults: riskResults ? riskResults : [],\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\"\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n    Controls {\n      ID\n      Name\n      Description\n      ImplementationGuidance\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction,\n  LoadSelectedComponentsAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string, productAspect: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: {\"id\": id, \"productAspect\": productAspect}\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string, productAspect: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: {\"id\": id, \"productAspect\": productAspect}\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}\n\nexport function loadSelectedComponents(taskSubmission): ThunkAction {\n  const selectedComponents = taskSubmission.selectedComponents;\n\n  const savedComponent = selectedComponents.map((component) => {\n    component.isSaved = true;\n    return component;\n  });\n\n  return async (dispatch) => {\n    const action: LoadSelectedComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.LOAD_SELECTED_COMPONENTS,\n      payload: savedComponent\n    };\n    await dispatch(action);\n  };\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction,\n  MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport {loadSelectedComponents} from \"./componentSelection\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\nimport URLUtil from \"../utils/URLUtil\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string, type?: string}): ThunkAction {\n  const {uuid, secureToken, type} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n\n      await dispatch(action);\n\n      if (type === \"componentSelection\") {\n        await dispatch(loadSelectedComponents(payload));\n      }\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\n/**\n * Obtain selected security controls from rootState and save to task submission\n *\n * @param {*} selectedControls\n */\nexport function saveCVASelectedControls(selectedControls: object): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    //@TODO: Complete graphql submission endpoint\n  }\n}\n\n/**\n * Deals to both \"JIRA Cloud\" (remote) and SDLT (local) component submissions.\n */\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    await dispatch({ type: ActionType.TASK.SAVE_SELECTED_COMPONENT_REQUEST});\n\n    const components = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return {\n        SecurityComponentID : component.id,\n        ProductAspect: component.productAspect,\n        TaskSubmissionID: taskSubmission.id\n      }\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        components,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n      await dispatch({ type: ActionType.TASK.SAVE_SELECTED_COMPONENT_SUCCESS});\n    } catch(error) {\n      await dispatch({ type: ActionType.TASK.SAVE_SELECTED_COMPONENT_FAILURE});\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string,\n  taskSubmissionUUID?: string | null,\n  questionnaireUUID?: string | null,\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result, taskSubmissionUUID, questionnaireUUID} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: (taskSubmissionUUID === undefined) ? getTaskSubmission().uuid : taskSubmissionUUID,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n        if(questionnaireUUID !== undefined) {\n          URLUtil.redirectToQuestionnaireSummary(questionnaireUUID, secureToken)\n        }\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean,\n    type?: string,\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork, type} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n\n        if (type === \"componentSelection\") {\n          await dispatch(loadSelectedComponents(taskSubmission));\n        }\n\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\nimport SecurityRiskAssessmentUtil from \"../../utils/SecurityRiskAssessmentUtil\";\nimport {SubmissionExpired} from \"../Common/SubmissionExpired\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean,\n  secureToken: string\n};\n\nclass TaskSubmission extends Component<Props> {\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs,\n      secureToken\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    ) : null;\n\n    const isSRATaskFinalised = taskSubmission.taskType === 'risk questionnaire' && SecurityRiskAssessmentUtil.isSRATaskFinalised(taskSubmission.siblingSubmissions);\n\n    const editButton = showEditButton && !isSRATaskFinalised ? (\n      <LightButton\n        title=\"EDIT ANSWERS\"\n        onClick={editAnswers}\n        iconImage={editIcon}\n      />\n    ) : null;\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n    const pdfButton = (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    ) : null;\n\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const riskResult = taskSubmission.riskResults && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <RiskResultContainer riskResults={taskSubmission.riskResults}/>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {taskSubmission.status === 'expired' && <SubmissionExpired/>}\n        {\n          taskSubmission.status !== 'expired' && (\n            <div>\n              {\n                taskSubmission.taskType === 'risk questionnaire' &&\n                isSRATaskFinalised ? SecurityRiskAssessmentUtil.getSraIsFinalisedAlert() : false\n              }\n              {result}\n              {body}\n              {riskResult}\n\n                  <div className=\"buttons\">\n                  {editButton}\n                  {pdfButton}\n                  {backButton}\n                  <div>\n                    {approveButton}\n                    {denyButton}\n                  </div>\n                </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      currentUser,\n      siteConfig\n    } = {...this.props};\n\n    if (!taskSubmission && !siteConfig && !currentUser) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteConfig: siteConfig,\n      result: taskSubmission.result,\n      riskResults: taskSubmission.riskResults,\n    });\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    siteConfig: state.siteConfigState.siteConfig,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteConfig());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken:string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteConfig?: SiteConfig | null,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteConfig,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission || !siteConfig) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteConfig.siteTitle} username={currentUser.name} logopath={siteConfig.logoPath}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteConfig={siteConfig}\n          secureToken={secureToken}\n        />\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteConfig: state.siteConfigState.siteConfig,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteConfig());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteConfig?: SiteConfig | null,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteConfig,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission || !siteConfig) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteConfig.siteTitle} username={currentUser.name} logopath={siteConfig.logoPath}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteConfig={siteConfig}\n          currentUser={currentUser}\n        />\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {this.renderIcon()}\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExist(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n\n  static isSelectedComponentExist (id: string, productAspect: string, collection: Array<SecurityComponent>): boolean {\n      if (productAspect !== \"\") {\n        return collection.filter((component) => component.id === id && component.productAspect === productAspect).length > 0;\n      }\n      return collection.filter((component) => component.id === id).length > 0;\n  }\n\n  static isComponentSaved(id: string, productAspect: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id && component.productAspect === productAspect && component.isSaved).length > 0;\n  }\n\n  static doescomponentExistForProductAspect (productAspect: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.productAspect === productAspect).length > 0;\n\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\nimport toString from \"lodash/toString\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  title: string,\n  componentTarget: string,\n};\n\ntype State = {\n  filter: string,\n  selectedProductAspect: string,\n};\n\nexport default class LeftBar extends Component<Props> {\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      selectedProductAspect: props.productAspects && props.productAspects.length ? props.productAspects[0] : ''\n    };\n  }\n  handleChange(event) {\n    alert(event.target.value);\n  }\n  render() {\n    const {\n      title,\n      availableComponents,\n      selectedComponents,\n      removeComponent,\n      addComponent,\n      productAspects,\n      componentTarget\n    } = {...this.props};\n\n    const {filter, selectedProductAspect} = {...this.state};\n\n    return (\n      <div className=\"LeftBar\">\n        {productAspects && productAspects.length > 0 && (\n          <div className=\"product-aspect\">\n            <label>\n              <span className=\"product-aspect-label\">Please select a Product Aspect:</span>\n              <select\n                className=\"custom-select custom-select-sm\"\n                onChange={(event) => {\n                  const value = toString(event.target.value).trim();\n                  this.setState({selectedProductAspect: value});\n                }}\n                value={selectedProductAspect}>\n                {\n                  productAspects.map((productAspect, index) => {\n                    return <option key={index} value={productAspect}>{productAspect}</option>;\n                  })\n                }\n              </select>\n            </label>\n          </div>\n        )}\n\n        <div className=\"title\">{title}</div>\n        <div className=\"search\">\n          <i className=\"fas fa-search\"/>\n          <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n            const value = toString(event.target.value).trim();\n            this.setState({filter: value});\n          }}/>\n        </div>\n        <div className=\"items\">\n          {availableComponents\n            .filter((component) => {\n              if (!filter) {\n                return true;\n              }\n              return component.name.toUpperCase().includes(filter.toUpperCase());\n            })\n            .map((component) => {\n              const isSelected = ComponentSelectionUtil.isSelectedComponentExist(component.id, selectedProductAspect, selectedComponents);\n              const isDisable = ComponentSelectionUtil.isComponentSaved(component.id, selectedProductAspect, selectedComponents, componentTarget)\n                && componentTarget == \"JIRA Cloud\";\n\n              return (\n                <LeftBarItem\n                  title={component.name}\n                  iconType={isSelected ? \"success\" : \"pending\"}\n                  disabled={isDisable}\n                  key={component.id}\n                  onItemClick={() => {\n                    // Toggle selection\n                    if (isSelected) {\n                      removeComponent(component.id, selectedProductAspect);\n                    } else {\n                      addComponent(component.id, selectedProductAspect);\n                    }\n                  }}/>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, {Component} from \"react\";\nimport { Icon } from 'react-fa'\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  implementationGuidance: string,\n  className: string\n};\n\ntype State = {\n  isExpaned: boolean\n};\n\n\nexport default class ControlInfo extends React.Component<Props> {\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n  render() {\n    const {id, name, description, implementationGuidance, className} = {...this.props};\n    const {isExpanded} = {...this.state};\n    return (\n      <div className={\"ControlInfo \" + className}>\n        {name && (<h5>{name}</h5>)}\n        {\n          description && (\n            <div className=\"control-description\">\n              <span><b>Description: </b></span>\n              <span\n                className=\"control-description-cs\"\n                dangerouslySetInnerHTML={{\n                  __html: description\n                }}\n              >\n              </span>\n            </div>\n          )\n        }\n        {\n          implementationGuidance && (\n            <div className=\"implementation-Guidance\">\n              <div\n                className=\"implementation-Guidance-title\"\n                onClick={() => this.setState({ isExpanded: !isExpanded })}\n              >\n                <span>\n                  <b>Implementation Guidance </b>\n                  <Icon name={`${isExpanded ? \"caret-up\" : \"caret-down\"}`} />\n                </span>\n              </div>\n\n              {isExpanded && (\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: implementationGuidance\n                  }}\n                >\n                </div>\n              )}\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from \"react\";\nimport type {SecurityControl} from \"../../types/SecurityControl\";\nimport ControlInfo from \"./ControlInfo\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void,\n  childControls: Array<SecurityControl>,\n  showControls: boolean,\n  isDisable: boolean,\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent, childControls, isDisable} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id+name}>\n        <h3>\n          {!isDisable && (<button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n          <i className=\"fas fa-minus-circle text-danger\"/>\n          <span> {name}</span>\n          </button>)}\n        </h3>\n        <p>{description}</p>\n\n        {childControls && childControls.length > 0 && (<div className=\"control-heading\">Controls</div>)}\n\n        {childControls && childControls.length > 0 && (\n          childControls.map((control, index) => {\n              return (\n                <ControlInfo\n                  key={index}\n                  id={control.id}\n                  name={control.name}\n                  description={control.description}\n                  implementationGuidance={control.implementationGuidance}\n                  className= \"control-cs\"\n                />\n              );\n            })\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  componentTarget: taskSubmission.ComponentTarget,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  saveControls: () => void,\n  extraButtons?: *,\n  isStandaloneTask: boolean,\n  productAspects: Array<*>\n};\n\ntype State = {\n  jiraKey: string\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      saveControls,\n      extraButtons,\n      componentTarget,\n      productAspects,\n      isStandaloneTask\n    } = {...this.props};\n    const {jiraKey} = {...this.state};\n    const isGroupbyProductAspect = productAspects && productAspects.length > 0 && selectedComponents.length > 0;\n\n    return (\n      <div className=\"ComponentSelection\">\n        <div className=\"main-wrapper\">\n          <LeftBar\n            selectedComponents={selectedComponents}\n            availableComponents={availableComponents}\n            title={\"Available Components\"}\n            removeComponent={removeComponent}\n            addComponent={addComponent}\n            productAspects={productAspects}\n            componentTarget={componentTarget}\n          >\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n            <div className=\"selected-components\">\n              {isGroupbyProductAspect > 0 && productAspects.map ((productAspect, index) => {\n                return (\n                  <div key={index}>\n                    {ComponentSelectionUtil.doescomponentExistForProductAspect(productAspect, selectedComponents) &&\n                      <h4 key={index}>{productAspect}</h4>\n                    }\n                    {selectedComponents.map((component, index) => {\n                      const isDisable = component.hasOwnProperty('isSaved') && component.isSaved && componentTarget == \"JIRA Cloud\";\n                      if (component.productAspect === productAspect) {\n                        return (\n                          <ComponentInfo\n                            key={component.id + (component.productAspect ? `_${component.productAspect}`: \"\")}\n                            id={component.id}\n                            name={component.name}\n                            description={component.description}\n                            removeComponent={() => {\n                              removeComponent(component.id, component.productAspect);\n                            }}\n                            childControls={component.controls}\n                            isDisable={isDisable}\n                          />\n                        );\n                      }\n                    })}\n                  </div>\n                );\n              })}\n\n              {(productAspects === undefined || productAspects === ''|| productAspects.length === 0 ) && selectedComponents.map((component, index) => {\n                const isDisable = component.hasOwnProperty('isSaved') && component.isSaved && componentTarget == \"JIRA Cloud\";\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name }\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id, component.productAspect);\n                    }}\n                    childControls={component.controls}\n                    isDisable={isDisable}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons-wrapper\">\n           <div className=\"extra-buttons\">{extraButtons}</div>\n           <div>\n             {selectedComponents.length > 0 && componentTarget === \"JIRA Cloud\" && (\n               <React.Fragment>\n                 <input\n                   type=\"text\"\n                   style={{height: \"100%\", marginRight: \"10px\"}}\n                   placeholder=\"JIRA Project Key\"\n                   onChange={event => {\n                     const value = toString(event.target.value).trim();\n                     this.setState({jiraKey: value});\n                   }}\n                 />\n                 <DarkButton\n                   title=\"CREATE JIRA TICKETS\"\n                   classes={[\"mr-3\"]}\n                   onClick={() => {\n                     createJIRATickets(jiraKey);\n                   }}\n                 />\n               </React.Fragment>\n             )}\n             {componentTarget === \"Local\" && !isStandaloneTask && (\n               <LightButton\n                 title=\"SAVE CONTROLS\"\n                 classes={[\"mr-3\"]}\n                 onClick={() => {\n                   saveControls();\n                 }}\n               />\n             )}\n             <LightButton\n               title=\"COMPLETE WITHOUT SELECTION\"\n               classes={[\"mr-3\"]}\n               onClick={() => {\n                 finishWithSelection();\n               }}\n             />\n           </div>\n         </div>\n       </div>\n     );\n   }\n }\n","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  buttons?: *,\n  componentTarget: string,\n  productAspects: Array<*>\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, buttons, componentTarget, productAspects} = {...this.props};\n    const isGroupbyProductAspect = productAspects && productAspects.length > 0 && selectedComponents.length > 0;\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          {isGroupbyProductAspect > 0 && productAspects.map ((productAspect, index) => {\n            return (\n              <ul key={index}>\n                {ComponentSelectionUtil.doescomponentExistForProductAspect(productAspect, selectedComponents) &&\n                  <h5 key={index}>{productAspect}</h5>\n                }\n                {selectedComponents.map((component, index) => {\n                  if (component.productAspect === productAspect) {\n                    return (\n                      <li key={component.id + (productAspect ? `_${productAspect}`: \"\")}>\n                        {component.name}\n                      </li>\n                    );\n                  }\n                })}\n              </ul>\n            );\n          })}\n          <ul>\n            {(productAspects === undefined || productAspects === '' || productAspects.length === 0) && selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>\n                  {component.name}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        {componentTarget === \"JIRA Cloud\" && (\n          <div className=\"section\">\n            <h4>Created Jira Tickets</h4>\n            <ul>\n              {jiraTickets.map((ticket: JiraTicket) => {\n                return (\n                  <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"buttons\">\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteConfig: state.siteConfigState.siteConfig,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteConfig());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype OwnProps = {\n  taskId: string,\n  componentTarget: string,\n}\n\ntype ReduxProps = {\n  siteConfig?: SiteConfig | null,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteConfig,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets,\n      componentTarget\n    } = {...this.props};\n\n    if (!currentUser || !siteConfig) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            componentTarget={componentTarget}\n            isStandaloneTask={true}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header\n          title=\"Component Selection\"\n          subtitle={siteConfig.siteTitle}\n          logopath={siteConfig.logoPath}\n          username={currentUser.name}\n        />\n        {body}\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);\n","// @flow\n// this file is used on Component Selection Task and Control Validation Audit Task\nimport React, {Component} from \"react\";\n\nexport class SubmissionNotCompleted extends Component {\n  render() {\n    return (\n      <div className=\"alert alert-warning\">\n        The submission you are attempting to view has not been completed yet.\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent,\n  loadSelectedComponents,\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {\n  completeTaskSubmission,\n  loadTaskSubmission,\n  saveSelectedComponents,\n  editCompletedTaskSubmission\n} from \"../../actions/task\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport SecurityRiskAssessmentUtil from \"../../utils/SecurityRiskAssessmentUtil\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport {SubmissionExpired} from \"../Common/SubmissionExpired\";\nimport {SubmissionNotCompleted} from \"../Common/SubmissionNotCompleted\";\n\ntype OwnProps = {\n  uuid: string,\n  secureToken:string\n};\n\ntype Props = OwnProps & {\n  siteConfig?: SiteConfig | null,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchSaveLocalControlsAction?: () => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n  dispatchEditAnswersAction?: () => void,\n  dispatchLoadSelectedComponents?: (selectedComponents: Array<SecurityComponent>) => void\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteConfig: state.siteConfigState.siteConfig,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteConfig());\n      dispatch(loadCurrentUser());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid, secureToken, type: \"componentSelection\"}));\n    },\n    dispatchAddComponentAction(id: string, productAspect: string) {\n      dispatch(addSelectedComponent(id, productAspect));\n    },\n    dispatchRemoveComponentAction(id: string, productAspect: string) {\n      dispatch(removeSelectedComponent(id, productAspect));\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchSaveLocalControlsAction() {\n      dispatch(saveSelectedComponents(\"\"));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({type: \"componentSelection\"}));\n    }\n  };\n};\n\nclass ComponentSelectionContainer extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteConfig,\n      siteTitle,\n      secureToken,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchSaveLocalControlsAction,\n      dispatchFinishAction,\n      dispatchEditAnswersAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission || !siteConfig) {\n      return null;\n    }\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const isSRATaskFinalised = SecurityRiskAssessmentUtil.isSRATaskFinalised(taskSubmission.siblingSubmissions);\n    const showEditControlButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") &&\n      (taskSubmission.questionnaireSubmissionStatus === \"submitted\") &&\n      (currentUser.isSA || isCurrentUserSubmitter) && !taskSubmission.lockWhenComplete;\n    const backButton = (\n      <DarkButton key=\"back\"\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n        URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    );\n    const editControlButton = showEditControlButton && !isSRATaskFinalised ? (\n      <LightButton\n        title=\"EDIT CONTROLS\"\n        onClick={ dispatchEditAnswersAction}\n        classes={[\"button\"]}\n        iconImage={editIcon}\n      />\n    ) : null;\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"start\":\n      case \"in_progress\":\n         if (!isCurrentUserSubmitter){\n           body = (\n            <div className=\"ComponentSelectionReview\">\n              <div className=\"section\">\n                <h4>Selected Components</h4>\n                <br />\n                <SubmissionNotCompleted/>\n              </div>\n              <div className=\"buttons\">\n                {backButton}\n              </div>\n            </div>\n             );\n           break;\n         }\n         else {\n          body = (\n            <ComponentSelection\n              availableComponents={availableComponents}\n              selectedComponents={selectedComponents}\n              componentTarget={taskSubmission.componentTarget}\n              productAspects={taskSubmission.productAspects}\n              extraButtons={backButton}\n              createJIRATickets={(jiraKey) => {\n                dispatchCreateJIRATicketsAction(jiraKey);\n              }}\n              saveControls={() => {\n                dispatchSaveLocalControlsAction();\n              }}\n              removeComponent={(id, productAspect) => {\n                dispatchRemoveComponentAction(id, productAspect);\n              }}\n              addComponent={(id, productAspect) => {\n                dispatchAddComponentAction(id, productAspect);\n              }}\n              finishWithSelection={() => {\n                dispatchFinishAction();\n              }}\n            />\n          );\n        break;\n       }\n      case \"complete\":\n        body = (\n          <div>\n            <div className=\"ComponentSelectionReview\">\n                {isSRATaskFinalised ? SecurityRiskAssessmentUtil.getSraIsFinalisedAlert() : false}\n            </div>\n\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n            componentTarget={taskSubmission.componentTarget}\n            productAspects={taskSubmission.productAspects}\n            buttons={[(\n              <div key=\"component-selection-review-button-container\">\n                {editControlButton}\n                {backButton}\n              </div>\n            )]}\n          />\n          </div>\n        );\n        break;\n        case \"expired\":\n          body = (<SubmissionExpired/>);\n        break;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteConfig.siteTitle} logopath={siteConfig.logoPath} username={currentUser.name} />\n        {body}\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteConfig: state.siteConfigState.siteConfig,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList,\n    loadingState: state.loadingState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteConfig());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteConfig?: SiteConfig | null,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>,\n  loadingState: object<*>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteConfig,\n      loadingState,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteConfig) {\n      return null;\n    }\n\n    if (loadingState['QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST']) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteConfig.siteTitle} username={currentUser.name} logopath={siteConfig.logoPath} />\n        {list(mySubmissionList)}\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteConfig: state.siteConfigState.siteConfig,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList,\n    loadingState: state.loadingState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteConfig());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteConfig?: SiteConfig | null,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>,\n  loadingState: object<*>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteConfig,\n      awaitingApprovalList,\n      loadingState\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteConfig) {\n      return null;\n    }\n\n    if (loadingState['QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST']) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" username={currentUser.name} subtitle={siteConfig.siteTitle} logopath={siteConfig.logoPath}/>\n        {list(awaitingApprovalList, currentUser)}\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Deliverable Release Date</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    {awaitingApproval.releaseDate ? moment(awaitingApproval.releaseDate).format(\"DD MMM YYYY\") : ''}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteConfig: state.siteConfigState.siteConfig,\n    myProductList: state.questionnaireSubmissionListState.myProductList,\n    loadingState: state.loadingState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteConfig());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteConfig?: SiteConfig | null,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>,\n  loadingState: object<*>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteConfig,\n      loadingState\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteConfig) {\n      return null;\n    }\n\n    if (loadingState['QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST']) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteConfig.siteTitle} username={currentUser.name} logopath={siteConfig.logoPath} />\n        {list(myProductList)}\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {LikelihoodThreshold} from \"../../types/Task\";\n\ntype Props = {\n  LikelihoodThresholds: Array<LikelihoodThreshold> | null,\n};\n\nclass LikelihoodLegendContainer extends Component<Props> {\n  render() {\n    const {likelihoodThresholds} = {...this.props};\n\n    if(!likelihoodThresholds || likelihoodThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"LikelihoodLegend\">\n        <h3>Likelihood Legend</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table table-sm\">\n            <thead className=\"thead-light\">\n              <tr key=\"likelihood_legend_header\">\n                <th>Threshold</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {likelihoodThresholds.map((likelihoodThreshold, index): Array<LikelihoodThreshold> => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {likelihoodThreshold.operator + likelihoodThreshold.value}\n                    </td>\n                    <td style={{backgroundColor:'#' + likelihoodThreshold.color}}>\n                      {likelihoodThreshold.name}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LikelihoodLegendContainer;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {ImpactThreshold} from \"../../types/ImpactThreshold\";\n\ntype Props = {\n  impactThresholds: Array<ImpactThreshold> | null,\n};\n\nclass ImpactThresholdContainer extends Component<Props> {\n  render() {\n    const {impactThresholds} = {...this.props};\n\n    if(!impactThresholds || impactThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"ImapctLegend\">\n        <h3>Impact Legend</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table table-sm\">\n            <thead className=\"thead-light\">\n              <tr key=\"impact_legend_header\">\n                <th>Threshold</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {impactThresholds.map((impactThreshold, index): Array<ImpactThreshold> => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {impactThreshold.operator + impactThreshold.value}\n                    </td>\n                    <td style={{backgroundColor:'#' + impactThreshold.color}}>\n                      {impactThreshold.name}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImpactThresholdContainer;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {LikelihoodThreshold} from \"../../types/Task\";\nimport {\n  DEFAULT_SRA_MATRIX_THRESHOLD_SCORE,\n  CTL_STATUS_1,\n  CTL_STATUS_2\n} from \"../../constants/values\";\nimport Comparators from \"../../utils/Comparators\";\nimport TaskParser from \"../../utils/TaskParser\";\n\ntype Props = {\n  calculatedSRAData: object,\n  hasProductAspect: boolean\n};\n\nclass RiskAssessmentMatrixTableContainer extends Component<Props> {\n  /**\n   * Render the security risk assessment matrix as an HTML table\n   */\n   renderTableHeader()\n   {\n      return (\n        <tr key=\"sra_header\">\n          <th>Risk</th>\n          {this.props.hasProductAspects && (<th>Product Aspect</th>)}\n          <th>Current Controls</th>\n          <th>Current Likelihood</th>\n          <th>Current Impact</th>\n          <th>Current Risk Rating</th>\n          <th>Recommended Treatments</th>\n        </tr>\n      )\n   }\n\n  renderTableBody()\n  {\n    if (this.props.hasProductAspects) {\n      return this.props.calculatedSRAData.map((risk, riskIndex) => {\n        return risk.productAspects.map((productAspect, productAspectIndex) =>{\n          const rowData = {\n            riskId: risk.riskId,\n            riskName: productAspectIndex == 0 ? `${risk.riskName} (${risk.baseImpactScore})` : null,\n            riskDescription: productAspectIndex == 0 ? risk.description : null,\n            components: productAspect.components,\n            currentLikelihood: productAspect.currentLikelihood,\n            currentImpact: productAspect.currentImpact,\n            currentRiskRating: productAspect.currentRiskRating\n          };\n\n          return this.renderTableRow(rowData, productAspect.productAspectName);\n        });\n      });\n    } else {\n      return this.props.calculatedSRAData.map((risk, riskIndex) => {\n        const rowData = {\n          riskId: risk.riskId,\n          riskName: `${risk.riskName} (${risk.baseImpactScore})`,\n          riskDescription: risk.description,\n          components: risk.riskDetail.components,\n          currentLikelihood: risk.riskDetail.currentLikelihood,\n          currentImpact: risk.riskDetail.currentImpact,\n          currentRiskRating: risk.riskDetail.currentRiskRating\n        };\n\n        return this.renderTableRow(rowData);\n      });\n    }\n  }\n\n  renderTableRow(rowData, productAspect = '')\n  {\n    return (\n      <tr key={productAspect + '_' + rowData.riskId}>\n        <td>\n          <span style={{display:'block'}}>{rowData.riskName}</span>\n          <small className=\"text-muted\">{rowData.riskDescription}</small>\n        </td>\n        {this.props.hasProductAspects && productAspect && (<td>{productAspect}</td>)}\n        <td>\n          {this.renderComponents(rowData.components, 'Implemented')}\n        </td>\n        <td>\n          {this.renderCurrentLikelihood(rowData.currentLikelihood)}\n        </td>\n        <td>\n          {this.renderCurrentImapct(rowData.currentImpact)}\n        </td>\n        <td\n          style={rowData.currentRiskRating.colour ? {backgroundColor: rowData.currentRiskRating.colour} : null}\n        >\n          {this.renderCurrentRiskRating(rowData.currentRiskRating)}\n        </td>\n        <td>\n          {this.renderComponents(rowData.components, 'Recommened')}\n        </td>\n      </tr>\n    );\n  }\n\n  renderComponents(components, type) {\n    if(!components || !Array.isArray(components) || components.length == 0) {\n      return null;\n    }\n\n    return components.map((component, componentIndex) =>{\n      const controls = (type === 'Implemented' ? component.implementedControls : component.recommendedControls);\n\n      return (\n        <div key={componentIndex+1}>\n          <strong key={component.id}>{controls.length> 0 ? component.name : null}</strong>\n          {controls.length> 0 && this.renderControls(controls)}\n        </div>\n      )\n    });\n  }\n\n  renderControls(controls) {\n    return controls.map((control, controlIndex) => {\n      return(\n        <div key={controlIndex+1}>\n          <span key={control.id}>{control.name}</span>\n          <small className=\"text-muted\">\n            (\n              I: {control.impactWeight},\n              L: {control.likelihoodWeight},\n              IP: {control.impactPenalty},\n              LP: {control.likelihoodPenalty}\n            )\n          </small>\n        </div>\n      );\n    });\n  }\n\n  renderCurrentLikelihood(currentLikelihood) {\n    return (\n      <div>\n        <span style={currentLikelihood.colour ? {color: currentLikelihood.colour, display:'block'} : null}>\n          {currentLikelihood.name} {currentLikelihood.score ? '(' + (currentLikelihood.score) + ')' : null}\n        </span>\n        <small className=\"text-muted\">{currentLikelihood.formula}</small>\n      </div>\n    );\n  }\n\n  renderCurrentImapct(currentImapct) {\n    return (\n      <div>\n        <span style={currentImapct.colour ? {color: currentImapct.colour, display:'block'} : null}>\n          {currentImapct.name} {currentImapct.score ? '(' + (currentImapct.score) + ')' : null}\n        </span>\n        <small className=\"text-muted\">{currentImapct.formula}</small>\n      </div>\n    );\n  }\n\n  renderCurrentRiskRating(currentRiskRating) {\n    return (\n      <div>\n        {currentRiskRating.name}\n      </div>\n    );\n  }\n\n  render() {\n    if(!this.props.calculatedSRAData) {\n      return null;\n    }\n\n    return (\n      <div className=\"RiskMatrix\">\n        <h3>Your risk assessment results</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              {this.renderTableHeader()}\n            </thead>\n            <tbody>\n              {this.renderTableBody()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskAssessmentMatrixTableContainer;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {RiskRatingThreshold} from \"../../types/Task\";\n\ntype Props = {\n  riskRatingThresholds: Array<RiskRatingThreshold> | null,\n};\n\nclass RiskRatingThresholdContainer extends Component<Props> {\n  render() {\n    const {riskRatingThresholds} = {...this.props};\n\n    if(!riskRatingThresholds || riskRatingThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"RiskRatingLegend\">\n        <h3>Risk Rating Matix</h3>\n\n        <div className=\"table-responsive\">\n          <p className=\"impact-heading\">Impact</p>\n\n          <table className=\"table table-sm table-bordered\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_rating_legend_header\">\n              {\n                riskRatingThresholds.tableHeader.map((headerText, index) => {\n                  return (\n                    <th key={index}>\n                      {headerText}\n                    </th>\n                  )\n                })\n              }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                riskRatingThresholds.tableRows.map((row, rowIndex) => {\n                  return (\n                    <tr key={'row_' + rowIndex}>\n                      {\n                        row.map((column, columnIndex) => {\n                          return(\n                            <td\n                              key={'column_'+columnIndex}\n                              style={column.color ? {backgroundColor: column.color} : null}\n                            >\n                            {column.name}\n                            </td>\n                          )\n                        })\n                      }\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskRatingThresholdContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport type {ImpactThreshold} from \"../types/ImpactThreshold\";\nexport default class SecurityRiskAssessmentTaskDataService {\n\n  static async fetchSecurityRiskAssessmentTasK(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    UUID\n    TaskName\n    QuestionnaireSubmission {\n      UUID\n      TaskSubmissions {\n        UUID\n        Status\n        TaskType\n      }\n    }\n    Submitter {\n      ID\n    }\n    Status\n    SecurityRiskAssessmentData\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const securityRiskAssessmentData = JSON.parse(get(submissionJSONObject, 'SecurityRiskAssessmentData', ''));\n    const data: TaskSubmission = {\n      uuid: submissionJSONObject && submissionJSONObject.UUID ? submissionJSONObject.UUID : '',\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      submitterID: toString(get(submissionJSONObject, \"Submitter.ID\", \"\")),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      taskSubmissions: TaskParser.parseAlltaskSubmissionforQuestionnaire(submissionJSONObject),\n      sraData: securityRiskAssessmentData\n    };\n\n    return data;\n  }\n\n  static async fetchImpactThreshold(): Promise<ImpactThreshold> {\n    const query = `\nquery {\n  readImpactThreshold {\n    Name\n    Value\n    Colour\n    Operator\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const impactThresholdJSONObject = get(responseJSONObject, \"data.readImpactThreshold\", null);\n    if (!impactThresholdJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data:ImpactThreshold = impactThresholdJSONObject.map((impactThreshold) => {\n      return {\n        name: _.toString(_.get(impactThreshold, \"Name\", \"\")),\n        color: _.toString(_.get(impactThreshold, \"Colour\", \"\")),\n        operator: _.toString(_.get(impactThreshold, \"Operator\", \"\")),\n        value: _.toString(_.get(impactThreshold, \"Value\", \"\")),\n      }\n    });\n\n    return data;\n  }\n}\n","import {ThunkAction} from \"redux-thunk\";\nimport ActionType from \"./ActionType\";\nimport SecurityRiskAssessmentTaskDataService from \"../services/SecurityRiskAssessmentTaskDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadSecurityRiskAssessment(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    await dispatch({ type: ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT_REQUEST});\n    try {\n      const payload = await SecurityRiskAssessmentTaskDataService.fetchSecurityRiskAssessmentTasK({\n        uuid,\n        secureToken\n      });\n\n      const action = {\n        type: ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT_SUCCESS,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      await dispatch({type: ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadImpactThreshold() {\n    return async (dispatch) => {\n    try {\n      const payload = await SecurityRiskAssessmentTaskDataService.fetchImpactThreshold();\n\n      const action = {\n        type: ActionType.SRA.LOAD_IMPACT_THRESHOLD,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport LikelihoodLegendContainer from \"./LikelihoodLegendContainer\";\nimport ImpactThresholdContainer from \"./ImpactThresholdContainer\";\nimport RiskAssessmentMatrixTableContainer from \"./RiskAssessmentMatrixTableContainer\";\nimport RiskRatingThresholdContainer from \"./RiskRatingThresholdContainer\";\nimport type {User} from \"../../types/User\";\nimport {\n  loadSecurityRiskAssessment,\n  loadImpactThreshold\n} from \"../../actions/securityRiskAssessment\";\nimport {\n  completeTaskSubmission\n} from \"../../actions/task\";\nimport type {SecurityRiskAssessment} from \"../../types/Task\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\nimport type {ImpactThreshold} from \"../../types/ImpactThreshold\";\nimport SecurityRiskAssessmentUtil from \"../../utils/SecurityRiskAssessmentUtil\";\nimport {SubmissionExpired} from \"../Common/SubmissionExpired\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteConfig: state.siteConfigState.siteConfig,\n    currentUser: state.currentUserState.user,\n    securityRiskAssessmentData: state.securityRiskAssessmentState.securityRiskAssessmentData,\n    impactThresholdData: state.securityRiskAssessmentState.impactThresholdData\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteConfig());\n      dispatch(loadSecurityRiskAssessment({uuid, secureToken}));\n      dispatch(loadImpactThreshold());\n    },\n    dispatchFinaliseAction(uuid: string, secureToken?: string | null, questionnaireUUID) {\n      dispatch(completeTaskSubmission({'taskSubmissionUUID': uuid, 'secureToken': secureToken, 'questionnaireUUID': questionnaireUUID}));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken: string,\n  siteConfig?: SiteConfig | null,\n  currentUser?: User | null,\n  impactThresholdData?: Array<ImpactThreshold> | null,\n  securityRiskAssessmentData?: SecurityRiskAssessment | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchFinaliseAction?: (uuid: string, secureToken: string) => void,\n};\n\nclass SecurityRiskAssessmentContainer extends Component<Props> {\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n\n  render() {\n    const {\n      siteConfig,\n      currentUser,\n      securityRiskAssessmentData,\n      secureToken,\n      impactThresholdData\n    } = {...this.props};\n\n    if (!currentUser || !siteConfig || !securityRiskAssessmentData) {\n      return null;\n    }\n\n    const {\n      uuid,\n      taskName,\n      questionnaireSubmissionUUID,\n      submitterID,\n      taskSubmissions,\n      sraData,\n      status\n    } = {...securityRiskAssessmentData};\n\n    const isSRATaskFinalised = SecurityRiskAssessmentUtil.isSRATaskFinalised(taskSubmissions);\n\n    const backButton = (\n      <LightButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        classes={[\"button ml-3\"]}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    );\n\n    const isSiblingTaskPending = SecurityRiskAssessmentUtil.isSiblingTaskPending(taskSubmissions);\n\n    const isSubmitter = securityRiskAssessmentData.submitterID === currentUser.id;\n\n    const finaliseButton = !isSRATaskFinalised && !isSiblingTaskPending && isSubmitter\n      ? (\n        <DarkButton title=\"FINALISE\"\n          classes={[\"button ml-3\"]}\n          onClick={() => {\n            this.props.dispatchFinaliseAction(uuid, secureToken, questionnaireSubmissionUUID);\n          }}\n        />\n      )\n      : null;\n\n    return (\n      <div className=\"SecurityRiskAssessmentContainer\">\n\n        <Header title={securityRiskAssessmentData.taskName} subtitle={siteConfig.siteTitle} username={currentUser.name} logopath={siteConfig.logoPath} />\n\n        {securityRiskAssessmentData.status === 'expired' && <SubmissionExpired/>}\n        {\n          securityRiskAssessmentData.status !== 'expired' && (\n            <div className=\"SecurityRiskAssessmentResult\">\n              {isSRATaskFinalised ? SecurityRiskAssessmentUtil.getSraIsFinalisedAlert() : false}\n\n              <RiskAssessmentMatrixTableContainer\n                calculatedSRAData={sraData.calculatedSRAData}\n                hasProductAspects={sraData.hasProductAspects}\n              />\n\n              <LikelihoodLegendContainer\n                likelihoodThresholds={sraData.likelihoodThresholds}\n              />\n\n              <ImpactThresholdContainer impactThresholds={impactThresholdData} />\n\n              <RiskRatingThresholdContainer\n                riskRatingThresholds={sraData.riskRatingThresholds}\n              />\n\n              <div className=\"buttons\">\n                {backButton}\n                {finaliseButton}\n              </div>\n            </div>\n          )\n        }\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SecurityRiskAssessmentContainer);\n","import GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport TaskParser from \"../utils/TaskParser\";\nimport type {CVATaskSubmission} from \"../types/CVATaskSubmission\";\n\nexport default class ControlValidationAuditDataService {\n  static async fetchControlValidationAuditTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    QuestionnaireSubmission {\n      UUID\n      TaskSubmissions {\n        UUID\n        TaskType\n        Status\n      }\n    }\n    TaskName\n    CVATaskData\n    ProductAspects\n    CVATaskDataSource\n    Status\n    Submitter {\n      ID\n    }\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let jsonArray = JSON.parse(get(submissionJSONObject, \"CVATaskData\", \"[]\"));\n\n    if (!Array.isArray(jsonArray)) {\n      jsonArray = [];\n    }\n\n    const components = jsonArray.length > 0 ? SecurityComponentParser.parseCVAFromJSONObject(jsonArray) : jsonArray;\n\n    const data: CVATaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      selectedComponents: components,\n      submitterID: toString(get(submissionJSONObject, \"Submitter.ID\", \"\")),\n      componentTarget: toString(get(submissionJSONObject, \"CVATaskDataSource\", \"\")),\n      productAspects:  _.has(submissionJSONObject, 'ProductAspects') ? JSON.parse(get(submissionJSONObject, \"ProductAspects\", [])) : [],\n      siblingSubmissions: TaskParser.parseAlltaskSubmissionforQuestionnaire(submissionJSONObject)\n    };\n\n    return data;\n  }\n\n  static async saveControlValidationAuditData(argument: {\n    uuid: string,\n    controlData: object,\n    csrfToken: string\n  }): Promise<void> {\n    const {uuid, controlData, csrfToken} = {...argument};\n    const controlDataStr = window.btoa(JSON.stringify(controlData));\n\n    const query = `\nmutation {\n  updateControlValidationAuditTaskSubmission(UUID: \"${uuid}\", CVATaskData: \"${controlDataStr}\") {\n    UUID\n    CVATaskData\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateControlValidationAuditTaskSubmission.CVATaskData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async reSyncWithJira(argument: {uuid: string, csrfToken: string}) : Promise<TaskSubmission> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n  reSyncWithJira(UUID: \"${uuid}\") {\n    UUID\n    CVATaskData\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.reSyncWithJira\", null);\n\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    let jsonArray = JSON.parse(get(updatedData, \"CVATaskData\", \"[]\"));\n\n    if (!Array.isArray(jsonArray)) {\n      jsonArray = [];\n    }\n\n    const components = jsonArray.length > 0 ? SecurityComponentParser.parseCVAFromJSONObject(jsonArray) : jsonArray;\n    return components;\n  }\n}\n","// @flow\nimport {ThunkAction} from \"redux-thunk\";\nimport ActionType from \"./ActionType\";\nimport ControlValidationAuditDataService from \"../services/ControlValidationAuditDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport URLUtil from \"../utils/URLUtil\";\n\nexport function loadControlValidationAudit(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    await dispatch({ type: ActionType.CVA.LOAD_CONTROL_VALIDATION_AUDIT_REQUEST});\n\n    try {\n      // Clear CVA data first from store\n      await dispatch( {\n        type: ActionType.CVA.EMPTY_CONTROL_VALIDATION_AUDIT_DATA,\n        payload: null, // make the data empty\n      });\n\n      const payload = await ControlValidationAuditDataService.fetchControlValidationAuditTaskSubmission({\n        uuid,\n        secureToken\n      });\n\n      // Save data in store\n      const action = {\n        type: ActionType.CVA.LOAD_CONTROL_VALIDATION_AUDIT_SUCCESS,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      await dispatch({type: ActionType.CVA.LOAD_CONTROL_VALIDATION_AUDIT_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveControlValidationAuditData(uuid: string, controlData?: object, questionnaireSubmissionUUID: string, secureToken: string): ThunkAction {\n  return async (dispatch) => {\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Call save data api\n      const payload = await ControlValidationAuditDataService.saveControlValidationAuditData({\n        uuid,\n        controlData,\n        csrfToken\n      });\n\n      const action = {\n        type: ActionType.CVA.SAVE_CONTROL_VALIDATION_AUDIT_DATA,\n        payload,\n      };\n\n      await dispatch(action);\n      URLUtil.redirectToQuestionnaireSummary(questionnaireSubmissionUUID, secureToken);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function updateControlValidationAuditData(args: {selectedOption: string, controlID: string, componentID: string, productAspect: string}): ThunkAction {\n  return async (dispatch) => {\n    const action = {\n      type: ActionType.CVA.UPDATE_CONTROL_VALIDATION_AUDIT_DATA,\n      payload: args\n    };\n    await dispatch(action);\n  }\n}\n\nexport function reSyncWithJira (uuid: string) : ThunkAction {\n  return async (dispatch) => {\n    await dispatch({ type: ActionType.CVA.RE_SYNC_WITH_JIRA_REQUEST});\n\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Call re sync with jira data api\n      const payload = await ControlValidationAuditDataService.reSyncWithJira({\n        uuid,\n        csrfToken\n      });\n\n      const action = {\n        type: ActionType.CVA.RE_SYNC_WITH_JIRA_SUCCESS,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      await dispatch({ type: ActionType.CVA.RE_SYNC_WITH_JIRA_FAILURE, error: error});\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {\n  updateControlValidationAuditData,\n  loadControlValidationAudit,\n  saveControlValidationAuditData,\n  reSyncWithJira\n} from \"../../actions/controlValidationAudit\";\nimport type {User} from \"../../types/User\";\nimport type {\n  CVATaskSubmission,\n  CVASelectedComponents\n} from \"../../types/ControlValidationAudit\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport {\n  DEFAULT_CVA_CONTROLS_ANSWER_YES,\n  DEFAULT_CVA_CONTROLS_ANSWER_NO,\n  DEFAULT_CVA_CONTROLS_ANSWER_NOT_APPLICABLE,\n  DEFAULT_NO_CONTROLS_MESSAGE,\n  DEFAULT_CVA_UNFINISHED_TASKS_MESSAGE,\n  CTL_STATUS_1,\n  CTL_STATUS_2,\n  CTL_STATUS_3\n} from '../../constants/values.js';\nimport SecurityRiskAssessmentUtil from \"../../utils/SecurityRiskAssessmentUtil\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\nimport {SubmissionExpired} from \"../Common/SubmissionExpired\";\nimport {SubmissionNotCompleted} from \"../Common/SubmissionNotCompleted\";\nimport ControlInfo from \"../ComponentSelection/ControlInfo\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    controlValidationAuditData: state.controlValidationAuditState.controlValidationAuditData,\n    cvaSelectedComponents: state.controlValidationAuditState.cvaSelectedComponents,\n    siteConfig: state.siteConfigState.siteConfig\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction: async (uuid: string, secureToken: string) => {\n      await Promise.all([\n        dispatch(loadControlValidationAudit({uuid, secureToken})),\n        dispatch(loadCurrentUser()),\n        dispatch(loadSiteConfig())\n      ]);\n    },\n    dispatchSaveControlValidationAuditDataAction(uuid: string, controlData: object, questionnaireSubmissionUUID: string, secureToken: string) {\n      dispatch(saveControlValidationAuditData(uuid, controlData, questionnaireSubmissionUUID, secureToken));\n    },\n    dispatchUpdateControlValidationQuestionDataAction (selectedOptionDetail: object){\n      dispatch(updateControlValidationAuditData(selectedOptionDetail));\n    },\n    dispatchReSyncWithJira(uuid: string) {\n      dispatch(reSyncWithJira(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken: string,\n  currentUser?: User | null,\n  controlValidationAuditData?: CVATaskSubmission | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchSaveControlValidationAuditDataAction?: () => void,\n  dispatchUpdateControlValidationQuestionDataAction?: (selectedOptionDetail: object) => void,\n  cvaSelectedComponents: CVASelectedComponents,\n  dispatchReSyncWithJira?: (uuid: string) => void,\n  siteConfig?: SiteConfig | null,\n};\n\nclass ControlValidationAuditContainer extends Component<Props, State> {\n  async componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    await dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  /**\n   * Display a list of security component headlines with radio inputs for controls\n   */\n  renderCVAQuestionsForm() {\n    const productAspects = this.props.controlValidationAuditData.productAspects;\n    const selectedComponents = this.props.cvaSelectedComponents;\n    const componentTarget =this.props.controlValidationAuditData.componentTarget;\n\n    if (componentTarget !== 'DefaultComponent' && productAspects.length > 0 && selectedComponents.length > 0) {\n      return (\n        this.renderComponentGroupByProductAspect(productAspects, selectedComponents)\n      );\n    } else if (selectedComponents.length > 0) {\n      return(\n        <div>\n          {\n            selectedComponents.map((component) => {\n              return (\n                this.renderComponent(component)\n              );\n            })\n          }\n        </div>\n      );\n    }\n    else {\n      return(\n        <div className=\"alert alert-warning\" key=\"unfinished_cs_task_message\">\n          {DEFAULT_CVA_UNFINISHED_TASKS_MESSAGE}\n        </div>\n      );\n    }\n  }\n\n  renderComponentGroupByProductAspect(productAspects, components) {\n    return (\n      <div>\n      {\n        productAspects.map((productAspect, productAspectIndex) => {\n          const filterComponent = components.filter((component) => {\n            return component.productAspect === productAspect;\n          })\n\n          if (filterComponent.length == 0) {\n            return null;\n          }\n\n          return (\n            <div className=\"mt-2\" key={productAspectIndex} >\n              <h4>{productAspect}</h4>\n              {\n                filterComponent.map((component) => {\n                  return (\n                    this.renderComponent(component)\n                  );\n                })\n              }\n            </div>\n          )\n        })\n      }\n      </div>\n    );\n  }\n\n  renderComponent(component) {\n    const componentKey = component.productAspect ? `${component.productAspect}_${component.id}`: component.id;\n\n    const controls = component.controls;\n    const link = component.jiraTicketLink ? (<a href={component.jiraTicketLink}>{component.jiraTicketLink}</a>) : null;\n    return (\n      <div key={componentKey}>\n        <h5>\n          {component.name}\n          {link && this.props.controlValidationAuditData.componentTarget == \"JIRA Cloud\" && (<span> - {link}</span>)}\n        </h5>\n        {\n          controls && controls.length > 0 && controls.map((control) => {\n            return (this.renderControl(control, component));\n          })\n        }\n        {\n          !controls || controls.length == 0 && (\n            <div className=\"alert alert-warning\" key=\"no_controls_message\">\n              {DEFAULT_NO_CONTROLS_MESSAGE}\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  renderControl(control, component) {\n    const controlKey = component.productAspect ? `${component.productAspect}_${component.id}_${control.id}`: `${component.id}_${control.id}`;\n    const componentTarget = this.props.controlValidationAuditData.componentTarget;\n\n    if (componentTarget === \"JIRA Cloud\") {\n      return this.renderRemoteControls(control, controlKey);\n    } else {\n      return this.renderLocalControl(control, controlKey, component);\n    }\n  }\n\n  renderLocalControl(control, controlKey, component) {\n    const options = [\n      {'value': CTL_STATUS_1, 'label': DEFAULT_CVA_CONTROLS_ANSWER_YES},\n      {'value':CTL_STATUS_2, 'label': DEFAULT_CVA_CONTROLS_ANSWER_NO},\n      {'value':CTL_STATUS_3, 'label': DEFAULT_CVA_CONTROLS_ANSWER_NOT_APPLICABLE}\n    ];\n\n    return(\n      <div className=\"my-0 container row\" key={controlKey}>\n        <div className=\"col-xs-2\">\n          {\n            options.map((option, optionIndex) => {\n              return (\n                <label key={`optionlabel_${controlKey}_${optionIndex}`}>\n                  <input\n                    type=\"radio\"\n                    key={`radiobutton_${controlKey}_${optionIndex}`}\n                    name={controlKey}\n                    value={option.value}\n                    defaultChecked={control.selectedOption === option.value}\n                    onClick={() => this.props.dispatchUpdateControlValidationQuestionDataAction({\n                      \"selectedOption\": option.value,\n                      \"controlID\":control.id,\n                      \"componentID\":component.id,\n                      \"productAspect\":component.productAspect\n                  })}\n                  />\n                  {option.label}\n                </label>\n              );\n            })\n          }\n        </div>\n        <div className=\"col-10\">\n          <label key={control.id}>\n            <strong>{control.name}</strong>\n          </label>\n          <ControlInfo\n            key={`controlInfo_${control.id}`}\n            id={control.id}\n            name=''\n            description={control.description}\n            implementationGuidance={control.implementationGuidance}\n            className=\"text-muted\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderRemoteControls(control, controlKey) {\n    const className = (control.selectedOption).toLowerCase().replace(\" \", \"-\");\n    return(\n      <div className=\"my-0\" key={controlKey}>\n        <label className=\"ml-2\" key={control.id}>\n          <span><strong>{control.name}</strong> - </span>\n          <span className={className}>({control.selectedOption})</span>\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      siteConfig,\n      currentUser,\n      controlValidationAuditData,\n      secureToken,\n      dispatchSaveControlValidationAuditDataAction,\n      cvaSelectedComponents,\n      dispatchReSyncWithJira\n    } = {...this.props};\n\n    if (!currentUser || !controlValidationAuditData || !siteConfig) {\n      return null;\n    }\n\n    const isSubmitter = controlValidationAuditData.submitterID === currentUser.id;\n    const isSRATaskFinalised = SecurityRiskAssessmentUtil.isSRATaskFinalised(controlValidationAuditData.siblingSubmissions);\n\n    const submitButton = isSubmitter && !isSRATaskFinalised && cvaSelectedComponents.length > 0 ? (\n      <LightButton\n      title=\"SUBMIT\"\n      onClick={() => dispatchSaveControlValidationAuditDataAction(\n        controlValidationAuditData.uuid,\n        cvaSelectedComponents,\n        controlValidationAuditData.questionnaireSubmissionUUID,\n        secureToken\n      )}/>\n    ): null;\n\n    const backButton =  (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(controlValidationAuditData.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    );\n\n    const reSync = isSubmitter && !isSRATaskFinalised && controlValidationAuditData.componentTarget == \"JIRA Cloud\" && cvaSelectedComponents.length > 0 ? (\n      <DarkButton\n        title={\"RE SYNC WITH JIRA\"}\n        onClick={() => dispatchReSyncWithJira(controlValidationAuditData.uuid)}\n      />\n    ) : null;\n\n    return (\n      <div className=\"ControlValidationAuditContainer\">\n        <Header\n          title={controlValidationAuditData.taskName}\n          subtitle={siteConfig.siteTitle}\n          username={currentUser.name}\n          logopath={siteConfig.logoPath}\n        />\n\n        {\n          controlValidationAuditData.status === 'expired' && <SubmissionExpired/>\n        }\n\n        {\n          controlValidationAuditData.status !== 'expired' && (\n            <div className=\"ControlValidationAuditResult\" key=\"0\">\n              <div className=\"ControlValidationAuditForm\">\n                <h3>Have These Controls Been Implemented?</h3>\n                {\n                  ['start','in_progress'].includes(controlValidationAuditData.status)\n                  && !isSubmitter\n                  && (\n                        <SubmissionNotCompleted/>\n                    )\n                }\n                {\n                  (isSubmitter || controlValidationAuditData.status == \"complete\") &&\n                  (\n                    <div>\n                      {isSRATaskFinalised ? SecurityRiskAssessmentUtil.getSraIsFinalisedAlert() : false}\n                      {this.renderCVAQuestionsForm()}\n                    </div>\n                  )\n                }\n              </div>\n              <div className=\"buttons\" key=\"component_validation_buttons\">\n                <div>\n                  {submitButton}\n                  {reSync}\n                  {backButton}\n                </div>\n              </div>\n            </div>\n          )\n        }\n\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ControlValidationAuditContainer);\n","// @flow\n// site wide loading Icon\n\nimport { Icon } from 'react-fa';\nimport React, {Component} from \"react\";\n\nexport class Loading extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"loading-spinner-page-overlay\">\n          <div className=\"loading-spinner\">\n            <Icon spin name=\"spinner\" /> Loading...\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\nimport SecurityRiskAssessmentContainer from \"../SecurityRiskAssessment/SecurityRiskAssessmentContainer.js\";\nimport ControlValidationAuditContainer from \"../ControlValidationAudit/ControlValidationAuditContainer.js\";\nimport {parse} from \"query-string\";\nimport { Loading } from \"../Common/Loading.js\";\nimport { withRouter } from 'react-router-dom';\nimport _ from \"lodash\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    loading: _.chain(state.loadingState).values().some(val => val).value()\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {};\n};\n\ntype Props = {\n  loading: boolean\n};\n\nclass MainApp extends Component<*> {\n  render() {\n    return (\n      <div>\n        {this.props.loading && <Loading/>}\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n            {({match, location}) => {\n              let secureToken = '';\n              if (location.search) {\n                const queryString = parse(location.search);\n                secureToken = queryString.token;\n              }\n              return (\n                <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone/:taskId'>\n              {({match, location}) => {\n                let componentTarget = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  componentTarget = queryString.componentTarget;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionStandaloneContainer\n                    taskId={match.params.taskId}\n                    componentTarget={componentTarget}\n                    />\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/control-validation-audit/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ControlValidationAuditContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/security-risk-assessment/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SecurityRiskAssessmentContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(MainApp)\n);\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE_SUCCESS) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {LoadSiteConfigAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteConfig: null,\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: LoadSiteConfigAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.LOAD_SITE_CONFIG:\n      return {\n        ...state,\n        siteConfig: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction,\n  LoadSelectedComponentsAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  savedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExist = ComponentSelectionUtil.isComponentExist;\nconst isSelectedComponentExist = ComponentSelectionUtil.isSelectedComponentExist;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    const id = act.payload.id;\n    const productAspect = act.payload.productAspect;\n\n    if (!isSelectedComponentExist(id, productAspect, state.selectedComponents) &&\n      isComponentExist(id, state.availableComponents)) {\n      const availableComponent = state.availableComponents.filter((component) => component.id === id );\n      const seletedComponent = Object.assign({}, availableComponent[0]);\n      seletedComponent.productAspect = productAspect;\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          seletedComponent\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    const id = act.payload.id;\n    const productAspect = act.payload.productAspect;\n\n    if (isSelectedComponentExist(id, productAspect, state.selectedComponents) &&\n      isComponentExist(id, state.availableComponents)) {\n\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) =>\n          component.id !== id || component.productAspect !== productAspect\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.LOAD_SELECTED_COMPONENTS) {\n    const act: LoadSelectedComponentsAction = action;\n    return {\n      ...state,\n      selectedComponents: act.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST_SUCCESS) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST_SUCCESS) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST_SUCCESS) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport type {SecurityRiskAssessmentState} from \"../store/SecurityRiskAssessmentState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {SecurityRiskAssessment} from \"../types/Task\";\n\nconst defaultStartState: SecurityRiskAssessmentState = {\n  securityRiskAssessmentData: null,\n  impactThresholdData: null\n};\n\nexport function securityRiskAssessmentState(state: SecurityRiskAssessmentState = defaultStartState, action: *): SecurityRiskAssessmentState {\n\n  if (action.type === ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT_SUCCESS) {\n    return {\n      ...state,\n      securityRiskAssessmentData: action.payload\n    };\n  }\n\n  if (action.type === ActionType.SRA.LOAD_IMPACT_THRESHOLD) {\n    return {\n      ...state,\n      impactThresholdData: action.payload,\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport type {ControlValidationAuditState} from \"../store/ControlValidationAuditState\";\nimport ActionType from \"../actions/ActionType\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport { cloneDeep } from 'lodash';\n\nconst defaultStartState: ControlValidationAuditState = {\n  controlValidationAuditData: null,\n  cvaSelectedComponents: []\n};\nconst isSelectedComponentExist = ComponentSelectionUtil.isSelectedComponentExist;\n\nexport function controlValidationAuditState(state: ControlValidationAuditState = defaultStartState, action: *): ControlValidationAuditState {\n  if (action.type === ActionType.CVA.LOAD_CONTROL_VALIDATION_AUDIT_SUCCESS) {\n    let controlValidationAuditData = action.payload;\n    let selectedComponents = [];\n\n    if (controlValidationAuditData) {\n      selectedComponents = controlValidationAuditData.selectedComponents;\n      delete controlValidationAuditData.selectedComponents;\n    }\n\n    return {\n      ...state,\n      controlValidationAuditData: controlValidationAuditData,\n      cvaSelectedComponents: selectedComponents\n    };\n  }\n\n  if (action.type === ActionType.CVA.UPDATE_CONTROL_VALIDATION_AUDIT_DATA) {\n    const selectedOption = action.payload.selectedOption;\n    const productAspect = action.payload.productAspect;\n    const controlID = action.payload.controlID;\n    const componentID = action.payload.componentID;\n    const selectedComponents = cloneDeep(state.cvaSelectedComponents);\n    let selectedcomponent = [];\n    if (productAspect !== \"\") {\n      selectedcomponent = selectedComponents.filter((component) => component.id == componentID && component.productAspect == productAspect);\n    } else {\n      selectedcomponent = selectedComponents.filter((component) => component.id == componentID)\n    }\n\n    if(selectedcomponent.length> 0) {\n      const control = selectedcomponent[0].controls.filter((control) => control.id == controlID);\n      if(control.length> 0) {\n        control[0].selectedOption = selectedOption;\n        return {\n          ...state,\n          cvaSelectedComponents: selectedComponents,\n        };\n      }\n    }\n  }\n\n  if (action.type === ActionType.CVA.RE_SYNC_WITH_JIRA_SUCCESS) {\n    const newCVATaskData = action.payload;\n    return {\n      ...state,\n      cvaSelectedComponents: newCVATaskData\n    };\n  }\n\n  if (action.type === ActionType.CVA.EMPTY_CONTROL_VALIDATION_AUDIT_DATA) {\n    const controlValidationAuditData = action.payload;\n\n    return {\n      ...state,\n      controlValidationAuditData: controlValidationAuditData,\n      cvaSelectedComponents: []\n    };\n  }\n\n  return state;\n}\n","import type {LoadingState} from \"../store/LoadingState\";\n\nexport default (state: LoadingState = {}, action: any) => {\n  const { type } = action;\n  const matches = /(.*)\\/(REQUEST|SUCCESS|FAILURE)/.exec(type);\n\n  // not a */REQUEST / */SUCCESS /  */FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [request, requestName, requestState] = matches;\n  return {\n    ...state,\n    // Store whether a request is happening at the moment or not\n    // e.g. will be true when receiving GET_TODOS/REQUEST\n    //      and false when receiving GET_TODOS/SUCCESS / GET_TODOS/FAILURE\n    [requestName]: requestState === 'REQUEST'\n  };\n};\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\nimport {securityRiskAssessmentState} from \"./securityRiskAssessmentState\";\nimport {controlValidationAuditState} from \"./controlValidationAuditState\";\nimport loadingState from './loadingState';\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState,\n  securityRiskAssessmentState,\n  controlValidationAuditState,\n  loadingState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteConfig} from \"../../actions/siteConfig\";\nimport type {SiteConfig} from \"../../types/SiteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteConfig: state.siteConfigState.siteConfig,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n      dispatch(loadSiteConfig());\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  siteConfig?: SiteConfig | null,\n  taskSubmission?: TaskSubmissionType | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteConfig,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission || !siteConfig) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteConfig.siteTitle} showLogoutButton={false} logopath={siteConfig.logoPath}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\"}\n          siteConfig={siteConfig}\n          siteTitle={siteConfig.siteTitle}\n        />\n        <Footer footerCopyrightText={siteConfig.footerCopyrightText}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";"],"sourceRoot":""}