{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnarie.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","1","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","inst","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","submission","questionnaireTitle","submissionID","submissionUUID","submitter","role","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","taskSubmissions","toArray","taskName","taskType","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","taskId","taskJSONObject","componentIDs","loadQuestionnaireSubmissionState","_ref3","questionnarie_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnarie_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee12","indexesToUpdate","_context12","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","redirectToTaskSubmission","redirectToComponentSelectionSubmission","handleApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","_this$props$submissio6","dispatchEditSubmissionAction","setState","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref11","_callee9","_ref12","_context9","approveQuestionnaireSubmission","_x14","_x15","_ref13","_callee10","_ref14","_context10","denyQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","editQuestionnaireSubmission","_x18","_x19","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","isCurrentUserSubmitter","Task_TaskSubmission","siteConfigState","currentUserState","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","_this2","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","QuestionnaireForBusinessOwnerDataService","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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,IAAAkC,EAAA,CACA+E,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAIA,SAAAC,EAAAC,GACA,IAAAzX,EAAA0X,EAAAD,GACA,OAAA7a,EAAAoD,GAEA,SAAA0X,EAAAD,GACA,IAAA7a,EAAAgK,EAAAjE,EAAA8U,GAAA,CACA,IAAArW,EAAA,IAAAnB,MAAA,uBAAAwX,EAAA,KAEA,MADArW,EAAAuW,KAAA,mBACAvW,EAEA,OAAAuB,EAAA8U,GAEAD,EAAA9S,KAAA,WACA,OAAA9I,OAAA8I,KAAA/B,IAEA6U,EAAApX,QAAAsX,EACArV,EAAAqD,QAAA8R,EACAA,EAAAxX,GAAA,u9BCjKe4X,EA1CI,CACjBC,KAAM,CACJC,wBAAyB,0BACzBC,uBAAwB,yBACxBC,yBAA0B,4BAE5BC,cAAe,CACbC,+BAAgC,iCAChCC,oCAAqC,sCACrCC,iCAAkC,mCAClCC,uCAAwC,yCACxCC,2CAA4C,8CAE9CC,KAAM,CACJC,qBAAsB,mCACtBC,4BAA6B,0CAC7BC,kCAAmC,gDACnCC,8BAA+B,4CAC/BC,yBAA0B,uCAC1BC,qBAAsB,oCAExBC,oBAAqB,CACnBC,yBAA0B,sDAC1BC,uBAAwB,oDACxBC,0BAA2B,uDAC3BC,iBAAkB,8CAClBC,cAAe,4CAGjBC,GAAI,CACFC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,mBAAoB,sBAEtBC,KAAM,CACJC,iBAAkB,gCAEpBC,YAAa,CACXC,eAAgB,oXC5GCC,6MAEmBC,GACpC9c,OAAO+c,SAASC,KAAhB,+BAAA3W,OAAsDyW,yDAGnBA,GACnC9c,OAAO+c,SAASC,KAAhB,2BAAA3W,OAAkDyW,0DAGdA,GAAkC,IAApBG,EAAoBC,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAJ,GAEhEld,OAAO+c,SAASC,KADdC,EACF,kDAAA5W,OAAyEyW,EAAzE,WAAAzW,OAAuF4W,GAIzF,4BAAA5W,OAAmDyW,oDAGrBA,GAAkC,IAApBG,EAAoBC,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAJ,GAE1Dld,OAAO+c,SAASC,KADdC,EACF,4CAAA5W,OAAmEyW,EAAnE,WAAAzW,OAAiF4W,GAInF,sBAAA5W,OAA6CyW,kEAGDA,GAAkC,IAApBG,EAAoBC,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAJ,GAExEld,OAAO+c,SAASC,KADdC,EACF,2DAAA5W,OAAkFyW,EAAlF,WAAAzW,OAAgG4W,GAIlG,qCAAA5W,OAA4DyW,8CAI5D9c,OAAO+c,SAASC,KAAO,6DAIvBhd,OAAO+c,SAASC,KAAO,uEAIvBhd,OAAO+c,SAASC,KAAO,gxBCnCNG,6OAEEC,wHACuBA,GAAnCC,UAAOC,cAAWC,cACnBC,EAAU,GAEZD,IACFC,EAAQ,gBAAkBD,GAGtBrf,EAAO,CACXmf,MAAOI,IAASJ,GAChBC,UAAWA,GAGPI,EAAOC,IAAMxT,OAAO,CACxByT,IAAK,WACLC,OAAQ,OACR3f,KAAMA,EACNsf,QAASA,aAGYE,EAAKla,oBAAtBsa,SACAC,EAAOD,EAAS5f,OAGhB8f,EAAeC,IAAE/U,IAAI6U,EAAM,mBAAoB,8BAE7C,IAAI7a,MAAM8a,oCAGXD,yTC1CEG,EAAwB,IAAIhb,MAAM,2CAClCib,EAAsB,IAAIjb,MAAM,4UCuCxBkb,qMAEWhB,GAGV,IAAAiB,oUAAAC,CAAA,GACoBlB,GAA/BmB,EADWF,EACXE,WAAYC,EADDH,EACCG,YAEbC,EA5BV,SAA6BF,GAC3B,IAAME,EAASva,KAAKC,MAAMoa,GAC1B,IAAIE,IAAWC,MAAMC,QAAQF,GAC3B,MAAMN,EAER,OAAOM,EAuBUG,CAAoBL,GAC7BM,EA5CV,SAA8BL,GAC5B,IAAKA,EACH,MAAO,GAGT,IAAMM,EAAa5a,KAAKC,MAAMqa,GACxBK,EAAU,GAMhB,OALIC,GACFb,IAAEtW,KAAKmX,GAAYlX,QAAQ,SAACwC,GAC1ByU,EAAQZ,IAAEc,SAAS3U,IAAQ0U,EAAW1U,KAGnCyU,EAgCWG,CAAqBR,GAC/BS,EAtBV,SAA+BJ,GAC7B,IAAII,EAAoB,GAQxB,OAPAhB,IAAEtW,KAAKkX,GAASjX,QAAQ,SAACsX,GACvB,IAAMC,EAASN,EAAQK,IAClBD,GAAqBG,QAAQnB,IAAE/U,IAAIiW,EAAN,aAA2B,MAC3DF,EAAoBC,KAIjBD,EAaqBI,CAAsBR,GAEhD,OAAOJ,EAAO7Y,IAAI,SAAC0Z,EAAgBC,GACjC,IAAML,EAAajB,IAAEc,SAASd,IAAE/U,IAAIoW,EAAgB,KAAM,KACpDE,EAAYJ,QAAQnB,IAAE/U,IAAI2V,EAAN,GAAAxY,OAAkB6Y,EAAlB,eAA0C,IAC9DO,EAAeL,QAAQnB,IAAE/U,IAAI2V,EAAN,GAAAxY,OAAkB6Y,EAAlB,kBAA6C,IAItEQ,GAAY,EAEdA,EADET,EACWA,IAAsBC,EAEN,IAAhBK,EAGf,IAAII,EAAS,KACTC,EAAU,KAERC,EAAeL,EAAYvB,IAAE/U,IAAI2V,EAAN,GAAAxY,OAAkB6Y,EAAlB,WAAuC,IAAM,GACxEY,EAAgBN,EAAYvB,IAAE/U,IAAI2V,EAAN,GAAAxY,OAAkB6Y,EAAlB,YAAwC,IAAM,GAE1Ea,EAAe9B,IAAE/U,IAAIoW,EAAgB,oBAAqB,IAC1DU,EAAgB/B,IAAE/U,IAAIoW,EAAgB,qBAAsB,IAE9DS,GAAgBrB,MAAMC,QAAQoB,IAAiBA,EAAarhB,OAAS,IACvEihB,EAASI,EAAana,IAAI,SAACqa,GAEzB,IAAIha,EAAOgY,IAAEc,SAASd,IAAE/U,IAAI+W,EAAa,YAAa,KAAKC,cACxC,CAAC,OAAQ,QAAS,WAAY,OAAQ,OACzCC,SAASla,KACvBA,EAAO,QAGT,IAAMma,EAAUnC,IAAEc,SAASd,IAAE/U,IAAI+W,EAAa,KAAM,KAC9CI,EAAqB,CACzBpd,GAAImd,EACJE,MAAOrC,IAAEc,SAASd,IAAE/U,IAAI+W,EAAa,QAAS,KAC9Cha,KAAMA,EACNsa,SAAUnB,QAAQnB,IAAE/U,IAAI+W,EAAa,YAAY,IACjDO,UAAWC,OAAOC,SAASzC,IAAEc,SAASd,IAAE/U,IAAI+W,EAAa,YAAa,KACtEU,YAAa1C,IAAEc,SAASd,IAAE/U,IAAI+W,EAAa,cAAe,KAC1D/hB,KAAM,MAIR,GAAI2hB,GAAgBnB,MAAMC,QAAQkB,IAAiBA,EAAanhB,OAAS,EAAG,CAC1E,IAAMygB,EAASlB,IAAEjZ,KAAK6a,EAAae,OAAO,SAACzB,GAAD,OAAYA,EAAOlc,KAAOmd,KACpE,GAAIjB,EAAQ,CACV,IAAM0B,EAAY5C,IAAEc,SAASd,IAAE/U,IAAIiW,EAAQ,OAAQ,OAC/C0B,IACFR,EAAMniB,KAAO2iB,IAKnB,OAAOR,KAIPL,GAAiBtB,MAAMC,QAAQqB,IAAkBA,EAActhB,OAAS,IAC1EkhB,EAAUI,EAAcpa,IAAI,SAACkb,GAE3B,IAAI7a,EAAOgY,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,aAAc,KAAKZ,cAC1C,CAAC,WAAY,OAAQ,UAAW,UACnCC,SAASla,KACvBA,EAAO,YAGT,IAAM8a,EAAW9C,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,KAAM,KAChDE,EAAuB,CAC3B/d,GAAI8d,EACJT,MAAOrC,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,QAAS,KAC/C7a,KAAMA,EACNgb,SAAS,GAGE,YAAThb,IACF+a,EAAOE,QAAUjD,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,UAAW,MAGhD,SAAT7a,IACF+a,EAAOG,KAAOlD,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,SAAU,MAG5C,WAAT7a,IACF+a,EAAOzhB,OAAS0e,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,SAAU,MAI3D,IAAMM,EAASnD,IAAEc,SAASd,IAAE/U,IAAI4X,EAAc,SAAU,KAIxD,GAHAE,EAAOI,OAASA,EAGZtB,GAAiBpB,MAAMC,QAAQmB,IAAkBA,EAAcphB,OAAS,EAAG,CAC7E,IAAMygB,EAASlB,IAAEjZ,KAAK8a,EAAcc,OAAO,SAACzB,GAAD,OAAYA,EAAOlc,KAAO8d,KACrE,GAAI5B,EAAQ,CACV,IAAM8B,EAAU7B,QAAQnB,IAAE/U,IAAIiW,EAAQ,WAAW,IACjD6B,EAAOC,QAAUA,GAIrB,OAAOD,KAIX,IAAMK,EAAqB,CACzBpe,GAAIic,EACJoC,MAAOrD,IAAEc,SAASd,IAAE/U,IAAIoW,EAAgB,QAAS,KACjDiC,QAAStD,IAAEc,SAASd,IAAE/U,IAAIoW,EAAgB,WAAY,KACtDkC,YAAavD,IAAEc,SAASd,IAAE/U,IAAIoW,EAAgB,cAAe,KAC7DrZ,KAAiF,UAA3EgY,IAAEc,SAASd,IAAE/U,IAAIoW,EAAgB,kBAAmB,KAAKY,cAA4B,QAAU,SACrGR,UAAWA,EACXF,UAAWA,EACXC,aAAcA,GAUhB,OAPIE,IACF0B,EAAS1B,OAASA,GAEhBC,IACFyB,EAASzB,QAAUA,GAGdyB,2NCzKQI,kMAEQ3C,GACzB,IAAM7b,EAAK8b,IAAS7V,IAAI4V,EAAY,KAAM,KACpC/V,EAAOgW,IAAS7V,IAAI4V,EAAY,OAAQ,KAE1C7Y,EAAO8Y,IAAS7V,IAAI4V,EAAY,WAAY,KAChD,OAAQ7Y,GACN,IAAK,gBACL,IAAK,YACH,MACF,QACEA,EAAO,gBAGX,IAAIyb,EAAY,GACVnD,EAAaQ,IAAS7V,IAAI4V,EAAY,oBAAqB,KAQjE,OAPIP,IACFmD,EAAYtD,EAAeuD,uBAAuB,CAChDpD,aACAC,YAAa,QAIV,CAACvb,KAAI8F,OAAM9C,OAAMyb,6VCdPE,8kBA0BEzE,EAAqB3Z,QAAQ,CAAC6Z,uPAA3CU,SACA7f,EAAOgL,IAAI6U,EAAM,qBAAsB,IACxCW,MAAMC,QAAQzgB,IAAyB,IAAhBA,EAAKQ,6BACzBwf,gBAIF2D,EAAgB3jB,EAAK,GAErBojB,EAAQvC,IAAS7V,IAAI2Y,EAAe,QAAS,KAC7CC,EAAW/C,IAAS7V,IAAI2Y,EAAe,WAAY,KAEnDE,EAAmB7Y,IAAI2Y,EAAe,UAAW,IACjDG,EAAUC,KAAKC,aAAaH,GAE5BI,EAAgBjZ,IAAI2Y,EAAe,QAAS,IAC5CO,EAAQH,KAAKI,WAAWF,qBAEvB,CACLb,QACAQ,WACAE,UACAI,8TAIgBL,GAClB,OAAKrD,MAAMC,QAAQoD,GAGHA,EAAiBnc,IAAI,SAAAa,GACnC,IAAI6b,EAAO,GACX,OAAQ7b,EAAI,MACV,IAAK,mBACH6b,EAAOC,IACP,MACF,IAAK,sBACHD,EAAOE,IACP,MACF,IAAK,8BACHF,EAAOG,IACP,MACF,IAAK,qBACHH,EAAOI,IAIX,MAAO,CACLpB,MAAOvC,IAAS7V,IAAIzC,EAAM,QAAS,KACnCkc,SAAUvD,QAAQlW,IAAIzC,EAAM,YAAY,IACxCmc,gBAAiB7D,IAAS7V,IAAIzC,EAAM,qBAAsB,KAC1D6b,KAAMA,KAvBD,sCA6BOO,GAChB,IAAKnE,MAAMC,QAAQkE,GACjB,MAAO,GAGT,IAAMT,EAAQ,GAKd,OAJAS,EAAejb,QAAQ,SAACkb,GACtB,IAAMC,EAAOtB,EAAWuB,oBAAoBF,GAC5CV,EAAMxjB,KAAKmkB,KAENX,kNC5GUa,2LAEC9a,GAAuC,IAAzB+a,IAAyBhG,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,KAAAA,UAAA,GAEzD,GADAiG,MAAMhb,GACF+a,EACF,MAAM/a,wKCCL,SAASib,IACd,wBAAAC,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAA1C,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqBlC,EAAgBmC,gBAFrC,OAEGL,EAFHE,EAAAI,KAGGhD,EAAsC,CAC1C/a,KAAM4U,EAAWC,KAAKG,yBACtBgJ,QAASP,GAEXD,EAASzC,GAPN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAUHX,EAAUkB,aAAVP,EAAAM,IAVG,yBAAAN,EAAAQ,SAAAZ,EAAAvB,KAAA,wLAAP,gBAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,2qCC8BaoH,oaA3BMC,uDAEV,IAAAC,EAAAvC,KAEDwC,EAAO,CAAI,UAAJpe,OAAAqe,GAAiBzC,KAAK0C,MAAMF,UAKzC,OAJIxC,KAAK0C,MAAMC,OAAOjC,UACpB8B,EAAQ7lB,KAAK,YAIbimB,EAAAte,EAAA1B,cAACigB,EAAA,EAAD,CAAMC,UAAWN,EAAQvd,KAAK,KAAM8d,GAAI/C,KAAK0C,MAAMM,KAAMC,QAAS,SAACC,GAC9DX,EAAKG,MAAMC,OAAOjC,WACnBwC,EAAMC,iBACNjC,MAAM,qBAGR0B,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,QACbF,EAAAte,EAAA1B,cAAA,OAAKE,IAAKkd,KAAK0C,MAAMC,OAAOtC,KAAM+C,IAAKpD,KAAK0C,MAAMC,OAAOtD,SAE3DuD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACZ9C,KAAK0C,MAAMC,OAAOtD,yrCCRdgE,oaAbUf,uDAGrB,IAAME,EAAO,CAAI,cAAJpe,OAAAkf,GAAqBtD,KAAK0C,MAAMF,UAE7C,OACEI,EAAAte,EAAA1B,cAACigB,EAAA,EAAD,CAAMC,UAAWN,EAAQvd,KAAK,KAAM8d,GAAI/C,KAAK0C,MAAMM,MAChDhD,KAAK0C,MAAMrD,wWCbCkE,uVAGX9H,EAAOC,IAAMxT,OAAO,CACxByT,IAAK,gBACLC,OAAQ,MACRL,QAAS,CACPiI,mBAAoB,6BAGD/H,EAAKla,oBAAtBsa,SACA5f,EAAO4f,EAAS5f,KAChB+e,EAAQgB,IAAE/U,IAAIhL,EAAM,YAAa,4BAE/B,IAAIgF,MAAMhF,mCAEX+e,k2CCXLyI,oaAAqBnB,uDAMhB,IAAAC,EAAAvC,KACAwC,qUADAkB,CAAA,GACe1D,KAAK0C,OAApBF,QAEP,OACEI,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAS,gBAAA1e,OAAkBoe,EAAQvd,KAAK,MAC9Cge,QAAS,WACPV,EAAKoB,WAGPf,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,OAAKE,IAAK8gB,OADZ,kMAUoBL,GAAiBM,sBAAnCvI,SACNvd,OAAO+c,SAASC,KAAhB,+BAAA3W,OAAsDkX,0TA1BpDmI,GAEGK,aAAe,CACpBtB,QAAS,IA2BEiB,u7BCoBAM,oaA9CIzB,uDAER,IAAA0B,qUAAAC,CAAA,GACuCjE,KAAK0C,MAAMjB,WAAlDpC,EADA2E,EACA3E,MAAOQ,EADPmE,EACOnE,SAAUE,EADjBiE,EACiBjE,QAASI,EAD1B6D,EAC0B7D,MAEjC,OACEyC,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,QACbF,EAAAte,EAAA1B,cAACshB,GAAD,CAAc1B,QAAS,CAAC,WAAW,cAAe,OAAQ,UAC1DI,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAAA,KAAGmY,KAAK,KAAI6H,EAAAte,EAAA1B,cAAA,OAAKE,IAAKqhB,IAAWrB,UAAU,UAC3CF,EAAAte,EAAA1B,cAAA,UACGyc,GAEHuD,EAAAte,EAAA1B,cAAA,UACGid,GAEH+C,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,OACZ/C,EAAQpc,IAAI,SAACgf,EAAQyB,GACpB,OACExB,EAAAte,EAAA1B,cAACyhB,GAAD,CAAQrB,KAAI,wBAAA5e,OAA0Bue,EAAOhC,iBACrC6B,QAAS,CAAC,MAAO,QACjBG,OAAQA,EACRxa,IAAKic,QAMrBxB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACZ3C,EAAMxc,IAAI,SAACmd,GACV,IAAIkC,EAAI,qBAAA5e,OAAwB0c,EAAK9f,IAIrC,MAHkB,cAAd8f,EAAK9c,OACPgf,EAAO,mCAGPJ,EAAAte,EAAA1B,cAAC0hB,GAAD,CAAYtB,KAAMA,EAAMR,QAAS,CAAC,QAASnD,MAAOyB,EAAKha,u2BCjCxDyd,oaAbMjC,uDAGjB,OACEM,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAU,UAChBF,EAAAte,EAAA1B,cAAA,w5BCGR,IAmBM4hB,oaAAsBlC,kEAGpBtC,KAAK0C,MAAM+B,4BACbzE,KAAK0C,MAAM+B,8DAKb,OAAKzE,KAAK0C,MAAMjB,UAKdmB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBAAgB4B,MAAO,CACpCC,gBAAe,QAAAvgB,OAAUwgB,KAAV,MACfC,eAAgB,UAEhBjC,EAAAte,EAAA1B,cAACkiB,GAAD,CAAMrD,UAAWzB,KAAK0C,MAAMjB,YAC5BmB,EAAAte,EAAA1B,cAACmiB,GAAD,OATK,4CAeEC,eA5CS,SAACC,GACvB,MAAO,CACLxD,UAAWwD,EAAMxD,YAIM,SAACD,EAAoBkB,GAC9C,MAAO,CACL+B,2BAA4B,WAC1BjD,EAASL,QAmCA6D,CAGbR,q8BC9CIU,oaAAmB5C,uDASd,IAAA6C,qUAAAC,CAAA,GACoDpF,KAAK0C,OAAzDrD,EADA8F,EACA9F,MAAOmD,EADP2C,EACO3C,QAAS9B,EADhByE,EACgBzE,SAAUuC,EAD1BkC,EAC0BlC,QAASoC,EADnCF,EACmCE,UAEtChF,EAAO,KAKX,OAJIgF,IACFhF,EAAOuC,EAAAte,EAAA1B,cAAA,OAAKE,IAAKuiB,KAIjBzC,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAWwC,KAAW,aAAc9C,EAAS,CAAC9B,SAAYA,IAC1DuC,QAAS,SAACC,GACJxC,EACFwC,EAAMC,iBAGRF,EAAQC,KAGf7C,EACAhB,0CA5BH6F,GAEGpB,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cA4BEiC,q2CClCTK,oaAAoBjD,uDAUtB,OAAOM,EAAAte,EAAA1B,cAAC4iB,GAADC,GAAA,GAAgBzF,KAAK0C,MAArB,CAA4BF,QAAO,CAAG,eAAHpe,OAAAshB,GAAqB1F,KAAK0C,MAAMF,oDAVxE+C,GAEGzB,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cAQEsC,8zBCoBAI,oaAnCKrD,uDAET,IAAA6C,EAC4CnF,KAAK0C,MAAjDkD,EADAT,EACAS,eAAgBC,EADhBV,EACgBU,KAAMC,EADtBX,EACsBW,mBAE7B,OACElD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,cACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,YACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBAAf,oBACAF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACViD,wBAAyB,CACvBC,OAAQJ,KAGfhD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aACbF,EAAAte,EAAA1B,cAAA,wBACAggB,EAAAte,EAAA1B,cAAA,YAAOijB,EAAK/e,OAEd8b,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aACbF,EAAAte,EAAA1B,cAAA,4BACAggB,EAAAte,EAAA1B,cAAA,YAAOijB,EAAKI,SAGhBrD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,QAAQ4D,QAAS6C,0NChC7BK,iMAEMC,GACvB,IAAMvJ,EAAkC,iBAAbuJ,EAAwBnkB,KAAKC,MAAMkkB,GAAYA,EAE1E,MAAO,CACLplB,GAAI8b,IAAS7V,IAAI4V,EAAY,OAC7B/V,KAAI,GAAA1C,OAAK6C,IAAI4V,EAAY,aAArB,KAAAzY,OAAqC6C,IAAI4V,EAAY,YACzDoJ,MAAOhf,IAAI4V,EAAY,SACvBwJ,KAA4C,SAAtCvJ,IAAS7V,IAAI4V,EAAY,SAC/ByJ,OAAgD,SAAxCxJ,IAAS7V,IAAI4V,EAAY,m+BCLlB0J,+PAEqBpL,iHACGA,GAAlCwF,oBAAiBrF,cAClBF,0EAEwCuF,iCAK3BzF,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA0K,EAAiBxK,IAAE/U,IAAI6U,EAAM,0CAA2C,4BAEtEG,kCAGDuK,2LAGmB7F,uGACpBvF,gJAUgBuF,sGAWHzF,EAAqB3Z,QAAQ,CAAC6Z,oBAA3CU,SACA2K,EAAazK,IAAE/U,IAAI6U,EAAM,2BAA4B,MACrD4K,EAAoB1K,IAAE/U,IAAI6U,EAAM,yBAA0B,MAC1D6K,EAAW3K,IAAE/U,IAAI6U,EAAM,wBAAyB,MAEjD2K,GAAeC,GAAsBC,wBAClC1K,kCAGD,CACLoD,MAAOrD,IAAE/U,IAAIyf,EAAmB,OAAQ,IACxC7G,SAAU7D,IAAE/U,IAAI0f,EAAU,QAAS,IACnChG,gBAAiB3E,IAAE/U,IAAIyf,EAAmB,KAAM,IAChDd,eAAgB5J,IAAE/U,IAAIyf,EAAmB,iBAAkB,IAC3Db,KAAMM,GAAWS,kBAAkBH,mMAIND,uGACzBpL,6JAU6BoL,gfA+BhBtL,EAAqB3Z,QAAQ,CAAC6Z,oBAA3CU,SAEA2K,EAAazK,IAAE/U,IAAI6U,EAAM,2BAA4B,IACrD+K,EAAiB7K,IAAE/U,IAAI6U,EAAM,qCAAsC,IACpE2K,GAAeI,wBACZ5K,gBAGFhgB,EAAqC,CACzCojB,MAAOrD,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,qBAAsB,KAC9DC,UAAW9K,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,8BAA+B,KACjE+J,KAAMM,GAAWS,kBAAkBH,GACnCM,sBAAqF,SAA9D/K,IAAE/U,IAAI4f,EAAgB,0BAA2B,SACxEG,WAAY,CACVrG,gBAAiB3E,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,mBAAoB,KACtEI,mBAAoBjL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,qBAAsB,KAC3EK,aAAclL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,KAAM,KACrDM,eAAgBnL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,OAAQ,KACzDO,UAAW,CACTpmB,GAAIgb,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,YACrC/f,KAAMkV,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,gBAAiB,KACxDQ,KAAMrL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,gBAAiB,KACxDZ,MAAOjK,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,iBAAkB,KAC1DR,MAAM,EACNC,QAAQ,GAEVlmB,OAAQ4b,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,sBAAuB,KAAK5I,cAAcqJ,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiCxL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,qBAAsB,KACxFY,cAAezL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,8BAA+B,KAC/Ea,kBAAmB1L,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,kCAAmC,MAEzFpH,UAAWtD,EAAeuD,uBAAuB,CAC/CpD,WAAYN,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,oBAAqB,KAClEtK,YAAaP,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,aAAc,OAE9Dc,gBAAiB3L,IACd4L,QAAQ5L,IAAE/U,IAAI4f,EAAgB,kBAAmB,KACjDljB,IAAI,SAACa,GAOJ,MAN8C,CAC5CqW,KAAMmB,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,OAAQ,KACrCqjB,SAAU7L,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,WAAY,KAC7CsjB,SAAU9L,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ4b,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,SAAU,4BAO5CvI,kMAGyBkf,qHAM8BA,GAAvD+L,iBAAcjK,eAAY8K,eAAYzM,cACvC0M,EAAgBjqB,OAAOkqB,KAAKhmB,KAAKimB,UAAUH,IAE3C3M,+DAE6B8L,6BAA+BjK,6BAA6B+K,mDAM5E9M,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACcE,IAAE/U,IAAI6U,EAAM,gDAAiD,4BAEzEG,qMAI6Bd,2HAMiCA,GAA/D+L,iBAAciB,mBAAgBC,mBAAgB9M,cAEjD6M,EAAe1rB,SAAW2rB,EAAe3rB,6BACrCwf,SAIR,IADIoM,EAAY,GACPjE,EAAQ,EAAGA,EAAQ+D,EAAe1rB,OAAQ2nB,IAC3CnH,EAAakL,EAAe/D,GAC5B2D,EAAaK,EAAehE,GAC5B4D,EAAgBjqB,OAAOkqB,KAAKhmB,KAAKimB,UAAUH,IAC3CO,EAJoD,mBAAAlkB,OAKhD6Y,EALgD,yCAAA7Y,OAKE8iB,EALF,oBAAA9iB,OAKiC6Y,EALjC,oBAAA7Y,OAK8D4jB,EAL9D,+BAS1DK,EAAU1rB,KAAK2rB,UAGblN,4BAEJiN,EAAUpjB,KAAK,wBAIIiW,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACcE,IAAE/U,IAAI6U,EAAM,OAAQ,6BAEhCG,gMAIuBd,mHACOA,GAA/B+L,iBAAc5L,cACfF,qEAEmC8L,2DAKtBhM,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SACfd,IAAE/U,IAAI6U,EAAM,gEAAiE,OACzEjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,iDAAkD,OACjF1b,GAAWya,wBACRoB,kCAED,CAACpB,kNAGkCM,mHACJA,GAA/B+L,iBAAc5L,cACfF,+FAE6D8L,2DAKhDhM,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SACfd,IAAE/U,IAAI6U,EAAM,0FAA2F,OACnGjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,2EAA4E,OAC3G1b,GAAWya,wBACRoB,kCAED,CAACpB,kNAGkCM,mHACJA,GAA/B+L,iBAAc5L,cACfF,0EAEwC8L,2DAK3BhM,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SACfd,IAAE/U,IAAI6U,EAAM,qEAAsE,OAC9EjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,sDAAuD,OACtF1b,GAAWya,wBACRoB,kCAED,CAACpB,+MAG+BM,mHACDA,GAA/B+L,iBAAc5L,cACfF,uEAEqC8L,2DAKxBhM,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,kEAAmE,OACnGjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,mDAAoD,OACnF1b,GAAWya,wBACRoB,kCAED,CAACpB,+MAG+BM,mHACDA,GAA/B+L,iBAAc5L,cACfF,sEAEoC8L,2DAKvBhM,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,iEAAkE,OAClGjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,kDAAmD,OAClF1b,GAAWya,wBACRoB,kCAED,CAACpB,+vBC1SS0N,+MAEoBC,GACrC,IAAMT,EAAqC,CACzCtK,UAAW+K,EAAa/K,UACxBF,UAAWiL,EAAajL,UACxBC,aAAcgL,EAAahL,aAC3BiL,WAAYD,EAAaxkB,MA0B3B,MAvB0B,UAAtBwkB,EAAaxkB,MAAoByY,MAAMC,QAAQ8L,EAAa9K,UAC9DqK,EAAWrK,OAAS8K,EAAa9K,OAAO/Z,IAAI,SAACya,GAC3C,IAAIniB,EAAOmiB,EAAMniB,KAKjB,OAJIA,GAAQ+f,IAAE0M,SAASzsB,KACrBA,EAAOA,EAAK0sB,QAGP,CACL3nB,GAAIod,EAAMpd,GACV/E,KAAMA,MAKc,WAAtBusB,EAAaxkB,MAAqByY,MAAMC,QAAQ8L,EAAa7K,WAC/DoK,EAAWpK,QAAU6K,EAAa7K,QAAQha,IAAI,SAACob,GAC7C,MAAO,CACL/d,GAAI+d,EAAO/d,GACXge,QAASD,EAAOC,YAKf+I,mDAGuBtI,GAC9B,IAAImJ,GAAwB,EAQ5B,OAPAnJ,EAAU9Z,QAAQ,SAACyZ,GAAa,IAAAyJ,EAAAC,GAAA,GACQ1J,GAA/B7B,EADuBsL,EACvBtL,UAAWC,EADYqL,EACZrL,cAEbD,GAAaC,IAChBoL,GAAwB,KAGrBA,yDAG6BjB,GACpC,IAAIoB,GAAS,EAMb,OALApB,EAAgBhiB,QAAQ,SAACqjB,GACO,gBAA1BA,EAAe5oB,SACjB2oB,GAAS,KAGNA,8CAIP5N,GACuC,IAAAiB,EAAA0M,GAAA,GACG3N,GAAnC8N,EADgC7M,EAChC6M,iBAAkBxJ,EADcrD,EACdqD,UAEnByJ,EAAezJ,EAAU0J,UAAU,SAAC/J,GAAD,OAAcA,EAASpe,KAAOioB,EAAiBjoB,KAClFooB,EAAkBF,IAAiBzJ,EAAUhjB,OAAS,EAEtD4sB,EAAgB,CACpBH,aAAcA,EACdI,qBAAsB,GACtBC,YAAa,EACbC,UAAU,EACVC,WAAW,EACXnsB,OAAQ,IAIV,GAA8B,UAA1B2rB,EAAiBjlB,KASnB,OARIolB,EAEFC,EAAcG,UAAW,EAGzBH,EAAcE,YAAcF,EAAcH,aAAe,EAGpDG,EAIT,GAA8B,WAA1BJ,EAAiBjlB,KAAmB,CACtC,IAAKilB,EAAiBtL,QACpB,MAAM,IAAI1c,MAAM,2CAGlB,IAAMyoB,EAAcT,EAAiBtL,QAAQgM,KAAK,SAAC5K,GACjD,OAAOA,EAAOC,UAEhB,IAAK0K,EACH,MAAM,IAAIzoB,MAAM,kDAIlB,GAAyB,WAArByoB,EAAY1lB,KAAmB,CAEjC,IAAK,IAAIzH,EAAI8sB,EAAcH,aAAe,EAAG3sB,EAAIkjB,EAAUhjB,OAAQF,IACjE8sB,EAAcC,qBAAqB3sB,KAAKJ,GAG1C8sB,EAAc/rB,OAASosB,EAAYpsB,QAAU,GAC7C+rB,EAAcG,UAAW,EAW3B,GARyB,YAArBE,EAAY1lB,OACdqlB,EAAcI,WAAY,GAGH,aAArBC,EAAY1lB,MAAwBolB,IACtCC,EAAcE,YAAcF,EAAcH,aAAe,GAGlC,SAArBQ,EAAY1lB,KAAiB,CAE/B,IAAM4lB,EAAWF,EAAYxK,KAM7B,GALAmK,EAAcE,YAAc9J,EAAU0J,UAAU,SAAC/J,GAC/C,OAAOA,EAASpe,KAAO4oB,IAIrBP,EAAcE,aAAeF,EAAcH,aAC7C,MAAM,IAAIjoB,MAAM,2CAIlB,GAAIooB,EAAcE,YAAcF,EAAcH,aAAe,EAE3D,IADA,IAAIW,EAASR,EAAcH,aAAe,EACnCW,EAASR,EAAcE,aAC5BF,EAAcC,qBAAqB3sB,KAAKktB,GACxCA,IASN,OAJIT,IAEFC,EAAcG,UAAW,GAEpBH,EAGT,MAAM,IAAIpoB,MAAM,2RClKC6oB,mMAEQC,GACzB,OAAOnC,KAAQmC,GAAWpmB,IAAI,SAACkZ,GAC7B,OAAOiN,EAAwB/I,oBAAoBlE,iDAI5BA,GACzB,MAAO,CACL7b,GAAI8b,IAAS7V,IAAI4V,EAAY,OAC7B/V,KAAMgW,IAAS7V,IAAI4V,EAAY,SAC/B0C,YAAazC,IAAS7V,IAAI4V,EAAY,2OCZvBmN,kMAEOD,GACxB,OAAOnC,KAAQmC,GAAWpmB,IAAI,SAACkZ,GAC7B,OAAOmN,EAAiBjJ,oBAAoBlE,iDAIrBA,GACzB,MAAO,CACL7b,GAAI8b,IAAS7V,IAAI4V,EAAY,OAC7BoN,QAASnN,IAAS7V,IAAI4V,EAAY,YAClCmG,KAAMlG,IAAS7V,IAAI4V,EAAY,u+BCIhBqN,8QAEoCC,mHAKSA,GAAvD1K,cAAW2K,8BAA2B9O,cAGvC+O,EAAa,GACnB5K,EAAU9Z,QAAQ,SAACyZ,GAEjB,GAAKA,EAAS5B,cAAiB4B,EAAS7B,WAKlB,WAAlB6B,EAASpb,KAAb,CAKA,IAAM2Z,EAAUyB,EAASzB,QACzB,IAAKA,IAAYlB,MAAMC,QAAQiB,GAC7B,MAAM,IAAI1c,MAAM,+DAIlB0c,EAAQhY,QAAQ,SAACoZ,GACf,GAAKA,EAAOC,QAAZ,CAIA,IAAMG,EAASJ,EAAOI,QACjBA,GAAUX,OAAOC,SAASU,IAAW,GAI1CkL,EAAW1tB,KAAKwiB,SAOY,KAH1BmL,EAAmBC,KAAKF,IAGT5tB,+DAKf4rB,EAAY,GAClBiC,EAAiB3kB,QAAQ,SAACwZ,GACxB,IAAM/D,EAAK,yBAAAhX,OACK+a,EADL,oCAAA/a,OAC8C+a,EAD9C,mCAAA/a,OACsFgmB,EADtF,yBAKX/B,EAAU1rB,KAAKye,KAGXA,4BAENiN,EAAUpjB,KAAK,uBAGIiW,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,yBAAlDQ,SACc7U,IAAI6U,EAAM,OAAQ,6BAE9BG,gMAIuBkO,mHACCA,GAAzBtP,SAAM2P,gBACPpP,mDAEoBP,8BAAwB2P,GAAe,0dAmChCtP,EAAqB3Z,QAAQ,CAAC6Z,oBAAzDqP,SACAC,EAAuBzjB,IAAIwjB,EAAoB,4BAA6B,4BAE1ExO,gBAGFhgB,EAAuB,CAC3B+E,GAAI8b,IAAS7V,IAAIyjB,EAAsB,KAAM,KAC7C7P,KAAMiC,IAAS7V,IAAIyjB,EAAsB,OAAQ,KACjD7C,SAAU/K,IAAS7V,IAAIyjB,EAAsB,WAAY,KACzD5C,SAAUhL,IAAS7V,IAAIyjB,EAAsB,WAAY,KACzDtqB,OAAQ0c,IAAS7V,IAAIyjB,EAAsB,SAAU,KACrDptB,OAAQwf,IAAS7V,IAAIyjB,EAAsB,SAAU,KACrDtD,UAAWjB,GAAWS,kBAAkB3f,IAAIyjB,EAAsB,cAClEC,iBAAkBxN,QAAQlW,IAAIyjB,EAAsB,2BAA2B,IAC/EE,4BAA6B9N,IAAS7V,IAAIyjB,EAAsB,+BAAgC,KAChGN,0BAA2BtN,IAAS7V,IAAIyjB,EAAsB,6BAA8B,KAC5FjL,UAAWtD,EAAeuD,uBAAuB,CAC/CpD,WAAYQ,IAAS7V,IAAIyjB,EAAsB,oBAAqB,KACpEnO,YAAaO,IAAS7V,IAAIyjB,EAAsB,aAAc,OAEhEG,mBAAoBf,GAAwBgB,oBAAoB7jB,IAAIyjB,EAAsB,qBAAsB,KAChHK,YAAaf,GAAiBgB,mBAAmB/jB,IAAIyjB,EAAsB,cAAe,wBAGrFzuB,2MAGkCkuB,6HACkCA,GAApEtP,SAAMsN,mBAAgBC,mBAAgB9M,cAAWkP,gBAEpDrC,EAAe1rB,SAAW2rB,EAAe3rB,6BACrCwf,SAIR,IADIoM,EAAY,GACPjE,EAAQ,EAAGA,EAAQ+D,EAAe1rB,OAAQ2nB,IAC3CnH,EAAakL,EAAe/D,GAC5B2D,EAAaK,EAAehE,GAC5B4D,EAAgBjqB,OAAOkqB,KAAKhmB,KAAKimB,UAAUH,IAC7CO,EAJsD,mBAAAlkB,OAKhD6Y,EALgD,sCAAA7Y,OAMrDyW,EANqD,wBAAAzW,OAO/C6Y,EAP+C,wBAAA7Y,OAQ/C4jB,EAR+C,yBAAA5jB,OAS9ComB,GAAe,GAT+B,+BAc1DnC,EAAU1rB,KAAK2rB,UAGblN,4BAEJiN,EAAUpjB,KAAK,wBAIIiW,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACc7U,IAAI6U,EAAM,OAAQ,6BAE9BG,mMAI0BkO,mHAMiBA,GAA5CtP,SAAMvd,WAAQge,cAAWkP,gBAC5BpP,yDAEyBP,yBAAmBvd,8BAA0BktB,GAAe,+CAMtEtP,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACD7U,IAAI6U,EAAM,mCAAoC,4BAC3CG,kCAED,CAACpB,qMAGsBsP,iHACaA,GAApCtP,SAAMS,cAAWkP,gBAElBpP,qDAEmBP,8BAAwB2P,GAAe,+CAM7CtP,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACD7U,IAAI6U,EAAM,+BAAgC,4BACvCG,kCAED,CAACpB,sMAGuBsP,iHACVA,GAAdc,WACD7P,uCAEQ6P,kFAQmB/P,EAAqB3Z,QAAQ,CAAC6Z,oBAAzDqP,SACAS,EAAiBjkB,IAAIwjB,EAAoB,gBAAiB,4BAExDxO,gBAEF6E,EAAOtB,EAAWuB,oBAAoBmK,qBAErCpK,wNAIPqJ,mHAOqDA,GAA9CtP,SAAMS,cAAW6P,iBAAclB,YAEhC7O,gFAGAP,kCACQ9c,OAAOkqB,KAAKhmB,KAAKimB,UAAUiD,+BAChClB,iDAOU/O,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACD7U,IAAI6U,EAAM,uDAAwD,4BAC/DG,kCAED,CAACpB,wyBChOL,SAASuQ,GAAiC5E,GAC/C,sBAAA6E,EAAAC,GAAAjK,mBAAAC,KAAO,SAAAiK,EAAO/J,GAAP,IAAAvlB,EAAA,OAAAolB,mBAAAK,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA5J,KAAA,EAAA4J,EAAA3J,KAAA,EAGgB0E,GAAyBkF,oBAAoBjF,GAH7D,OAGGvqB,EAHHuvB,EAAAzJ,KAIHP,GAQmDQ,EARD/lB,EAS/C,CACL+H,KAAM4U,EAAWK,cAAcE,oCAC/B6I,aAfKwJ,EAAA3J,KAAA,gBAAA2J,EAAA5J,KAAA,EAAA4J,EAAAvJ,GAAAuJ,EAAA,SAOHtK,MAAKsK,EAAAvJ,IAPF,yBAAAuJ,EAAArJ,OAYF,IAAkDH,GAZhDuJ,EAAAvL,KAAA,YAAP,gBAAA0L,GAAA,OAAAL,EAAAjuB,MAAA4iB,KAAA/E,YAAA,GA0DK,SAAS0Q,GAA0B1C,GACxC,sBAAA2C,EAAAN,GAAAjK,mBAAAC,KAAO,SAAAuK,EAAOrK,EAAUsK,GAAjB,IAAAC,EAAA/E,EAAAgF,EAAA9C,EAAAK,EAAAD,EAAAE,EAAA,OAAAnI,mBAAAK,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,UACCkK,EAAuBD,IACvB9E,EAAa+E,EAAUG,mBAAmBC,gBAAgBnF,WAF3D,CAAAiF,EAAApK,KAAA,eAAAoK,EAAAG,OAAA,wBAAAJ,EAYDzD,GAAmB8D,oBAAoB,CACzCpD,mBACAxJ,UAAWuH,EAAWvH,YANtByJ,EARG8C,EAQH9C,aACAK,EATGyC,EASHzC,YACAD,EAVG0C,EAUH1C,qBACAE,EAXGwC,EAWHxC,SAOEF,EAAqB7sB,OAAS,GAChC+kB,EAAS,CACPxd,KAAM4U,EAAWK,cAAcK,2CAC/BgQ,yBAKAC,EAAcL,GAChB1H,EAAS,CACPxd,KAAM4U,EAAWK,cAAcI,uCAC/BkQ,gBA7BC0C,EAAApK,KAAA,EAkCCyK,GAA0BR,IAAY9P,IAAEuO,KAAF,CAAQrB,GAAR9kB,OAAAmoB,GAAyBjD,GAAzB,CAA+CC,MAlCtF,OAoCDC,GACF5O,EAAQ4R,8BAA8BxF,EAAWG,gBArC9C,yBAAA8E,EAAA9J,SAAA0J,EAAA7L,SAAP,gBAAAyM,EAAAC,GAAA,OAAAd,EAAAxuB,MAAA4iB,KAAA/E,YAAA,YAgKaqR,2FAAf,SAAAK,EAAyCZ,EAAsBa,GAA/D,IAAA5F,EAAA1L,EAAA,OAAA+F,mBAAAK,KAAA,SAAAmL,GAAA,cAAAA,EAAAjL,KAAAiL,EAAAhL,MAAA,UACQmF,EAAa+E,EAAUG,mBAAmBC,gBAAgBnF,WADlE,CAAA6F,EAAAhL,KAAA,eAAAgL,EAAAT,OAAA,wBAAAS,EAAAhL,KAAA,EAM0B0B,GAAiBM,eAN3C,cAMQvI,EANRuR,EAAA9K,KAAA8K,EAAAjL,KAAA,EAAAiL,EAAAhL,KAAA,EAQU0E,GAAyB+F,0BAA0B,CACvDpF,aAAcF,EAAWE,aACzBiB,eAAgByE,EAAgBjpB,IAAI,SAACygB,GAAD,OAAW4C,EAAWvH,UAAU2E,GAAOpjB,KAC3EonB,eAAgBwE,EAAgBjpB,IAAI,SAACygB,GAAD,OAAWmE,GAAmBuE,gCAAgC9F,EAAWvH,UAAU2E,MACvH9I,cAZN,OAAAuR,EAAAhL,KAAA,iBAAAgL,EAAAjL,KAAA,GAAAiL,EAAA5K,GAAA4K,EAAA,SAgBI3L,MAAM2L,EAAA5K,GAAMhD,SAhBhB,yBAAA4N,EAAA1K,SAAAwK,EAAA3M,KAAA,i9BCjRM+M,oaAAezK,uDAQV,IAAA6C,qUAAA6H,CAAA,GACuBhN,KAAK0C,OAA5BrD,EADA8F,EACA9F,MAAOQ,EADPsF,EACOtF,SAEd,OACE+C,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAU,UAChBF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,cACbF,EAAAte,EAAA1B,cAAA,KAAGmY,KAAK,KAAI6H,EAAAte,EAAA1B,cAAA,OAAKE,IAAKqhB,IAAWrB,UAAU,WAE7CF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBACd9C,KAAK0C,MAAMuK,kBAAoBrK,EAAAte,EAAA1B,cAACshB,GAAD,OAEhCtB,EAAAte,EAAA1B,cAAA,UAAKyc,GACLuD,EAAAte,EAAA1B,cAAA,UAAKid,2CApBPkN,GAEGjJ,aAAe,CACpBzE,MAAO,GACPQ,SAAU,GACVoN,kBAAkB,GAqBPF,yvCC1Bf,IA6BMG,oaAAuB5K,kEAEP,IAAA6C,EAAAgI,GAAA,GAC6CnN,KAAK0C,OAA7D/B,EADWwE,EACXxE,iBACPyM,EAFkBjI,EACMiI,iCACQzM,oCAGzB,IAAA0M,EAAAF,GAAA,GAC6CnN,KAAK0C,MAAM4K,YAAxDjO,EADAgO,EACAhO,MAAOQ,EADPwN,EACOxN,SAAU+F,EADjByH,EACiBzH,eAAgBC,EADjCwH,EACiCxH,KADjC0H,EAAAJ,GAAA,GAEiEnN,KAAK0C,OAAtE/B,EAFA4M,EAEA5M,gBAAiB6M,EAFjBD,EAEiBC,yCAExB,OAAI3H,EAKFjD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAUA,IAEhC+C,EAAAte,EAAA1B,cAAC8qB,GAAD,CAAO9H,eAAgBA,EAChBC,KAAMA,EACNC,mBAAoB,WAClB0H,EAAyC7M,MAGlDiC,EAAAte,EAAA1B,cAACmiB,GAAD,OAbK,4CAmBEC,eA5DS,SAACC,GACvB,MAAO,CACLqI,WAAYrI,EAAMiH,mBAAmBoB,aAId,SAAC9L,EAAoBkB,GAC9C,MAAO,CACL0K,gCADK,SAC2BzM,GAC9Ba,EFEC,SAAqCb,GAC1C,OAAAS,EAAAkK,GAAAjK,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAvlB,EAAA,OAAAolB,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgB0E,GAAyBoH,eAAehN,GAHxD,OAGG1kB,EAHH0lB,EAAAI,KAIHP,GAQ8CQ,EARD/lB,EAS1C,CACL+H,KAAM4U,EAAWK,cAAcC,+BAC/B8I,aAfKL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOHT,MAAKS,EAAAM,IAPF,yBAAAN,EAAAQ,OAYF,IAA6CH,GAZ3CT,EAAAvB,KAAA,YAAP,SAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,IAAAmG,EEHawM,CAA4BjN,KAEvC6M,yCAJK,SAIoC7M,GACvCa,EFqBC,SAAoCb,GACzC,OAAAkN,EAAAvC,GAAAjK,mBAAAC,KAAO,SAAAwM,EAAOtM,GAAP,IAAAlG,EAAAT,EAAA,OAAAwG,mBAAAK,KAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,cAAAkM,EAAAnM,KAAA,EAAAmM,EAAAlM,KAAA,EAIqB0B,GAAiBM,eAJtC,cAIGvI,EAJHyS,EAAAhM,KAAAgM,EAAAlM,KAAA,EAOgB0E,GAAyByH,2BAA2B,CAACrN,kBAAiBrF,cAPtF,OAOGT,EAPHkT,EAAAhM,KAUHnH,EAAQqT,+BAA+BpT,GAVpCkT,EAAAlM,KAAA,iBAAAkM,EAAAnM,KAAA,GAAAmM,EAAA9L,GAAA8L,EAAA,SAcH7M,MAAK6M,EAAA9L,IAdF,yBAAA8L,EAAA5L,SAAA2L,EAAA9N,KAAA,aAAP,SAAAkO,GAAA,OAAAL,EAAAzwB,MAAA4iB,KAAA/E,YAAA,IAAA4S,EEtBaG,CAA2BrN,OAgD3BqE,CAGbkI,qxCChEmBiB,oaAAoB7L,uDAE9B,IAAA6C,EAAAiJ,GAAA,GAC6BpO,KAAK0C,OAAlCtD,EADA+F,EACA/F,SAAUiP,EADVlJ,EACUkJ,YAEjB,OACEzL,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,eACZ9C,KAAKsO,WAAWlP,GACjBwD,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAU,MACVpC,UAAWtB,EAAS5B,aACpByF,QAAS,SAACC,GACRmL,EAAYjP,KAEnBA,EAASC,2CAMPD,GAAoB,IAAAyJ,EAAAuF,GAAA,GACoBhP,GAA1C3B,EADsBoL,EACtBpL,UAAWF,EADWsL,EACXtL,UAAWC,EADAqL,EACArL,aAE7B,OAAIC,EAEAmF,EAAAte,EAAA1B,cAAA,OAAKE,IAAKyrB,OAIT/Q,EAMDD,GAAaC,EAEboF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,gCAKfF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,gCAXXF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,8/BCZN0L,oaAlBOlM,uDAEX,IAAA6C,qUAAAsJ,CAAA,GAC8BzO,KAAK0C,OAAnCjD,EADA0F,EACA1F,UAAW4O,EADXlJ,EACWkJ,YAElB,OACEzL,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SAAf,cACAF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACZrD,EAAU9b,IAAI,SAACyb,GACd,OAAOwD,EAAAte,EAAA1B,cAAC8rB,GAAD,CAAatP,SAAUA,EAAUiP,YAAaA,EAAalmB,IAAKiX,EAASpe,24CCRtF2tB,oaAAmBrM,uDAUrB,OAAOM,EAAAte,EAAA1B,cAAC4iB,GAADoJ,GAAA,GAAgB5O,KAAK0C,MAArB,CAA4BF,QAAO,CAAG,cAAHpe,OAAAyqB,GAAoB7O,KAAK0C,MAAMF,oDAVvEmM,GAEG7K,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cAQE0L,k/CCsOAG,oaAhPYxM,uDAEhB,IACAlD,EADA2P,GAAA,GACgB/O,KAAK0C,OAArBtD,SAEP,OACEwD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZ1D,EAASE,SAEZsD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,eACZ1D,EAASG,aAGXS,KAAKgP,cAAc5P,GACnBY,KAAKiP,iBAAiB7P,0CAKfA,GAAoB,IACzB8P,EADyBH,GAAA,GACA/O,KAAK0C,OAA9BwM,kBACP,GAAsB,WAAlB9P,EAASpb,KAAb,CAIA,IAAM2Z,EAA+B3B,IAAE/U,IAAImY,EAAU,UAAW,MAChE,IAAKzB,EACH,OAAO,KAIT,IAAIsB,EAAU,KACRkQ,EAAexR,EAAQgM,KAAK,SAAC5K,GAAD,OAAYA,EAAOC,UAUrD,OATImQ,GAAgBA,EAAalQ,UAC/BA,EACE2D,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,qBACAggB,EAAAte,EAAA1B,cAAA,OAAKmjB,wBAAyB,CAACC,OAAQmJ,EAAalQ,aAMxD2D,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZnF,EAAQha,IAAI,SAACob,EAAQqF,GACpB,OAAQA,GACN,KAAK,EACH,OAAOxB,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAON,EAAOV,MAAOlW,IAAK4W,EAAO/d,GAAIwhB,QAAS,CAAC,QAASS,QAAS,WAClFiM,EAAkBnQ,MAEtB,QACE,OAAO6D,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAON,EAAOV,MAAOlW,IAAK4W,EAAO/d,GAAIwhB,QAAS,CAAC,QAASS,QAAS,WACnFiM,EAAkBnQ,UAK3BE,6CAKUG,GAAoB,IAC5BiQ,EAD4BN,GAAA,GACJ/O,KAAK0C,OAA7B2M,iBACP,GAAsB,UAAlBjQ,EAASpb,KAAb,CAIA,IAAM0Z,EAA6B1B,IAAE/U,IAAImY,EAAU,SAAU,MAC7D,IAAK1B,EACH,OAAO,KAGT,IAAM4R,EAAgB,GAKtB,OAJA5R,EAAO/X,QAAQ,SAACyY,GACdkR,EAAclR,EAAMpd,IAAMod,EAAMniB,MAAQ,KAGnC2mB,EAAAte,EAAA1B,cAAC2sB,GAAA,EAAD,CACLD,cAAeA,EACfE,SAAU,SAAAC,GACR,IAAIC,EAAS,GAiCb,OAhCAhS,EAAO/X,QAAQ,SAACyY,GAAuB,IAAAuR,EAAAZ,GAAA,GACc3Q,GAA5Cpd,EAD8B2uB,EAC9B3uB,GAAIgD,EAD0B2rB,EAC1B3rB,KAAMsa,EADoBqR,EACpBrR,SAAUD,EADUsR,EACVtR,MAAOE,EADGoR,EACHpR,UAC5BpX,EAAQ6U,IAAE/U,IAAIwoB,EAAQzuB,EAAI,OAG5Bsd,GAAanX,EAMboX,EAAY,GAAKpX,GAASA,EAAM1K,OAAS8hB,EAC3CmR,EAAO1uB,GAAP,wCAAAoD,OAAqDma,EAArD,oBAAAna,OAAiFia,GAKtE,UAATra,GACD,2CAA2C4rB,KAAKzoB,GAMtC,SAATnD,IACW6rB,KAAO1oB,EAAO,cACjB2oB,YACRJ,EAAO1uB,GAAM,mBARf0uB,EAAO1uB,GAAM,0BAbb0uB,EAAO1uB,GAAP,8BAAAoD,OAA2Cia,KA0BxCqR,GAETK,SAAU,SAACN,EAAQO,GACjBX,EAAiBW,EAAQP,KAG1B,SAAArO,GAAoDA,EAAlD6O,aAAkD,IAApCP,EAAoCtO,EAApCsO,OAAQQ,EAA4B9O,EAA5B8O,QAASC,EAAmB/O,EAAnB+O,cAC1BC,EAAiB,GASvB,OARApU,IAAEtW,KAAKgqB,GACJ/Q,OAAO,SAAAxW,GACN,OAAOgV,QAAQ+S,EAAQ/nB,MAExBxC,QAAQ,SAAAwC,GACPioB,EAAejoB,GAAOunB,EAAOvnB,KAI/Bya,EAAAte,EAAA1B,cAAC2sB,GAAA,EAAD,KACE3M,EAAAte,EAAA1B,cAAA,aACEggB,EAAAte,EAAA1B,cAAA,aACC8a,EAAO/Z,IAAI,SAACya,GAAU,IAAAiS,EAAAtB,GAAA,GACsB3Q,GAApCpd,EADcqvB,EACdrvB,GAAIgD,EADUqsB,EACVrsB,KAAMqa,EADIgS,EACJhS,MAAOK,EADH2R,EACG3R,YAClB4R,EAAWnT,QAAQnB,IAAE/U,IAAImpB,EAAgBpvB,EAAI,OAC7CwhB,EAAU,GAKhB,OAJI8N,GACF9N,EAAQ7lB,KAAK,SAGX,CAAC,OAAQ,QAAS,OAAOuhB,SAASla,GAElC4e,EAAAte,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP4hB,EAAAte,EAAA1B,cAAA,MAAIkgB,UAAU,SAAQF,EAAAte,EAAA1B,cAAA,aAAQyb,IAC9BuE,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAC2sB,GAAA,EAAD,CAAOvrB,KAAMA,EAAM8C,KAAM9F,EAAI8hB,UAAWN,EAAQvd,KAAK,KAAMyZ,YAAaA,IACvE4R,GAAY1N,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,iDAMrB,SAAT9e,EAEA4e,EAAAte,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP4hB,EAAAte,EAAA1B,cAAA,MAAIkgB,UAAU,SAAQF,EAAAte,EAAA1B,cAAA,aAAQyb,IAC9BuE,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAC2sB,GAAA,EAAD,CAAOzoB,KAAM9F,EAAIuvB,OAAQ,SAAA1C,GAAa,IAChC2C,EAAO,KACLC,EAF8B5C,EAAX6C,MAEDvpB,OAAS,KAKjC,OAJIspB,GAAaA,EAAU9H,OAAOlsB,OAAS,IACzC+zB,EAAOX,KAAOY,GAAWE,UAIzB/N,EAAAte,EAAA1B,cAACguB,GAAA,EAAD,CACYC,WAAW,aACX/N,UAAWN,EAAQvd,KAAK,KACxB6rB,SAAUN,EACVO,SAAU,SAAC5pB,GACT,GAAKA,EAAL,CAIA,IAAMqpB,EAAOX,KAAO1oB,GAAO6pB,OAAO,cAClCb,EAAcnvB,EAAIwvB,QAJhBL,EAAcnvB,EAAI,OAMtBiwB,gBAAiBvS,EACjBwS,aAAa,SACbC,YAAU,OAGzBb,GAAY1N,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,iDAMrB,aAAT9e,EAEA4e,EAAAte,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP4hB,EAAAte,EAAA1B,cAAA,MAAIkgB,UAAU,SAAQF,EAAAte,EAAA1B,cAAA,aAAQyb,IAC9BuE,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAC2sB,GAAA,EAAD,CAAOzoB,KAAM9F,GACV,SAAAqqB,GAAa,IAAXqF,EAAWrF,EAAXqF,MACD,OAAO9N,EAAAte,EAAA1B,cAAA,WAAAwuB,GAAA,GAAcV,EAAd,CAAqB5N,UAAWN,EAAQvd,KAAK,KAAMyZ,YAAaA,OAG1E4R,GAAY1N,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,iDAK3B,OAETF,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAA,WACAggB,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,eAGtBuD,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAA,WACAggB,EAAAte,EAAA1B,cAAA,MAAIkgB,UAAU,eACXsN,GAAkBpU,IAAEtW,KAAK0qB,GAAgB3zB,OAAS,GACjDmmB,EAAAte,EAAA1B,cAAA,qBAEGoZ,IAAEtW,KAAK0qB,GACLzsB,IAAI,SAACwE,GACJ,OACEya,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aAAa3a,IAAKA,GAAMioB,EAAejoB,yyCC5JnEkpB,oaAtEa/O,+DAET0N,EAAmBP,GAAgB,IAAAtK,EAAAmM,GAAA,GACJtR,KAAK0C,OAA5CjD,EAD2C0F,EAC3C1F,UAAW8R,EADgCpM,EAChCoM,qBAGZC,EAAkB/R,EAAUkK,KAAK,SAACvK,GACtC,OAA8B,IAAvBA,EAAS3B,YAElB,GAAK+T,EAAL,CAIA,IAAMvI,EAAmBqI,GAAA,GAAIE,GAC7BxV,IAAEyV,MAAMhC,EAAQ,SAACtoB,EAAOgB,GACtB,IAAMic,EAAQ6E,EAAiBvL,OAAOyL,UAAU,SAAC3kB,GAAD,OAAUA,EAAKxD,KAAOmH,IACnEic,GAAS,GACVpI,IAAE9U,IAAI+hB,EAAN,UAAA7kB,OAAkCggB,EAAlC,SAAgDjd,KAGpD8hB,EAAiB1L,WAAY,EAC7B0L,EAAiBzL,cAAe,EAEhC+T,EAAqBtI,8CAGLlK,GAAsB,IAAAwO,EAAA+D,GAAA,GACQtR,KAAK0C,OAA5CjD,EAD+B8N,EAC/B9N,UAAW8R,EADoBhE,EACpBgE,qBAGZC,EAAkB/R,EAAUkK,KAAK,SAACvK,GACtC,OAA8B,IAAvBA,EAAS3B,YAElB,GAAK+T,EAAL,CAIA,IAAMvI,EAAmBqI,GAAA,GAAIE,GAC7BvI,EAAiBtL,QAAUsL,EAAiBtL,QAAQha,IAAI,SAACa,GAEvD,OADAA,EAAKwa,QAAWxa,EAAKxD,KAAO+d,EAAO/d,GAC5BwD,IAETykB,EAAiB1L,WAAY,EAC7B0L,EAAiBzL,cAAe,EAEhC+T,EAAqBtI,qCAGd,IAAAyI,EAAAJ,GAAA,GACqCtR,KAAK0C,OAA1CjD,EADAiS,EACAjS,UAAWkS,EADXD,EACWC,mBAEZH,EAAkB/R,EAAUkK,KAAK,SAACvK,GACtC,OAA8B,IAAvBA,EAAS3B,YAGlB,OACEmF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,sBACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACbF,EAAAte,EAAA1B,cAACgvB,GAAD,CAASnS,UAAWA,EAAW4O,YAAasD,IAC3CH,GAAmB5O,EAAAte,EAAA1B,cAACivB,GAAD,CAClB1pB,IAAKqpB,EAAgBxwB,GACrBoe,SAAUoS,EACVnC,iBAAkBrP,KAAKqP,iBAAiBjnB,KAAK4X,MAC7CkP,kBAAmBlP,KAAKkP,kBAAkB9mB,KAAK4X,gyCC7D3D,IAiCM8R,oaAA+BxP,kEAEf,IAAA6C,EAAA4M,GAAA,GACyC/R,KAAK0C,OAAzD8D,EADWrB,EACXqB,gBACPwL,EAFkB7M,EACK6M,8BACMxL,oCAGtB,IAAA+G,EAAAwE,GAAA,GACgF/R,KAAK0C,OAArFuP,EADA1E,EACA0E,mCAAoCC,EADpC3E,EACoC2E,qCADpCC,EAAAJ,GAAA,GAE0C/R,KAAK0C,MAAMyJ,iBAArD9M,EAFA8S,EAEA9S,MAAOyH,EAFPqL,EAEOrL,UAAWjB,EAFlBsM,EAEkBtM,KAAMmB,EAFxBmL,EAEwBnL,WAE/B,OAAKnB,GAASmB,EAIY,gBAAtBA,EAAW5mB,OAEXwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,0BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAUiH,IAChClE,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,iBACbF,EAAAte,EAAA1B,cAAA,sDAIFggB,EAAAte,EAAA1B,cAACmiB,GAAD,OAOJnC,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,0BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAUiH,IAEhClE,EAAAte,EAAA1B,cAACwvB,GAAD,CACE3S,UAAWuH,EAAWvH,UACtB8R,qBAAsB,SAACtI,GACrBgJ,EAAmChJ,IAErC0I,mBAAoB,SAACU,GACnBH,EAAqCG,MAIzCzP,EAAAte,EAAA1B,cAACmiB,GAAD,OAhCK,4CAsCEC,eAnFS,SAACC,GACvB,MAAO,CACLkH,gBAAiBlH,EAAMiH,mBAAmBC,kBAInB,SAAC3K,EAAoBkB,GAC9C,MAAO,CACLsP,6BADK,SACwBxL,GAC3BhF,EAAS4J,GAAiC5E,KAE5CyL,mCAJK,SAI8BhJ,GR2DhC,IAAsCjH,EAC3CsQ,EQ3DI9Q,GR0DuCQ,EQ1DDiH,ER2D1CqJ,EAAAhH,GAAAjK,mBAAAC,KAAO,SAAAiR,EAAO/Q,EAAUsK,GAAjB,IAAAC,EAAA7E,EAAA5L,EAAA2B,EAAA8K,EAAA,OAAA1G,mBAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,UAGLL,EAAS,CACPxd,KAAM4U,EAAWK,cAAcG,iCAC/B4I,YAGI+J,EAAuBD,IACvB5E,EAAelL,IAAE/U,IAAI8kB,EAAW,6DAA8D,MAT/F,CAAAyG,EAAA3Q,KAAA,cAWG,IAAI5gB,MAAM,8CAXb,cAAAuxB,EAAA3Q,KAAA,EAcmB0B,GAAiBM,eAdpC,cAcCvI,EAdDkX,EAAAzQ,KAeC9E,EAAa+E,EAAQhhB,GACrB+mB,EAAqCQ,GAAmBuE,gCAAgC9K,GAhBzFwQ,EAAA5Q,KAAA,GAAA4Q,EAAA3Q,KAAA,GAoBG0E,GAAyBkM,qBAAqB,CAClDvL,eACAjK,aACA3B,YACAyM,eAxBC,QA4BHvG,EAASmK,GAA0B3J,IA5BhCwQ,EAAA3Q,KAAA,iBAAA2Q,EAAA5Q,KAAA,GAAA4Q,EAAAvQ,GAAAuQ,EAAA,UA+BHtR,MAAMsR,EAAAvQ,GAAMhD,SA/BT,yBAAAuT,EAAArQ,SAAAoQ,EAAAvS,KAAA,cAAP,SAAA0S,EAAAC,GAAA,OAAAL,EAAAl1B,MAAA4iB,KAAA/E,eQzDEiX,qCAPK,SAOgCG,GACnC7Q,ERuIC,SAAgC6Q,GACrC,OAAAO,EAAAtH,GAAAjK,mBAAAC,KAAO,SAAAuR,EAAOrR,EAAUsK,GAAjB,IAAAC,EAAA/E,EAAAkC,EAAAK,EAAA,OAAAlI,mBAAAK,KAAA,SAAAoR,GAAA,cAAAA,EAAAlR,KAAAkR,EAAAjR,MAAA,UACCkK,EAAuBD,IACvB9E,EAAa+E,EAAUG,mBAAmBC,gBAAgBnF,WAF3D,CAAA8L,EAAAjR,KAAA,eAAAiR,EAAA1G,OAAA,uBAOClD,EAAelC,EAAWvH,UAAU0J,UAAU,SAAC/J,GAAD,OAAcA,EAAS3B,aACxD,GARd,CAAAqV,EAAAjR,KAAA,cASG,IAAI5gB,MAAM,gDATb,UAaAoxB,EAAe7U,cAAiB6U,EAAe9U,UAb/C,CAAAuV,EAAAjR,KAAA,eAAAiR,EAAA1G,OAAA,uBAiBC7C,EAAcvC,EAAWvH,UAAU0J,UAAU,SAAC/J,GAAD,OAAcA,EAASpe,KAAOqxB,EAAerxB,MAC9E,GAlBb,CAAA8xB,EAAAjR,KAAA,gBAAAiR,EAAA1G,OAAA,yBAsBL5K,EAAS,CACPxd,KAAM4U,EAAWK,cAAcI,uCAC/BkQ,gBAxBGuJ,EAAAjR,KAAA,GA4BCyK,GAA0BR,IAAY,CAAC5C,EAAcK,IA5BtD,yBAAAuJ,EAAA3Q,SAAA0Q,EAAA7S,SAAP,SAAA+S,EAAAC,GAAA,OAAAJ,EAAAx1B,MAAA4iB,KAAA/E,YAAA,IAAA2X,EQxIaK,CAAuBZ,OAoEvBrN,CAGb8M,09BCMaoB,oaAlGc5Q,uDAElB,IAAAC,EAAAvC,KACAP,qUADA0T,CAAA,GACiBnT,KAAK0C,OAAtBjD,UAEP,OACEmD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aACZrD,EAAU9b,IAAI,SAACyb,EAAUgF,EAAOgP,GAC/B,IAAMC,EAAe9Q,EAAK+Q,WAAWlU,GACrC,OACEwD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,MAAM3a,IAAKiX,EAASpe,IACjC4hB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,OACbF,EAAAte,EAAA1B,cAAA,SAAIwhB,EAAQ,EAAZ,KAAiBhF,EAASE,UAE5BsD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,qBACfF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,OACZuQ,2CAUNjU,GAET,IAAKA,EAAS5B,aAAc,CAE1B,OACEoF,EAAAte,EAAA1B,cAAA,WAFU,oBAOd,IAAKwc,EAAS7B,UAAW,CAEvB,OACEqF,EAAAte,EAAA1B,cAAA,WAFU,mBAOd,GAAsB,UAAlBwc,EAASpb,MAAoBob,EAAS1B,QAAUjB,MAAMC,QAAQ0C,EAAS1B,SAAW0B,EAAS1B,OAAOjhB,OAAS,EAAG,CAChH,IAAM82B,EAAkB,SAACnV,GACvB,IAAIniB,EAAemiB,EAAMniB,MAAQ,GASjC,MAPmB,SAAfmiB,EAAMpa,OACR/H,EAAO4zB,KAAO5zB,GAAM+0B,OAAO,eAGV,aAAf5S,EAAMpa,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAImjB,EAAS1B,OAAOjhB,OAAS,EAEzBmmB,EAAAte,EAAA1B,cAAA,WACGwc,EAAS1B,OAAO/Z,IAAK,SAAAya,GACpB,IAAMniB,EAAOs3B,EAAgBnV,GAC7B,OACEwE,EAAAte,EAAA1B,cAAA,OAAKuF,IAAKiW,EAAMpd,IACd4hB,EAAAte,EAAA1B,cAAA,SAAIwb,EAAMC,OADZ,IAEEuE,EAAAte,EAAA1B,cAAA,iBAFF,IAGEggB,EAAAte,EAAA1B,cAAA,YAAO3G,OAUjB2mB,EAAAte,EAAA1B,cAAA,WACG2wB,EAAgBnU,EAAS1B,OAAO,IAAIiL,QAM3C,GAAsB,WAAlBvJ,EAASpb,MAAqBob,EAASzB,SAAWlB,MAAMC,QAAQ0C,EAASzB,SAAU,CACrF,IAAIoB,EAAuB/C,IAAEjZ,KAAKqc,EAASzB,QAAQgB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAE7E,OACE4D,EAAAte,EAAA1B,cAAA,WACGmc,GAAU6D,EAAAte,EAAA1B,cAAA,WAAMmc,EAAOV,69BCrCnBmV,oaA9CMlR,uDAEV,IAAA6C,qUAAAsO,CAAA,GAMCzT,KAAK0C,OAJXsE,EAFK7B,EAEL6B,WACA0M,EAHKvO,EAGLuO,wBACAC,EAJKxO,EAILwO,6BACAC,EALKzO,EAKLyO,4BAGF,OAAK5M,EAIqB,gBAAtBA,EAAW5mB,OAEXwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAAA,sDAQJggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAACixB,GAAD,CAAgBpU,UAAWuH,EAAWvH,YACtCmD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,eACNgG,UAAWyO,KACXtR,QAAS,CAAC,UACVS,QAAS2Q,IACtBhR,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,eACNgG,UAAW0O,KACXvR,QAAS,CAAC,UACVS,QAAS0Q,IACtB/Q,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,uBACNmD,QAAS,CAAC,UACV9B,SAAU6H,GAAmByL,yBAAyBhN,EAAWvH,WACjEwD,QAASyQ,MA5BlB,iQC5BQO,wLAEHC,GACd,OAAIA,EAGJ,GAAA9vB,OAAU8vB,GAFD,ygCCcEC,yFAAf,SAAA5I,EAAkC6I,GAAlC,OAAA/S,mBAAAK,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAAY,OAAA,SACS,IAAIjrB,QAAQ,SAACC,GAClB,IAAMizB,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,SAACrR,GAC/B9hB,EAAQ8hB,EAAMsR,OAAOl3B,UAEvB+2B,EAAOI,cAAcL,MANzB,wBAAA5I,EAAArJ,SAAAoJ,EAAAvL,yCAUe0U,yFAAf,SAAAnC,EAAiCoC,GAAjC,IAAA9Y,EAAAuY,EAAAn4B,EAAA,OAAAolB,mBAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,cAAA2Q,EAAA3Q,KAAA,EACyB+S,MAAMD,GAD/B,cACQ9Y,EADR2W,EAAAzQ,KAAAyQ,EAAA3Q,KAAA,EAEqBhG,EAASuY,OAF9B,cAEQA,EAFR5B,EAAAzQ,KAAAyQ,EAAA3Q,KAAA,EAGqBsS,GAAmBC,GAHxC,cAGQn4B,EAHRu2B,EAAAzQ,KAAAyQ,EAAApG,OAAA,SAISnwB,GAJT,yBAAAu2B,EAAArQ,SAAAoQ,EAAAvS,oCAOqB6U,gPAEM1K,+HAC2CA,GAA3D1K,cAAW2H,cAAWH,uBAAoBH,cAG3CgO,EAAU,GACVC,EAAS,CACb9N,mBAAoB,CAClB+N,MAAM,EACNC,UALEC,EAAkB,IAKQ,EAC5BC,MAAO,UACPC,UAAW,UAEbtO,UAAW,CACTkO,MAAM,EACNC,SAAUC,EACVC,MAAO,UACPC,UAAW,UAEbC,eAAgB,CACdL,MAAM,EACNC,SAAUC,EAAkB,EAC5BC,MAAO,WAETG,gBAAiB,CACfN,MAAM,IAGJO,EAAe,CACnBN,SAAUC,GAENM,EAAO,CACXnW,MAAK,GAAAjb,OAAK6iB,EAAL,OAAA7iB,OAA6BgjB,EAAUtgB,OAGvC2uB,EAAOC,KAASC,QAAhBF,IACPE,KAAQF,IAAMA,YAIiBf,GAAkBkB,qBAA3CC,SAENf,EAAQn4B,KAAK,CACXm5B,MAAOD,EACPE,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpBJ,EAAQn4B,KAAK,CACXs5B,KAAMhP,EACNvC,MAAO,qBACPsR,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAItCJ,EAAQn4B,KAAK,CACXs5B,KAAMnP,EACNpC,MAAO,YACPsR,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQn4B,KAAK,CACXs5B,KAAI,gBACJvR,MAAO,iBACPsR,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAGpBJ,EAAQn4B,KAAK,CACXs5B,KAAI,SAAA7xB,OAAWgjB,EAAUtgB,MACzB4d,MAAO,kBACPsR,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAGtCJ,EAAQn4B,KAAK,CACXs5B,KAAI,UAAA7xB,OAAYgjB,EAAUnB,OAC1B+P,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQn4B,KAAK,CACXs5B,KAAI,YACJvR,MAAO,iBACPsR,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpBzV,EAAU9Z,QAAQ,SAACyZ,EAAUgF,GAS3B,GAPA0Q,EAAQn4B,KAAK,CACXs5B,KAAI,GAAA7xB,OAAKggB,EAAQ,EAAb,MAAAhgB,OAAmBgb,EAASE,SAChCoF,MAAO,kBACPsR,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAIjC9V,EAAS5B,aASd,GAAK4B,EAAS7B,UAAd,CASA,GAAsB,UAAlB6B,EAASpb,MAAoBob,EAAS1B,QAAUjB,MAAMC,QAAQ0C,EAAS1B,SAAW0B,EAAS1B,OAAOjhB,OAAS,EAAG,CAChH,IAAM82B,EAAkB,SAACnV,GACvB,IAAIniB,EAAemiB,EAAMniB,MAAQ,GASjC,MAPmB,SAAfmiB,EAAMpa,OACR/H,EAAO4zB,KAAO5zB,GAAM+0B,OAAO,eAGV,aAAf5S,EAAMpa,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAImjB,EAAS1B,OAAOjhB,OAAS,OAC3B2iB,EAAS1B,OAAO/X,QAAQ,SAACyY,EAAOgG,EAAO8R,GACrC,IAAMC,EAAU/R,IAAU8R,EAAIz5B,OAAS,EACvCq4B,EAAQn4B,KAAK,CACXs5B,KAAI,GAAA7xB,OAAKga,EAAMC,MAAX,MAAAja,OAAqB6vB,GAAWnX,SAASyW,EAAgBnV,KAC7D4X,OAAQ,CAAC,EAAG,EAAG,EAAGG,EAASjB,EAAkBzW,SAAQ,GAAAra,OAAI8wB,EAAkB,cAOjFJ,EAAQn4B,KAAK,CACXs5B,KAAM1C,EAAgBnU,EAAS1B,OAAO,IAAIiL,OAC1CqN,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAMtB,GAAsB,WAAlB9V,EAASpb,MAAqBob,EAASzB,SAAWlB,MAAMC,QAAQ0C,EAASzB,SAAU,CACrF,IAAIoB,EAAuB/C,IAAEjZ,KAAKqc,EAASzB,QAAQgB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAC7E8V,EAAQn4B,KAAK,CACXs5B,KAAMlX,EAAOV,MACb2X,OAAQ,CAAC,EAAG,EAAG,EAAGd,WA/CpBJ,EAAQn4B,KAAK,CACXs5B,KAAM,kBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,UAXpBJ,EAAQn4B,KAAK,CACXs5B,KAAM,mBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,iBA4DMR,GAAkB0B,qBAA1CC,SAENvB,EAAQn4B,KAAK,CACXm5B,MAAOO,EACPN,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,yBAIZS,KAAQW,UAAU,CAACd,OAAMV,UAASC,SAAQQ,iBAAegB,SAASf,EAAKnW,kEAE7E6B,MAAM,iPAKiBkT,2GAClB,IAAIjzB,QAAQ,SAACC,GAClB,IAAMizB,EAAS,IAAIC,WACnBD,EAAOmC,OAAS,SAAStT,GACvB9hB,EAAQ8hB,EAAMsR,OAAOl3B,SAEvB+2B,EAAOI,cAAcL,g4CC7M3B,IA6BMqC,oaAAwBnU,kEAER,IAAA6C,EAAAuR,GAAA,GACyC1W,KAAK0C,OAAzD8D,EADWrB,EACXqB,gBACPwL,EAFkB7M,EACK6M,8BACMxL,oCAGtB,IAAA2L,EAAAuE,GAAA,GAC0C1W,KAAK0C,MAAMyJ,iBAArD9M,EADA8S,EACA9S,MAAOyH,EADPqL,EACOrL,UAAWjB,EADlBsM,EACkBtM,KAAMmB,EADxBmL,EACwBnL,WAE/B,OAAKnB,EAKHjD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,mBACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAS,qBAC/B+C,EAAAte,EAAA1B,cAAC+zB,GAAD,CAAQ7P,UAAWA,EACXE,WAAYA,EACZ0M,wBAAyB1T,KAAK0T,wBAAwBtrB,KAAK4X,MAC3D2T,6BAA8B3T,KAAK2T,6BAA6BvrB,KAAK4X,MACrE4T,4BAA6B5T,KAAK4T,4BAA4BxrB,KAAK4X,QAC3E4C,EAAAte,EAAA1B,cAACmiB,GAAD,MAPF,KAJO,uDAkBT/E,KAAK0C,MAAMkU,qFAGkB,IAAAC,EAAAH,GAAA,GACO1W,KAAK0C,MAAMyJ,iBAAxCnF,EADsB6P,EACtB7P,WAAYF,EADU+P,EACV/P,UACdE,GAIL6N,GAAQiC,YAAY,CAClBrX,UAAWuH,EAAWvH,UACtB2H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,oEAKF,IAAMjM,EAAOmB,IAAE/U,IAAI+Y,KAAK0C,MAAMyJ,gBAAiB,4BAA6B,IACvEtR,GAGLD,EAAQqT,+BAA+BpT,0CAI5BmK,eApFS,SAACC,GACvB,MAAO,CACLkH,gBAAiBlH,EAAMiH,mBAAmBC,kBAInB,SAAC3K,EAAoBkB,GAC9C,MAAO,CACLsP,6BADK,SACwBxL,GAC3BhF,EAAS4J,GAAiC5E,KAE5CoQ,4BAJK,WbkLF,IACLG,Ea9KIvV,Gb8KJuV,EAAAzL,GAAAjK,mBAAAC,KAAO,SAAA0V,EAAOxV,EAAUsK,GAAjB,IAAAC,EAAAI,EAAAnF,EAAA1L,EAAA2b,EAAApc,EAAA,OAAAwG,mBAAAK,KAAA,SAAAwV,GAAA,cAAAA,EAAAtV,KAAAsV,EAAArV,MAAA,UAAAqV,EAAAtV,KAAA,EAEGmK,EAAuBD,IACvBK,EAAkBJ,EAAUG,mBAAmBC,gBAC/CnF,EAAamF,EAAgBnF,WAJhC,CAAAkQ,EAAArV,KAAA,eAAAqV,EAAA9K,OAAA,qBAUC7D,GAAmByL,yBAAyBhN,EAAWvH,WAVxD,CAAAyX,EAAArV,KAAA,eAWDX,MAAM,wEAXLgW,EAAA9K,OAAA,wBAAA8K,EAAArV,KAAA,GAeqB0B,GAAiBM,eAftC,eAeGvI,EAfH4b,EAAAnV,KAAAmV,EAAArV,KAAA,GAgBkB0E,GAAyB4Q,oBAAoB,CAACjQ,aAAcF,EAAWE,aAAc5L,cAhBvG,eAAA2b,EAAAC,EAAAnV,KAgBIlH,EAhBJoc,EAgBIpc,KAhBJqc,EAAArV,KAAA,GAiBGqI,GAAgBkN,0CAA0C,CAC9D3X,UAAWuH,EAAWvH,UACtB2K,0BAA2BpD,EAAWE,aACtC5L,cApBC,QAsBHV,EAAQyc,+BAA+Bxc,GAtBpCqc,EAAArV,KAAA,iBAAAqV,EAAAtV,KAAA,GAAAsV,EAAAjV,GAAAiV,EAAA,SAyBHhW,MAAKgW,EAAAjV,IAzBF,yBAAAiV,EAAA/U,SAAA6U,EAAAhX,KAAA,aAAP,SAAAsX,EAAAC,GAAA,OAAAR,EAAA35B,MAAA4iB,KAAA/E,iBatGa+J,CAGbyR,mvCC/EF,IAAMe,GAAiB,SAACp3B,GACtB,OAAOA,EACJq3B,MAAM,KACN9zB,IAAI,SAAC+zB,GACJ,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIh0B,MAAM,KAEhDuB,KAAK,MAGJ4yB,oaAAgBvV,uDAaX,IAAA6C,EAAA2S,GAAA,GAC0B9X,KAAK0C,OAA/BsE,EADA7B,EACA6B,WAAY+Q,EADZ5S,EACY4S,OAEnB,OAAK/Q,EAIqB,gBAAtBA,EAAW5mB,QAAuC,cAAX23B,EAEvCnV,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,kDAQJggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZ9C,KAAKgY,oBAAoBhR,GACzBhH,KAAKiY,YAAYjR,GACjBhH,KAAKkY,gBAAgBlR,GACrBhH,KAAKmY,cAAcnR,IAlBf,iDAuBSA,GAClB,IAAMI,EAAYJ,EAAWI,UAE7B,OACExE,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBACbF,EAAAte,EAAA1B,cAAA,iCACAggB,EAAAte,EAAA1B,cAAA,WAAKggB,EAAAte,EAAA1B,cAAA,0BAAL,IAA2BwkB,EAAUtgB,MACrC8b,EAAAte,EAAA1B,cAAA,WAAKggB,EAAAte,EAAA1B,cAAA,mBAAL,IAAoBwkB,EAAUnB,OAC9BrD,EAAAte,EAAA1B,cAAA,WAAKggB,EAAAte,EAAA1B,cAAA,oBAAL,IAAqB40B,GAAexQ,EAAW5mB,8CAKzC4mB,GAAwB,IAAAzE,EAAAvC,KAC5B2H,EAAkBX,EAAWW,gBACnC,OAA+B,IAA3BA,EAAgBlrB,OACX,KAIPmmB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACbF,EAAAte,EAAA1B,cAAA,mBACC+kB,EAAgBhkB,IAAI,SAAAyd,GAAwC,IAAtCvG,EAAsCuG,EAAtCvG,KAAMgN,EAAgCzG,EAAhCyG,SAAUC,EAAsB1G,EAAtB0G,SAAU1nB,EAAYghB,EAAZhhB,OACxC4a,EADoD8c,GAAA,GACvCvV,EAAKG,OAAlB1H,MACP,OACE4H,EAAAte,EAAA1B,cAAA,OAAKuF,IAAK0S,GACR+H,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAW,eAAgBG,QAAS,SAACC,GAC1B,cAAb4E,EAIJlN,EAAQwd,yBAAyBvd,EAAMG,GAHrCJ,EAAQyd,uCAAuCxd,EAAMG,KAKtD6M,EAPH,KAOe2P,GAAep3B,GAP9B,+CAgBE4mB,GAAwB,IAAA0K,EAAAoG,GAAA,GAQ5B9X,KAAK0C,OANXqV,EAFkCrG,EAElCqG,OACArE,EAHkChC,EAGlCgC,wBACAC,EAJkCjC,EAIlCiC,6BACA2E,EALkC5G,EAKlC4G,yBACAC,EANkC7G,EAMlC6G,sBACAC,EAPkC9G,EAOlC8G,sBAGIC,EACJ7V,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,0BACNgG,UAAW0O,KACXvR,QAAS,CAAC,UACVS,QAAS0Q,IAIxB,GAAe,cAAXoE,EAAwB,CAE1B,IAAMW,EACJ9V,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,eACNgG,UAAWyO,KACXtR,QAAS,CAAC,UACVS,QAASuV,IAKlBG,EACJ/V,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,oBACNmD,QAAS,CAAC,UACV9B,SAAU6H,GAAmBqQ,+BAA+B5R,EAAWW,iBACvE1E,QAASyQ,IAIvB,MAA0B,cAAtB1M,EAAW5mB,OAEXwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG81B,EACAD,EACAE,GAEH/V,EAAAte,EAAA1B,cAAA,aAKoB,4CAAtBokB,EAAW5mB,OAEXwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG81B,EACAD,GAEH7V,EAAAte,EAAA1B,cAAA,aAMJggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG61B,GAEH7V,EAAAte,EAAA1B,cAAA,aAMN,GAAe,aAAXm1B,EAAuB,CACzB,IAAMc,EACJjW,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,UACNmD,QAAS,CAAC,UACVS,QAASqV,IAGjBQ,EACJlW,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,OACNmD,QAAS,CAAC,UACVS,QAASsV,IAIxB,MAA0B,cAAtBvR,EAAW5mB,OAEXwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG61B,GAEH7V,EAAAte,EAAA1B,cAAA,aAMJggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG61B,GAEH7V,EAAAte,EAAA1B,cAAA,WACGi2B,EACAC,IAOT,OACElW,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,WACG61B,GAEH7V,EAAAte,EAAA1B,cAAA,qDAKUokB,GAEd,GAA0B,gBAAtBA,EAAW5mB,QACS,cAAtB4mB,EAAW5mB,OAEX,OAAO,KAGT,IAAMmnB,EAAiBP,EAAWO,eAElC,OACE3E,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,aACbF,EAAAte,EAAA1B,cAAA,uBACAggB,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,+BADF,MAGG40B,GAAejQ,EAAeG,oBAEjC9E,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,+CADF,MAGG40B,GAAejQ,EAAeC,kCAEjC5E,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,2BADF,MAGG40B,GAAejQ,EAAeE,wDAtOnCoQ,GAEG/T,aAAe,CACpBkD,WAAY,KACZ2M,6BAA8B,aAC9BD,wBAAyB,aACzB4E,yBAA0B,aAC1BC,sBAAuB,aACvBC,sBAAuB,aACvBT,OAAQ,SACR/c,MAAO,IAmOI6c,8wCCvPf,IA6CMkB,eAEJ,SAAAA,IAAc,IAAAxW,EAAA,mGAAAyW,CAAAhZ,KAAA+Y,IACZxW,EAAA0W,GAAAjZ,KAAAkZ,GAAAH,GAAAh8B,KAAAijB,QACKiF,MAAQ,CACXkU,WAAW,GAHD5W,yPAFeD,kEAST,IAAA6C,EAAAiU,GAAA,GACyCpZ,KAAK0C,OAAzD8D,EADWrB,EACXqB,gBACPwL,EAFkB7M,EACK6M,8BACMxL,oCAGtB,IAAA2L,EAAAiH,GAAA,GACsDpZ,KAAK0C,MAAMyJ,iBAAjE9M,EADA8S,EACA9S,MAAOwG,EADPsM,EACOtM,KAAMmB,EADbmL,EACanL,WAAYD,EADzBoL,EACyBpL,sBAEhC,IAAKlB,IAASmB,EACZ,OAAO,KAIT,IAAI+Q,EAAS,SAEb,EAAG,CAED,GAAIlS,EAAK7kB,KAAOgmB,EAAWI,UAAUpmB,GAAI,CACvC+2B,EAAS,YACT,MAIF,GAAIhR,EAAuB,CACzBgR,EAAS,WACT,aAEK,GAET,OACEnV,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,oBACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAS,YAC/B+C,EAAAte,EAAA1B,cAACy2B,GAAD,CAASrS,WAAYA,EACZ2M,6BAA8B3T,KAAK2T,6BAA6BvrB,KAAK4X,MACrE0T,wBAAyB1T,KAAK0T,wBAAwBtrB,KAAK4X,MAC3DsY,yBAA0BtY,KAAKsY,yBAAyBlwB,KAAK4X,MAC7DuY,sBAAuBvY,KAAKuY,sBAAsBnwB,KAAK4X,MACvDwY,sBAAuBxY,KAAKsZ,gBAAgBlxB,KAAK4X,MACjD+X,OAAQA,IAEjBnV,EAAAte,EAAA1B,cAACmiB,GAAD,MACAnC,EAAAte,EAAA1B,cAAC22B,GAAAj1B,EAAD,CACEk1B,OAAQxZ,KAAKiF,MAAMkU,UACnBM,eAAgB,WAAO,OAAO92B,SAAS+2B,cAAc,uBAErD9W,EAAAte,EAAA1B,cAAA,4DAGAggB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WAAf,2FAGAF,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,MAAM4D,QAASjD,KAAKwY,sBAAsBpwB,KAAK4X,QACjE4C,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,KAAK4D,QAASjD,KAAK2Z,iBAAiBvxB,KAAK4X,kEAOvC,IAAA6W,EAAAuC,GAAA,GACOpZ,KAAK0C,MAAMyJ,iBAAxCnF,EADsB6P,EACtB7P,WAAYF,EADU+P,EACV/P,UACdE,GAIL6N,GAAQiC,YAAY,CAClBrX,UAAWuH,EAAWvH,UACtB2H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,gEAIsB,IAAA8S,EAAAR,GAAA,GACOpZ,KAAK0C,MAAMyJ,iBAAnCtG,EADiB+T,EACjB/T,KAAMmB,EADW4S,EACX5S,WAERnB,GAASmB,GAIdhH,KAAK0C,MAAMmX,gCAAgC7S,EAAWE,iEAG7B,IAAA4S,EAAAV,GAAA,GACMpZ,KAAK0C,MAAMyJ,iBAAnCtG,EADkBiU,EAClBjU,KAAMmB,EADY8S,EACZ9S,WAERnB,GAASmB,GAIdhH,KAAK0C,MAAMqX,gCAAgC/S,EAAWE,8DAGhC,IAAA8S,EAAAZ,GAAA,GACSpZ,KAAK0C,MAAMyJ,iBAAnCtG,EADemU,EACfnU,KAAMmB,EADSgT,EACThT,WAERnB,GAASmB,GAIdhH,KAAK0C,MAAMuX,6BAA6BjT,EAAWE,8DAG7B,IAAAgT,EAAAd,GAAA,GACSpZ,KAAK0C,MAAMyJ,iBAAnCtG,EADeqU,EACfrU,KAAMmB,EADSkT,EACTlT,WAERnB,GAASmB,IAIdhH,KAAK2Z,mBACL3Z,KAAK0C,MAAMyX,6BAA6BnT,EAAWE,yDAInDlH,KAAKoa,SAAS,CAACjB,WAAW,+CAI1BnZ,KAAKoa,SAAS,CAACjB,WAAW,2CAIfnU,eAlLS,SAACC,GACvB,MAAO,CACLkH,gBAAiBlH,EAAMiH,mBAAmBC,kBAInB,SAAC3K,EAAoBkB,GAC9C,MAAO,CACLsP,6BADK,SACwBxL,GAC3BhF,EAAS4J,GAAiC5E,KAE5CqT,gCAJK,SAI2B3S,GAC9B1F,EfqMC,SAAwC0F,GAC7C,OAAAmT,EAAA/O,GAAAjK,mBAAAC,KAAO,SAAAgZ,EAAO9Y,EAAUsK,GAAjB,IAAAxQ,EAAAif,EAAA1f,EAAA,OAAAwG,mBAAAK,KAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAA3Y,MAAA,cAAA2Y,EAAA5Y,KAAA,EAAA4Y,EAAA3Y,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGvI,EAFHkf,EAAAzY,KAAAyY,EAAA3Y,KAAA,EAGkB0E,GAAyBkU,+BAA+B,CAACvT,eAAc5L,cAHzF,OAAAif,EAAAC,EAAAzY,KAGIlH,EAHJ0f,EAGI1f,KACP2G,EAAS4J,GAAiCvQ,IAJvC2f,EAAA3Y,KAAA,iBAAA2Y,EAAA5Y,KAAA,GAAA4Y,EAAAvY,GAAAuY,EAAA,SAOHtZ,MAAKsZ,EAAAvY,IAPF,yBAAAuY,EAAArY,SAAAmY,EAAAta,KAAA,aAAP,SAAA0a,EAAAC,GAAA,OAAAN,EAAAj9B,MAAA4iB,KAAA/E,YAAA,IAAAof,EetMaI,CAA+BvT,KAE1C6S,gCAPK,SAO2B7S,GAC9B1F,Ef+MC,SAAwC0F,GAC7C,OAAA0T,EAAAtP,GAAAjK,mBAAAC,KAAO,SAAAuZ,EAAOrZ,EAAUsK,GAAjB,IAAAxQ,EAAAwf,EAAAjgB,EAAA,OAAAwG,mBAAAK,KAAA,SAAAqZ,GAAA,cAAAA,EAAAnZ,KAAAmZ,EAAAlZ,MAAA,cAAAkZ,EAAAnZ,KAAA,EAAAmZ,EAAAlZ,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGvI,EAFHyf,EAAAhZ,KAAAgZ,EAAAlZ,KAAA,EAGkB0E,GAAyByU,+BAA+B,CAAC9T,eAAc5L,cAHzF,OAAAwf,EAAAC,EAAAhZ,KAGIlH,EAHJigB,EAGIjgB,KACP2G,EAAS4J,GAAiCvQ,IAJvCkgB,EAAAlZ,KAAA,iBAAAkZ,EAAAnZ,KAAA,GAAAmZ,EAAA9Y,GAAA8Y,EAAA,SAOH7Z,MAAK6Z,EAAA9Y,IAPF,yBAAA8Y,EAAA5Y,SAAA0Y,EAAA7a,KAAA,aAAP,SAAAib,EAAAC,GAAA,OAAAN,EAAAx9B,MAAA4iB,KAAA/E,YAAA,IAAA2f,EehNaI,CAA+B9T,KAE1C+S,6BAVK,SAUwB/S,GAC3B1F,EfyNC,SAAqC0F,GAC1C,OAAAiU,EAAA7P,GAAAjK,mBAAAC,KAAO,SAAA8Z,EAAO5Z,EAAUsK,GAAjB,IAAAxQ,EAAA+f,EAAAxgB,EAAA,OAAAwG,mBAAAK,KAAA,SAAA4Z,GAAA,cAAAA,EAAA1Z,KAAA0Z,EAAAzZ,MAAA,cAAAyZ,EAAA1Z,KAAA,EAAA0Z,EAAAzZ,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGvI,EAFHggB,EAAAvZ,KAAAuZ,EAAAzZ,KAAA,EAGkB0E,GAAyBgV,4BAA4B,CAACrU,eAAc5L,cAHtF,OAAA+f,EAAAC,EAAAvZ,KAGIlH,EAHJwgB,EAGIxgB,KACP2G,EAAS4J,GAAiCvQ,IAJvCygB,EAAAzZ,KAAA,iBAAAyZ,EAAA1Z,KAAA,GAAA0Z,EAAArZ,GAAAqZ,EAAA,SAOHpa,MAAKoa,EAAArZ,IAPF,yBAAAqZ,EAAAnZ,SAAAiZ,EAAApb,KAAA,aAAP,SAAAwb,EAAAC,GAAA,OAAAN,EAAA/9B,MAAA4iB,KAAA/E,YAAA,IAAAkgB,Ee1NaI,CAA4BrU,KAEvCiT,6BAbK,SAawBjT,GAC3B1F,EfmOC,SAAqC0F,GAC1C,OAAAwU,EAAApQ,GAAAjK,mBAAAC,KAAO,SAAAqa,EAAOna,EAAUsK,GAAjB,IAAAxQ,EAAAsgB,EAAA/gB,EAAA,OAAAwG,mBAAAK,KAAA,SAAAma,GAAA,cAAAA,EAAAja,KAAAia,EAAAha,MAAA,cAAAga,EAAAja,KAAA,EAAAia,EAAAha,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGvI,EAFHugB,EAAA9Z,KAAA8Z,EAAAha,KAAA,EAGkB0E,GAAyBuV,4BAA4B,CAAC5U,eAAc5L,cAHtF,OAAAsgB,EAAAC,EAAA9Z,KAGIlH,EAHJ+gB,EAGI/gB,KACPD,EAAQqT,+BAA+BpT,GAJpCghB,EAAAha,KAAA,iBAAAga,EAAAja,KAAA,GAAAia,EAAA5Z,GAAA4Z,EAAA,SAOH3a,MAAK2a,EAAA5Z,IAPF,yBAAA4Z,EAAA1Z,SAAAwZ,EAAA3b,KAAA,aAAP,SAAA+b,EAAAC,GAAA,OAAAN,EAAAt+B,MAAA4iB,KAAA/E,YAAA,IAAAygB,EepOaI,CAA4B5U,OA6J5BlC,CAGb+T,ulCCxLK,SAASkD,GAAmB9R,GAAyD,IAAA+R,EAAAC,GAAA,GAC1DhS,GAAzBtP,EADmFqhB,EACnFrhB,KAAM2P,EAD6E0R,EAC7E1R,YAEb,sBAAApJ,EAAAgb,GAAA/a,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAQ,EAAAjD,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBqI,GAAgBmS,oBAAoB,CACxDxhB,OACA2P,gBAJC,cAEGxI,EAFHL,EAAAI,KAMGhD,EAAmC,CACvC/a,KAAM4U,EAAWW,KAAKC,qBACtBwI,WARCL,EAAAE,KAAA,EAUGL,EAASzC,GAVZ,OAAA4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAaHX,EAAUkB,aAAVP,EAAAM,IAbG,yBAAAN,EAAAQ,SAAAZ,EAAAvB,KAAA,YAAP,gBAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,GAqDK,SAASqhB,GACdnS,GAIgB,IAAAoS,EAAAJ,GAAA,GAC2ChS,GAApDlB,EADSsT,EACTtT,iBAAkBuB,EADT+R,EACS/R,YAAagS,EADtBD,EACsBC,cAEtC,sBAAAnR,EAAA+Q,GAAA/a,mBAAAC,KAAO,SAAAiK,EAAO/J,EAAUsK,GAAjB,IAAA2Q,EAAAC,EAAA1Q,EAAA9C,EAAAI,EAAAC,EAAAC,EAAAlsB,EAAAq/B,EAAAC,EAAA,OAAAvb,mBAAAK,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,WAEC4a,EAAoB,WACxB,OAAO3Q,IAAW+Q,oBAAoB7T,mBAHnC,CAAAwC,EAAA3J,KAAA,eAAA2J,EAAAY,OAAA,wBAWCsQ,EAA+C,CACnD14B,KAAM4U,EAAWW,KAAKE,4BACtBuI,QAASiH,GAbNuC,EAAA3J,KAAA,EAeCL,EAASkb,GAfV,UAkBAF,EAlBA,CAAAhR,EAAA3J,KAAA,gBAAA2J,EAAA5J,KAAA,EAAA4J,EAAAvJ,GAoBKiI,GApBLsB,EAAAsR,GAqBOL,IAAoB5hB,KArB3B2Q,EAAAuR,GAsBiB,CAAC9T,EAAiBjoB,IAtBnCwqB,EAAAwR,GAuBiB,CAACzU,GAAmBuE,gCAAgC7D,IAvBrEuC,EAAA3J,KAAA,GAwBkB0B,GAAiBM,eAxBnC,eAAA2H,EAAAyR,GAAAzR,EAAAzJ,KAAAyJ,EAAA0R,GAyBc1S,EAzBdgB,EAAA2R,GAAA,CAqBCtiB,KArBD2Q,EAAAsR,GAsBC3U,eAtBDqD,EAAAuR,GAuBC3U,eAvBDoD,EAAAwR,GAwBC1hB,UAxBDkQ,EAAAyR,GAyBCzS,YAzBDgB,EAAA0R,IAAA1R,EAAA3J,KAAA,GAAA2J,EAAAvJ,GAoBqBmb,8BApBrBrgC,KAAAyuB,EAAAvJ,GAAAuJ,EAAA2R,IAAA,QAAA3R,EAAA3J,KAAA,iBAAA2J,EAAA5J,KAAA,GAAA4J,EAAA6R,GAAA7R,EAAA,SA4BDxK,EAAUkB,aAAVsJ,EAAA6R,IA5BC,WAAArR,EAwCDzD,GAAmB8D,oBAAoB,CACzCpD,mBACAxJ,UAAWgd,IAAoBhd,YAR/ByJ,EAlCG8C,EAkCH9C,aACAI,EAnCG0C,EAmCH1C,qBACAC,EApCGyC,EAoCHzC,YACAC,EArCGwC,EAqCHxC,SArCGwC,EAsCHvC,UACAnsB,EAvCG0uB,EAuCH1uB,SAOEgsB,EAAqB7sB,OAAS,GA9C7B,CAAA+uB,EAAA3J,KAAA,gBA+CG8a,EAA4E,CAChF34B,KAAM4U,EAAWW,KAAKG,kCACtBsI,QAASsH,GAjDRkC,EAAA3J,KAAA,GAmDGL,EAASmb,GAnDZ,aAuDDpT,EAAcL,GAvDb,CAAAsC,EAAA3J,KAAA,gBAwDG+a,EAAmD,CACvD54B,KAAM4U,EAAWW,KAAKI,8BACtBqI,QAAS,CAACkH,eAAcK,gBA1DvBiC,EAAA3J,KAAA,GA4DGL,EAASob,GA5DZ,WAgEAJ,EAhEA,CAAAhR,EAAA3J,KAAA,gBAAA2J,EAAA5J,KAAA,GAAA4J,EAAA3J,KAAA,GAkEKub,GACJX,IACAzgB,IAAEuO,KAAF,CAAQrB,GAAR9kB,OAAAk5B,GAAyBhU,GAAzB,CAA+CC,KAC/CiB,GArED,QAAAgB,EAAA3J,KAAA,iBAAA2J,EAAA5J,KAAA,GAAA4J,EAAA+R,GAAA/R,EAAA,UAwEDxK,EAAUkB,aAAVsJ,EAAA+R,IAxEC,YA6ED/T,EA7EC,CAAAgC,EAAA3J,KAAA,gBAAA2J,EAAA3J,KAAA,GA8EGL,EAASgc,GAAuB,CAAChB,gBAAehS,cAAaltB,YA9EhE,yBAAAkuB,EAAArJ,SAAAoJ,EAAAvL,KAAA,qBAAP,gBAAA0S,EAAAC,GAAA,OAAAtH,EAAAjuB,MAAA4iB,KAAA/E,YAAA,GA6GK,SAASuiB,KAIK,IAAAC,EAAAtB,GAAA,GAAAlhB,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAjB,IACKuP,EADYiT,EACZjT,YAAagS,EADDiB,EACCjB,cAAel/B,EADhBmgC,EACgBngC,OAEnC,sBAAAsuB,EAAAwQ,GAAA/a,mBAAAC,KAAO,SAAAuK,EAAOrK,EAAUsK,GAAjB,IAAA2Q,EAAAnhB,EAAAsX,EAAA/X,EAAA,OAAAwG,mBAAAK,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,UACC4a,EAAoB,WACxB,OAAO3Q,IAAW+Q,oBAAoB7T,gBAGnCwT,EALA,CAAAvQ,EAAApK,KAAA,gBAAAoK,EAAArK,KAAA,EAAAqK,EAAApK,KAAA,EAOuB0B,GAAiBM,eAPxC,UAOKvI,EAPL2Q,EAAAlK,KAUIyI,EAVJ,CAAAyB,EAAApK,KAAA,eAAAoK,EAAApK,KAAA,EAWOqI,GAAgBkN,0CAA0C,CAC9D3X,UAAWgd,IAAoBhd,UAC/B2K,0BAA2BqS,IAAoBrS,0BAC/C9O,cAdH,cAAA2Q,EAAApK,KAAA,GAkBoBqI,GAAgBsT,uBAAuB,CAC1D3iB,KAAM4hB,IAAoB5hB,KAC1Bvd,OAAQA,GAAU,GAClBktB,YAAaA,EACblP,cAtBD,eAAAsX,EAAA3G,EAAAlK,KAkBMlH,EAlBN+X,EAkBM/X,KAlBNoR,EAAApK,KAAA,GAyBKL,EAASya,GAAmB,CAACphB,OAAM2P,iBAzBxC,QAAAyB,EAAApK,KAAA,iBAAAoK,EAAArK,KAAA,GAAAqK,EAAAhK,GAAAgK,EAAA,SA2BDjL,EAAUkB,aAAV+J,EAAAhK,IA3BC,QAAAgK,EAAApK,KAAA,wBAAAoK,EAAApK,KAAA,GA8BGL,EAAS,CACbxd,KAAM4U,EAAWW,KAAKK,yBACtBoI,QAAS,KAhCR,yBAAAiK,EAAA9J,SAAA0J,EAAA7L,KAAA,aAAP,gBAAA+S,EAAAC,GAAA,OAAApH,EAAAxuB,MAAA4iB,KAAA/E,YAAA,GAsCK,SAASyiB,GACdvT,GAIgB,IAAAwT,EAAAxB,GAAA,GACyChS,GAAlDkI,EADSsL,EACTtL,eAAgB7H,EADPmT,EACOnT,YAAagS,EADpBmB,EACoBnB,cAEpC,sBAAAzF,EAAAqF,GAAA/a,mBAAAC,KAAO,SAAAuR,EAAOrR,EAAUsK,GAAjB,IAAA9C,EAAAvJ,EAAAyJ,EAAAK,EAAAqT,EAAA,OAAAvb,mBAAAK,KAAA,SAAAoR,GAAA,cAAAA,EAAAlR,KAAAkR,EAAAjR,MAAA,UACCmH,EAAiC8C,IAAW+Q,oBAAoB7T,eADjE,CAAA8J,EAAAjR,KAAA,eAAAiR,EAAA1G,OAAA,oBAOC3M,EAAYuJ,EAAevJ,aAC3ByJ,EAAezJ,EAAU0J,UAAU,SAAC/J,GAAD,OAAcA,EAAS3B,aAC7C,GATd,CAAAqV,EAAAjR,KAAA,cAUG,IAAI5gB,MAAM,uCAVb,UAcAoxB,EAAe7U,cAAiB6U,EAAe9U,UAd/C,CAAAuV,EAAAjR,KAAA,eAAAiR,EAAA1G,OAAA,uBAkBC7C,EAAc9J,EAAU0J,UAAU,SAAC/J,GAAD,OAAcA,EAASpe,KAAOqxB,EAAerxB,MACnE,GAnBb,CAAA8xB,EAAAjR,KAAA,gBAAAiR,EAAA1G,OAAA,yBAwBCwQ,EAAmD,CACvD54B,KAAM4U,EAAWW,KAAKI,8BACtBqI,QAAS,CAACkH,eAAcK,gBA1BrBuJ,EAAAjR,KAAA,GA4BCL,EAASob,GA5BV,WA+BAJ,EA/BA,CAAA1J,EAAAjR,KAAA,gBAAAiR,EAAAjR,KAAA,GAgCGub,GACJpU,EACAhN,IAAEuO,KAAK,CAACrB,EAAcK,IACtBiB,GAnCC,yBAAAsI,EAAA3Q,SAAA0Q,EAAA7S,SAAP,gBAAAsX,EAAAC,GAAA,OAAAR,EAAA35B,MAAA4iB,KAAA/E,YAAA,GAyCK,SAAS2iB,KAIO,IAAAC,EAAA1B,GAAA,GAAAlhB,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAjB,IACGuP,EADcqT,EACdrT,YAAagS,EADCqB,EACDrB,cAEpB,sBAAAvF,EAAAmF,GAAA/a,mBAAAC,KAAO,SAAA0V,EAAOxV,EAAUsK,GAAjB,IAAA9C,EAAAqR,EAAAxf,EAAA,OAAAwG,mBAAAK,KAAA,SAAAwV,GAAA,cAAAA,EAAAtV,KAAAsV,EAAArV,MAAA,UACCmH,EAAiC8C,IAAW+Q,oBAAoB7T,eADjE,CAAAkO,EAAArV,KAAA,eAAAqV,EAAA9K,OAAA,oBAMAoQ,EANA,CAAAtF,EAAArV,KAAA,gBAAAqV,EAAAtV,KAAA,EAAAsV,EAAAjV,GAQoBiI,GARpBgN,EAAA4F,GASO9T,EAAenO,KATtBqc,EAAArV,KAAA,EAUkB0B,GAAiBM,eAVnC,cAAAqT,EAAA6F,GAAA7F,EAAAnV,KAAAmV,EAAA8F,GAWcxS,EAXd0M,EAAA+F,GAAA,CASCpiB,KATDqc,EAAA4F,GAUCxhB,UAVD4b,EAAA6F,GAWCvS,YAXD0M,EAAA8F,IAAA9F,EAAArV,KAAA,GAAAqV,EAAAjV,GAQoC6b,mBARpC/gC,KAAAm6B,EAAAjV,GAAAiV,EAAA+F,IAAA,eAAA5C,EAAAnD,EAAAnV,KAQMlH,EARNwf,EAQMxf,KARNqc,EAAArV,KAAA,GAaKL,EAASya,GAAmB,CAACphB,OAAM2P,iBAbxC,QAAA0M,EAAArV,KAAA,iBAAAqV,EAAAtV,KAAA,GAAAsV,EAAAgG,GAAAhG,EAAA,SAeDlW,EAAUkB,aAAVgV,EAAAgG,IAfC,QAAAhG,EAAArV,KAAA,iBAkBHL,EAAS,CACPxd,KAAM4U,EAAWW,KAAKM,uBAnBrB,yBAAAqd,EAAA/U,SAAA6U,EAAAhX,KAAA,aAAP,gBAAA0a,EAAAC,GAAA,OAAA1D,EAAA75B,MAAA4iB,KAAA/E,YAAA,YAyBamiB,6FAAf,SAAA9C,EAA6CtR,EAAgC4D,EAAgCpC,GAA7G,OAAAnJ,mBAAAK,KAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAA3Y,MAAA,cAAA2Y,EAAA5Y,KAAA,EAAA4Y,EAAAvY,GAEUiI,GAFVsQ,EAAAsC,GAGY9T,EAAenO,KAH3B2f,EAAAuC,GAIsBnQ,EAAgBjpB,IAAI,SAACygB,GAAD,OAAW4E,EAAevJ,UAAU2E,GAAOpjB,KAJrFw5B,EAAAwC,GAKsBpQ,EAAgBjpB,IAAI,SAACygB,GAAD,OAAWmE,GAAmBuE,gCAAgC9D,EAAevJ,UAAU2E,MALjIoW,EAAA3Y,KAAA,EAMuB0B,GAAiBM,eANxC,cAAA2W,EAAAyC,GAAAzC,EAAAzY,KAAAyY,EAAA0C,GAOmB1S,EAPnBgQ,EAAA2C,GAAA,CAGMtiB,KAHN2f,EAAAsC,GAIM3U,eAJNqS,EAAAuC,GAKM3U,eALNoS,EAAAwC,GAMM1hB,UANNkf,EAAAyC,GAOMzS,YAPNgQ,EAAA0C,IAAA1C,EAAA3Y,KAAA,GAAA2Y,EAAAvY,GAE0Bmb,8BAF1BrgC,KAAAy9B,EAAAvY,GAAAuY,EAAA2C,IAAA,QAAA3C,EAAA3Y,KAAA,iBAAA2Y,EAAA5Y,KAAA,GAAA4Y,EAAA6C,GAAA7C,EAAA,SAUIxZ,EAAUkB,aAAasY,EAAA6C,GAAMpe,SAVjC,yBAAAub,EAAArY,SAAAmY,EAAAta,KAAA,i9BC3Oe+d,oaA7Dczb,uDAElB,IAAA6C,qUAAA6Y,CAAA,GASChe,KAAK0C,OAPXsG,EAFK7D,EAEL6D,eACAuI,EAHKpM,EAGLoM,qBACA0B,EAJK9N,EAIL8N,uBACAgL,EALK9Y,EAKL8Y,YACAC,EANK/Y,EAML+Y,eACAC,EAPKhZ,EAOLgZ,eACAC,EARKjZ,EAQLiZ,iBAGEC,EACFzb,EAAAte,EAAA1B,cAACixB,GAAD,CAAgBpU,UAAWuJ,EAAevJ,YAGxC2e,IACFC,EACEzb,EAAAte,EAAA1B,cAACwvB,GAAD,CACE3S,UAAWuJ,EAAevJ,UAC1B8R,qBAAsBA,EACtBI,mBAAoBsB,KAK1B,IAAMqL,EAAaJ,EACjBtb,EAAAte,EAAA1B,cAACwsB,GAAD,CACE/P,MAAO,gCACP4D,QAAS,WACPrI,EAAQyc,+BAA+BrO,EAAe4B,gCAGxD,KAEE2T,EAAaJ,EACjBvb,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAO,eAAgB4D,QAASgb,EAAa5Y,UAAWyO,OACnE,KAEEx2B,EAAS0rB,EAAe1rB,QAAoC,aAA1B0rB,EAAe5oB,OACrDwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAAA,qBACAggB,EAAAte,EAAA1B,cAAA,WAAMomB,EAAe1rB,SAErB,KAEJ,OACEslB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBACZxlB,EACA+gC,EAEDzb,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZyb,EACAD,gVCrEUE,idAcgBtjB,EAAqB3Z,QAAQ,CAAC6Z,kIAAzDqP,SAEAgU,EAA0BziB,IAAE/U,IAAIwjB,EAAoB,2BAA4B,4BAE9E,IAAIxpB,MAAM,iCAGZ4kB,EAAOM,GAAWS,kBAAkB6X,IAChCz9B,0BACF,IAAIC,MAAM,uDAGX4kB,sbCzBJ,SAAS6Y,KACd,wBAAAtd,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAqE,EAAA9G,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgB2c,GAAgBG,mBAHhC,OAGG9Y,EAHHlE,EAAAI,KAIGhD,EAA+B,CACnC/a,KAAM4U,EAAW4B,KAAKC,iBACtBuH,QAAS6D,GAEXrE,EAASzC,GARN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAYHX,EAAUkB,aAAVP,EAAAM,IAZG,yBAAAN,EAAAQ,SAAAZ,EAAAvB,KAAA,0LAAP,gBAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,wSCAmB2jB,iZASgB1jB,EAAqB3Z,QAAQ,CAAC6Z,yEAAzDqP,SAEA3D,EAAY9K,IAAEc,SAASd,IAAE/U,IAAIwjB,EAAoB,8BAA+B,uBAC/E,CAAC3D,gcCbL,SAAS+X,KACd,wBAAAzd,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAsd,EAAA/f,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGsB+c,GAAsBG,kBAH5C,OAGGD,EAHHnd,EAAAI,KAIGhD,EAA6B,CACjC/a,KAAM4U,EAAW8B,YAAYC,eAC7BqH,QAAS8c,EAAWhY,WAEtBtF,EAASzC,GARN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAYHX,EAAUkB,aAAVP,EAAAM,IAZG,yBAAAN,EAAAQ,SAAAZ,EAAAvB,KAAA,0LAAP,gBAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,kvCCYF,IAsCM+jB,oaAAgC1c,kEAEhB,IAAA6C,EAAA8Z,GAAA,GACyBjf,KAAK0C,OAAzC7H,EADWsK,EACXtK,MACPqkB,EAFkB/Z,EACL+Z,wBACUrkB,oCAGhB,IAAA0S,EAAA0R,GAAA,GAQCjf,KAAK0C,OANXoE,EAFKyG,EAELzG,UACAqY,EAHK5R,EAGL4R,YACAnW,EAJKuE,EAILvE,eACAiJ,EALK1E,EAKL0E,mCACAC,EANK3E,EAML2E,qCACAkN,EAPK7R,EAOL6R,0BAGF,IAAKD,IAAgBnW,EACnB,OAAO,KAIT,IAAMqW,EAAyB5gB,SAAS0gB,EAAYn+B,MAAQyd,SAASuK,EAAe5B,UAAUpmB,IACxFo9B,EAA8C,gBAA1BpV,EAAe5oB,SAA8B++B,EAAY9Y,MAAQgZ,GACrFlB,EACuB,aAA1BnV,EAAe5oB,SACf++B,EAAY9Y,MAASgZ,IAA2BrW,EAAe2B,kBAElE,OACE/H,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,2BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAO2J,EAAenB,SAAUhI,SAAUiH,IAClDlE,EAAAte,EAAA1B,cAAC08B,GAAD,CACEtW,eAAgBA,EAChBuI,qBAAsBU,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACbjB,eAAgBA,EAChBC,iBAAkBA,EAClBF,iBAAkBlV,EAAe4B,8BAEnChI,EAAAte,EAAA1B,cAACmiB,GAAD,8CAMOC,eApFS,SAACC,GACvB,MAAO,CACL+D,eAAgB/D,EAAM4X,oBAAoB7T,eAC1ClC,UAAW7B,EAAMsa,gBAAgBzY,UACjCqY,YAAala,EAAMua,iBAAiB3Z,OAIb,SAACrE,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,SACkBrkB,GACrB2G,EAASkd,MACTld,EAASqd,MACTrd,EAASya,GAAmB,CAACphB,WAE/BoX,mCANK,SAM8BhJ,GACjCzH,EAAS8a,GAAqC,CAACrT,uBAEjDiJ,qCATK,SASgCG,GACnC7Q,EAASkc,GAAuC,CAACrL,qBAEnD+M,0BAZK,WAaH5d,EAASoc,SA8DA5Y,CAGbga,mvCCvFF,IA4CMS,oaAAgCnd,mEAIlC4c,EAFkBQ,GAAA,GACmB1f,KAAK0C,OAAnCwc,2DAIA,IAAA3R,EAAAmS,GAAA,GAQC1f,KAAK0C,OANXoE,EAFKyG,EAELzG,UACAqY,EAHK5R,EAGL4R,YACAnW,EAJKuE,EAILvE,eACAiJ,EALK1E,EAKL0E,mCACAC,EANK3E,EAML2E,qCACAkN,EAPK7R,EAOL6R,0BAGF,IAAKD,IAAgBnW,EACnB,OAAO,KAGT,IAAMoV,EAA8C,gBAA1BpV,EAAe5oB,OACnC+9B,EAA4C,aAA1BnV,EAAe5oB,OAEvC,OACEwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,2BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAO2J,EAAenB,SAAUhI,SAAUiH,IAClDlE,EAAAte,EAAA1B,cAAC08B,GAAD,CACEtW,eAAgBA,EAChBuI,qBAAsBU,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACbjB,eAAgBA,EAChBC,iBAAkBA,EAClBF,gBAAgB,IAElBtb,EAAAte,EAAA1B,cAACmiB,GAAD,8CAMOC,eAtFS,SAACC,GACvB,MAAO,CACL+D,eAAgB/D,EAAM4X,oBAAoB7T,eAC1ClC,UAAW7B,EAAMsa,gBAAgBzY,UACjCqY,YAAala,EAAMua,iBAAiB3Z,OAIb,SAACrE,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,WACoB,IAChBjU,EADgByU,GAAA,GACFhd,GAAduI,OACPzJ,EAASkd,MACTld,EAASqd,MACTrd,EPKC,SAAsC2I,GAAqC,IAGhF0D,EAFO5C,EADyEkR,GAAA,GAC3DhS,GAAdc,OAEP,OAAA4C,EAAAuO,GAAA/a,mBAAAC,KAAO,SAAAwM,EAAOtM,EAAUsK,GAAjB,IAAAhL,EAAAkB,EAAAjD,EAAA,OAAAsC,mBAAAK,KAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,cAAAkM,EAAAnM,KAAA,EAAAmM,EAAAlM,KAAA,EAEgBqI,GAAgByV,oBAAoB,CAAC1U,WAFrD,cAEGnK,EAFHiN,EAAAhM,KAIGC,EAA0B,CAC9BhhB,GAAI,GACJ6Z,KAAM,GACNgN,SAAU/G,EAAKha,KACfghB,SAAU,gBACV1nB,OAAQ,cACR9C,OAAQ,GACRmiB,UAAWqB,EAAKrB,UAChBoL,mBAAoB,GACpBE,YAAa,GACbH,4BAA6B,GAC7BR,0BAA2B,GAC3BhD,UAAW0E,IAAW0T,iBACtB7U,kBAAkB,GAGd5L,EAAmC,CACvC/a,KAAM4U,EAAWW,KAAKC,qBACtBwI,WAtBC+L,EAAAlM,KAAA,EAwBGL,EAASzC,GAxBZ,OAAAgP,EAAAlM,KAAA,iBAAAkM,EAAAnM,KAAA,GAAAmM,EAAA9L,GAAA8L,EAAA,SA2BH/M,EAAUkB,aAAV6L,EAAA9L,IA3BG,yBAAA8L,EAAA5L,SAAA2L,EAAA9N,KAAA,aAAP,SAAAkO,EAAAxC,GAAA,OAAAmC,EAAAzwB,MAAA4iB,KAAA/E,YORa2kB,CAA6B,CAAC3U,aAEzCgH,mCAPK,SAO8BhJ,GACjCzH,EAAS8a,GAAqC,CAACrT,mBAAkBuT,eAAe,MAElFtK,qCAVK,SAUgCG,GACnC7Q,EAASkc,GAAuC,CAACrL,iBAAgBmK,eAAe,MAElF4C,0BAbK,WAcH5d,EAASoc,GAA4B,CAACpB,eAAe,QA+D5CxX,CAGbya,i7BCrGmBjR,oaAAgBlM,uDAE1B,IAAA6C,qUAAA0a,CAAA,GACuB7f,KAAK0C,OAA5BrD,EADA8F,EACA9F,MAAOrZ,EADPmf,EACOnf,SAEd,OACE4c,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SAASzD,GACvBrZ,GACC4c,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,YACZ9c,8xCCPQmoB,oaAAoB7L,uDAE9B,IAAA6C,EAAA2a,GAAA,GACoC9f,KAAK0C,OAAzCrD,EADA8F,EACA9F,MAAOqB,EADPyE,EACOzE,SAAU2N,EADjBlJ,EACiBkJ,YAExB,OACEzL,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,eACZ9C,KAAKsO,aACN1L,EAAAte,EAAA1B,cAAA,UAAQkgB,UAAU,MACVpC,SAAUA,EACVuC,QAAS,SAACC,GACRA,EAAMC,iBACNkL,MAEPhP,yCASP,OAHWygB,GAAA,GACY9f,KAAK0C,OAArBqd,UAGL,IAAK,UACH,OAAOnd,EAAAte,EAAA1B,cAAA,OAAKE,IAAKk9B,KAAa5c,IAAI,KACpC,IAAK,UACH,OAAOR,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,gCACtB,IAAK,UACH,OAAOF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,gCACtB,IAAK,iBACH,OAAOF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,0CACtB,QACE,OAAO,09BClCMmd,oaAAsBC,IAAM5d,kDAEtC,IAAA6C,qUAAAgb,CAAA,GAC8CngB,KAAK0C,OAAnD1hB,EADAmkB,EACAnkB,GAAI8F,EADJqe,EACIre,KAAMyY,EADV4F,EACU5F,YAAa6gB,EADvBjb,EACuBib,gBAE9B,OACExd,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBAAgB3a,IAAKnH,GAClC4hB,EAAAte,EAAA1B,cAAA,UACEggB,EAAAte,EAAA1B,cAAA,UAAQqgB,QAAS,SAACC,GAChBA,EAAMC,iBACNid,MAEAxd,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,qCAEfF,EAAAte,EAAA1B,cAAA,YAAOkE,IAET8b,EAAAte,EAAA1B,cAAA,SAAI2c,sNCvBS8gB,iMACMr/B,EAAYs/B,GACnC,OAAOA,EAAW3hB,OAAO,SAAC4hB,GAAD,OAAeA,EAAUv/B,KAAOA,IAAIvE,OAAS,oyCCqBrD+jC,eAEnB,SAAAA,EAAY9d,GAAU,IAAAH,EAAA,mGAAAke,CAAAzgB,KAAAwgB,IACpBje,EAAAme,GAAA1gB,KAAA2gB,GAAAH,GAAAzjC,KAAAijB,KAAM0C,KACDuC,MAAQ,CACXtG,OAAQ,GACRsL,QAAS,IAJS1H,yPAFwBD,uDAUrC,IAAAse,EAAA5gB,KAAAmF,EAAA0b,GAAA,GASC7gB,KAAK0C,OAPXoe,EAFK3b,EAEL2b,oBACAjW,EAHK1F,EAGL0F,mBACAkW,EAJK5b,EAIL4b,kBACAX,EALKjb,EAKLib,gBACAY,EANK7b,EAML6b,aACAC,EAPK9b,EAOL8b,oBACAC,EARK/b,EAQL+b,aARKC,EAAAN,GAAA,GAWuB7gB,KAAKiF,OAA5BtG,EAXAwiB,EAWAxiB,OAAQsL,EAXRkX,EAWQlX,QAEf,OACErH,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,sBAEbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBACbF,EAAAte,EAAA1B,cAACw+B,GAAD,CAAS/hB,MAAO,uBAAuBuY,eACrChV,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAAA,KAAGkgB,UAAU,kBACbF,EAAAte,EAAA1B,cAAA,SAAOoB,KAAK,OAAO0a,YAAY,sBAAsBqS,SAAU,SAAC7N,GAC9D,IAAM/b,EAAQ2V,IAASoG,EAAMsR,OAAOrtB,OAAOwhB,OAC3CiY,EAAKxG,SAAS,CAACzb,OAAQxX,QAI3Byb,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,SACZge,EACEniB,OAAO,SAAC4hB,GACP,OAAK5hB,GAGE4hB,EAAUz5B,KAAKoX,SAASS,KAEhChb,IAAI,SAAC48B,GACJ,IAAMc,EAAahB,GAAuBiB,kBAAkBf,EAAUv/B,GAAI6pB,GAE1E,OACEjI,EAAAte,EAAA1B,cAAC2+B,GAAD,CACEliB,MAAOkhB,EAAUz5B,KACjBi5B,SAAUsB,EAAa,UAAY,UACnC3gB,UAAU,EACVvY,IAAKo4B,EAAUv/B,GACfqtB,YAAa,WAEPgT,EACFjB,EAAgBG,EAAUv/B,IAE1BggC,EAAaT,EAAUv/B,WAQvC4hB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,gBACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WAAf,uBAIAF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,uBACZ+H,EAAmBlnB,IAAI,SAAC48B,GACvB,OACE3d,EAAAte,EAAA1B,cAAC4+B,GAAD,CACEr5B,IAAKo4B,EAAUv/B,GACfA,GAAIu/B,EAAUv/B,GACd8F,KAAMy5B,EAAUz5B,KAChByY,YAAaghB,EAAUhhB,YACvB6gB,gBAAiB,WACfA,EAAgBG,EAAUv/B,UAOpC4hB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZ+H,EAAmBpuB,OAAS,GAC3BmmB,EAAAte,EAAA1B,cAACggB,EAAAte,EAAMm9B,SAAP,KACE7e,EAAAte,EAAA1B,cAAA,SAAOoB,KAAK,OAAO0a,YAAY,mBAAmBqS,SAAU,SAAC7N,GAC3D,IAAM/b,EAAQ2V,IAASoG,EAAMsR,OAAOrtB,OAAOwhB,OAC3CiY,EAAKxG,SAAS,CAACnQ,QAAS9iB,OAE1Byb,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,sBAAsBmD,QAAS,CAAC,QAASS,QAAS,WAClE8d,EAAkB9W,OAIxBrH,EAAAte,EAAA1B,cAACsjB,GAAD,CAAa7G,MAAM,2BAA2BmD,QAAS,CAAC,QAASS,QAAS,WACxEge,UAMRre,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,iBACZoe,w+BC7HUQ,ybAWgBxmB,EAAqB3Z,QAAQ,CAAC6Z,qGAAzDqP,SACAV,EAAY9iB,IAAIwjB,EAAoB,+BACrChO,MAAMC,QAAQqN,4CACV,kBAGH4X,EAAa5X,EAAUpmB,IAAI,SAACkZ,GAIhC,MAAO,CAAC7b,GAHG8b,IAAS7V,IAAI4V,EAAY,KAAM,KAG9B/V,KAFCgW,IAAS7V,IAAI4V,EAAY,OAAQ,KAE5B0C,YADEzC,IAAS7V,IAAI4V,EAAY,cAAe,0BAIvD8kB,6LAGsBxX,uHAKqBA,GAA3CF,YAAS2X,oBAAiBtmB,cAE3B+M,EAAYuZ,EAAgBj+B,IAAI,SAAC3C,GACrC,2BAAAoD,OACYpD,EADZ,qCAAAoD,OACkDpD,EADlD,iBAAAoD,OACoE6lB,EADpE,4CAQI7O,4BAENiN,EAAUpjB,KAAK,sBAGIiW,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA+lB,EAAc56B,IAAI6U,EAAM,OAAQ,4BAE9BG,gBAGF8O,EAAc+W,KAAQF,EAAgBj+B,IAAI,SAAC3C,GAC7C,IAAMmH,EAAG,mBAAA/D,OAAsBpD,GACzB8a,EAAO7U,IAAI46B,EAAa15B,EAAK,MACnC,OAAK2T,EAGsB,CACzB9a,GAAI8b,IAAS7V,IAAI6U,EAAM,KAAM,KAC7BmO,QAASnN,IAAS7V,IAAI6U,EAAM,UAAW,KACvCkH,KAAMlG,IAAS7V,IAAI6U,EAAM,aAAc,MALhC,0BAUNiP,6cCnDJ,SAASgX,KACd,sBAAA3gB,EAAA4gB,GAAA3gB,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAsf,EAAA/hB,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC6B6f,GAA6BK,0BAD1D,cACCjB,EADDnf,EAAAI,KAEChD,EAAwC,CAC5C/a,KAAM4U,EAAWkB,oBAAoBC,yBACrCiI,QAAS8e,GAJNnf,EAAAE,KAAA,EAOCL,EAASzC,GAPV,wBAAA4C,EAAAQ,SAAAZ,EAAAvB,SAAP,gBAAAoC,GAAA,OAAAhB,EAAAhkB,MAAA4iB,KAAA/E,YAAA,GAWK,SAASgnB,GAAqBjhC,GACnC,sBAAA6sB,EAAAmU,GAAA3gB,mBAAAC,KAAO,SAAAwM,EAAOtM,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,cACC9C,EAAqC,CACzC/a,KAAM4U,EAAWkB,oBAAoBE,uBACrCgI,QAAShhB,GAHN+sB,EAAAlM,KAAA,EAKCL,EAASzC,GALV,wBAAAgP,EAAA5L,SAAA2L,EAAA9N,SAAP,gBAAAkO,GAAA,OAAAL,EAAAzwB,MAAA4iB,KAAA/E,YAAA,GASK,SAASinB,GAAwBlhC,GACtC,sBAAAqqB,EAAA2W,GAAA3gB,mBAAAC,KAAO,SAAAiK,EAAO/J,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cACC9C,EAAwC,CAC5C/a,KAAM4U,EAAWkB,oBAAoBG,0BACrC+H,QAAShhB,GAHNwqB,EAAA3J,KAAA,EAKCL,EAASzC,GALV,wBAAAyM,EAAArJ,SAAAoJ,EAAAvL,SAAP,gBAAA0L,GAAA,OAAAL,EAAAjuB,MAAA4iB,KAAA/E,YAAA,GAmCK,SAASknB,GAAYC,GAC1B,sBAAAxW,EAAAoW,GAAA3gB,mBAAAC,KAAO,SAAAuK,EAAOrK,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cACC9C,EAA4B,CAChC/a,KAAM4U,EAAWkB,oBAAoBK,cACrC6H,QAASogB,GAHNnW,EAAApK,KAAA,EAKCL,EAASzC,GALV,wBAAAkN,EAAA9J,SAAA0J,EAAA7L,SAAP,gBAAAyM,GAAA,OAAAb,EAAAxuB,MAAA4iB,KAAA/E,YAAA,GASK,SAASonB,GAAeC,GAC7B,sBAAA1P,EAAAoP,GAAA3gB,mBAAAC,KAAO,SAAAuR,EAAOrR,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAAoR,GAAA,cAAAA,EAAAlR,KAAAkR,EAAAjR,MAAA,cACC9C,EAA+B,CACnC/a,KAAM4U,EAAWkB,oBAAoBI,iBACrC8H,QAASsgB,GAHNxP,EAAAjR,KAAA,EAKCL,EAASzC,GALV,wBAAA+T,EAAA3Q,SAAA0Q,EAAA7S,SAAP,gBAAA0M,GAAA,OAAAkG,EAAAx1B,MAAA4iB,KAAA/E,YAAA,g7BCpFmBsnB,oaAAiCrC,IAAM5d,kDAEjD,IAAA6C,qUAAAqd,CAAA,GACiDxiB,KAAK0C,OAAtDmI,EADA1F,EACA0F,mBAAoBE,EADpB5F,EACoB4F,YAAa/kB,EADjCmf,EACiCnf,SAExC,OACE4c,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,4BACbF,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,iCACAggB,EAAAte,EAAA1B,cAAA,UACGioB,EAAmBlnB,IAAI,SAAC48B,GACvB,OACE3d,EAAAte,EAAA1B,cAAA,MAAIuF,IAAKo4B,EAAUv/B,IAAKu/B,EAAUz5B,UAK1C8b,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAA,kCACAggB,EAAAte,EAAA1B,cAAA,UACGmoB,EAAYpnB,IAAI,SAAC8+B,GAChB,OACE7f,EAAAte,EAAA1B,cAAA,MAAIuF,IAAKs6B,EAAOzhC,IAAI4hB,EAAAte,EAAA1B,cAAA,KAAGmY,KAAM0nB,EAAOzf,KAAMwR,OAAO,UAAUiO,EAAOzf,WAKzEhd,GACC4c,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,YACZ9c,0xCCjBb,IA2CM08B,oaAA8CpgB,mEAIhD4c,EAFkByD,GAAA,GACmB3iB,KAAK0C,OAAnCwc,2DAIA,IAAA3R,EAAAoV,GAAA,GAWC3iB,KAAK0C,OATXoE,EAFKyG,EAELzG,UACAqY,EAHK5R,EAGL4R,YACA2B,EAJKvT,EAILuT,oBACAjW,EALK0C,EAKL1C,mBACA+X,EANKrV,EAMLqV,2BACAC,EAPKtV,EAOLsV,8BACAC,EARKvV,EAQLuV,gCACAV,EATK7U,EASL6U,SACArX,EAVKwC,EAULxC,YAGF,IAAKoU,EACH,OAAO,KAGT,IAAId,EAAO,KACX,OAAQ+D,GACN,IAAK,OACH/D,EACEzb,EAAAte,EAAA1B,cAACmgC,GAAD,CACEjC,oBAAqBA,EACrBjW,mBAAoBA,EACpBkW,kBAAmB,SAAC9W,GAClB6Y,EAAgC7Y,IAElCmW,gBAAiB,SAACp/B,GAChB6hC,EAA8B7hC,IAEhCggC,aAAc,SAAChgC,GACb4hC,EAA2B5hC,IAE7BigC,oBAAqB,WACnBrmB,EAAQooB,oBAId,MACF,IAAK,SACH3E,EACEzb,EAAAte,EAAA1B,cAACqgC,GAAD,CACEpY,mBAAoBA,EACpBE,YAAaA,GAEbnI,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACwsB,GAAD,CAAY/P,MAAM,eAAe4D,QAAS,WAAOrI,EAAQooB,sBAMnE,OACEpgB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,+BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAM,sBAAsBQ,SAAUiH,IAC7CuX,EACDzb,EAAAte,EAAA1B,cAACmiB,GAAD,8CAMOC,eAhHS,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAMsa,gBAAgBzY,UACjCqY,YAAala,EAAMua,iBAAiB3Z,KACpCib,oBAAqB7b,EAAMie,wBAAwBpC,oBACnDjW,mBAAoB5F,EAAMie,wBAAwBrY,mBAClDuX,SAAUnd,EAAMie,wBAAwBd,SACxCrX,YAAa9F,EAAMie,wBAAwBnY,cAIpB,SAACvJ,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,WAEH1d,EAASkd,MACTld,EAASqd,MACTrd,EAASugB,OAEXa,2BANK,SAMsB5hC,GACzBwgB,EAASygB,GAAqBjhC,KAEhC6hC,8BATK,SASyB7hC,GAC5BwgB,EAAS0gB,GAAwBlhC,KAEnC8hC,gCAZK,SAY2B7Y,GAC9BzI,EFUC,SAA2ByI,GAChC,OAAAqI,EAAA0P,GAAA3gB,mBAAAC,KAAO,SAAAiR,EAAO/Q,EAAUsK,GAAjB,IAAAC,EAAAlB,EAAAvP,EAAAyP,EAAA,OAAA1J,mBAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,UAAA2Q,EAAA5Q,KAAA,EAEEqI,EAFF,CAAAuI,EAAA3Q,KAAA,cAGK,IAAI5gB,MAAM,iCAHf,UAMG8qB,EAAuBD,IACvBjB,EAAqBkB,EAAUmX,wBAAwBrY,mBAP1D,CAAA2H,EAAA3Q,KAAA,cASK,IAAI5gB,MAAM,8BATf,cAAAuxB,EAAA3Q,KAAA,EAWqB0B,GAAiBM,eAXtC,cAWGvI,EAXHkX,EAAAzQ,KAAAyQ,EAAA3Q,KAAA,GAYuB6f,GAA6ByB,kBAAkB,CACvElZ,UACA2X,gBAAiBrX,KAAKM,EAAmBlnB,IAAI,SAAC48B,GAAD,OAAeA,EAAUv/B,MACtEsa,cAfC,eAYGyP,EAZHyH,EAAAzQ,KAAAyQ,EAAA3Q,KAAA,GAiBGL,EAAS6gB,GAAetX,IAjB3B,eAAAyH,EAAA3Q,KAAA,GAkBGL,EAAS2gB,GAAY,WAlBxB,QAAA3P,EAAA3Q,KAAA,iBAAA2Q,EAAA5Q,KAAA,GAAA4Q,EAAAvQ,GAAAuQ,EAAA,SAoBHxR,EAAUkB,aAAVsQ,EAAAvQ,IApBG,yBAAAuQ,EAAArQ,SAAAoQ,EAAAvS,KAAA,aAAP,SAAA0S,EAAAC,GAAA,OAAAL,EAAAl1B,MAAA4iB,KAAA/E,YAAA,IAAAqX,EEXayO,CAAkB9W,OAuFlBjF,CAGb0d,mvCCjHF,IAmDMU,oaAAoC9gB,mEAItC4c,EAFkBmE,GAAA,GACmBrjB,KAAK0C,OAAnCwc,2DAIA,IAAA3R,EAAA8V,GAAA,GAWCrjB,KAAK0C,OATXoE,EAFKyG,EAELzG,UACAqY,EAHK5R,EAGL4R,YACAnW,EAJKuE,EAILvE,eACA8X,EALKvT,EAKLuT,oBACAjW,EANK0C,EAML1C,mBACA+X,EAPKrV,EAOLqV,2BACAC,EARKtV,EAQLsV,8BACAC,EATKvV,EASLuV,gCACAQ,EAVK/V,EAUL+V,qBAGF,IAAKnE,IAAgBnW,EACnB,OAAO,KAGT,IAAIqV,EAAO,KACX,OAAQrV,EAAe5oB,QACrB,IAAK,cACHi+B,EACEzb,EAAAte,EAAA1B,cAACmgC,GAAD,CACEjC,oBAAqBA,EACrBjW,mBAAoBA,EACpBqW,aAAc,CACZte,EAAAte,EAAA1B,cAACwsB,GAAD,CACEjnB,IAAI,OACJkX,MAAO,gCACP4D,QAAS,WACPrI,EAAQyc,+BAA+BrO,EAAe4B,iCAI5DmW,kBAAmB,SAAC9W,GAClB6Y,EAAgC7Y,IAElCmW,gBAAiB,SAACp/B,GAChB6hC,EAA8B7hC,IAEhCggC,aAAc,SAAChgC,GACb4hC,EAA2B5hC,IAE7BigC,oBAAqB,WACnBqC,OAIN,MACF,IAAK,WACHjF,EACEzb,EAAAte,EAAA1B,cAACqgC,GAAD,CACEpY,mBAAoB7B,EAAe6B,mBACnCE,YAAa/B,EAAe+B,aAE5BnI,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACwsB,GAAD,CACE/P,MAAO,gCACP4D,QAAS,WACPrI,EAAQyc,+BAA+BrO,EAAe4B,kCAQpE,OACEhI,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,+BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAM,sBAAsBQ,SAAUiH,IAC7CuX,EACDzb,EAAAte,EAAA1B,cAACmiB,GAAD,8CAMOC,eAtIS,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAMsa,gBAAgBzY,UACjCqY,YAAala,EAAMua,iBAAiB3Z,KACpCmD,eAAgB/D,EAAM4X,oBAAoB7T,eAC1C8X,oBAAqB7b,EAAMie,wBAAwBpC,oBACnDjW,mBAAoB5F,EAAMie,wBAAwBrY,qBAI3B,SAACrJ,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,WACoB,IAChBrkB,EADgBwoB,GAAA,GACJ3gB,GAAZ7H,KACP2G,EAASkd,MACTld,EAASqd,MACTrd,EAASugB,MACTvgB,EAASya,GAAmB,CAACphB,WAE/B+nB,2BARK,SAQsB5hC,GACzBwgB,EAASygB,GAAqBjhC,KAEhC6hC,8BAXK,SAWyB7hC,GAC5BwgB,EAAS0gB,GAAwBlhC,KAEnC8hC,gCAdK,SAc2B7Y,GAC9BzI,EjBmHC,SAAgCyI,GACrC,OAAAqI,EAAA8J,GAAA/a,mBAAAC,KAAO,SAAAiR,EAAO/Q,EAAUsK,GAAjB,IAAAC,EAAA/C,EAAAmC,EAAA,OAAA9J,mBAAAK,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA3Q,MAAA,UACCkK,EAAuBD,IACvB9C,EAAiB+C,EAAU8Q,oBAAoB7T,eAFhD,CAAAwJ,EAAA3Q,KAAA,eAAA2Q,EAAApG,OAAA,wBAOCjB,EAAeY,EAAUmX,wBAAwBrY,mBAAmBlnB,IAAI,SAAC48B,GAC7E,OAAOA,EAAUv/B,KARdwxB,EAAA5Q,KAAA,EAAA4Q,EAAAvQ,GAYGiI,GAZHsI,EAAAsK,GAaD7S,EAbCuI,EAAAuK,GAcD5R,EAdCqH,EAAAwK,GAeKhU,EAAenO,KAfpB2X,EAAA3Q,KAAA,GAgBgB0B,GAAiBM,eAhBjC,eAAA2O,EAAAyK,GAAAzK,EAAAzQ,KAAAyQ,EAAA0K,GAAA,CAaDjT,QAbCuI,EAAAsK,GAcD3R,aAdCqH,EAAAuK,GAeDliB,KAfC2X,EAAAwK,GAgBD1hB,UAhBCkX,EAAAyK,IAAAzK,EAAA3Q,KAAA,GAAA2Q,EAAAvQ,GAYmBshB,2CAZnBxmC,KAAAy1B,EAAAvQ,GAAAuQ,EAAA0K,IAAA,eAAA1K,EAAA3Q,KAAA,GAkBGL,EAASgc,MAlBZ,QAAAhL,EAAA3Q,KAAA,iBAAA2Q,EAAA5Q,KAAA,GAAA4Q,EAAA2K,GAAA3K,EAAA,SAoBHxR,EAAUkB,aAAVsQ,EAAA2K,IApBG,yBAAA3K,EAAArQ,SAAAoQ,EAAAvS,KAAA,aAAP,SAAAyM,EAAAC,GAAA,OAAA4F,EAAAl1B,MAAA4iB,KAAA/E,YAAA,IAAAqX,EiBpHakR,CAAuBvZ,KAElCqZ,qBAjBK,WAkBH9hB,EAASgc,SAyGAxY,CAGboe,wzBC5DaK,oaAxFOnhB,uDAGlB,OACEM,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,YACEggB,EAAAte,EAAA1B,cAAC8gC,EAAA,EAAD,KACE9gB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KACf,WACC,OAAOjhB,EAAAte,EAAA1B,cAACkhC,GAAD,QAGXlhB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,4BACT,SAAAziB,GAAa,IAAX2iB,EAAW3iB,EAAX2iB,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACohC,GAAD,CAAgBrjB,gBAAiBojB,EAAME,OAAOjjC,QAKtD4hB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,mCACT,SAAAhW,GAAa,IAAXkW,EAAWlW,EAAXkW,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACshC,GAAD,CAAwB1d,eAAgBud,EAAME,OAAOE,UAK7DvhB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,+BACT,SAAAxY,GAAa,IAAX0Y,EAAW1Y,EAAX0Y,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACwhC,GAAD,CAAiB5d,eAAgBud,EAAME,OAAOE,UAKtDvhB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAAvR,GAAa,IAAXyR,EAAWzR,EAAXyR,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACyhC,GAAD,CAAkB7d,eAAgBud,EAAME,OAAOE,UAKvDvhB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAjY,GAAa,IAAXmY,EAAWnY,EAAXmY,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAC0hC,GAAD,CAAyBzpB,KAAMkpB,EAAME,OAAOppB,UAKpD+H,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,6BACT,SAAAjR,GAAa,IAAXmR,EAAWnR,EAAXmR,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAC2hC,GAAD,CAAyBtZ,OAAQ8Y,EAAME,OAAOhZ,YAKtDrI,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,mCACVjhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAC4hC,GAAD,QAGJ5hB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,yCACT,SAAA9M,GAAa,IAAXgN,EAAWhN,EAAXgN,MACD,OACEnhB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAAC6hC,GAAD,CAA6B5pB,KAAMkpB,EAAME,OAAOppB,s+BC1E/C6pB,wPAEcvpB,qHACCA,GAAzBN,SAAM2P,gBACPpP,4DAE6BP,8BAAwB2P,gfA+BxCtP,EAAqB3Z,QAAQ,CAAC6Z,oBAA3CU,SAEA2K,EAAazK,IAAE/U,IAAI6U,EAAM,2BAA4B,IACrD+K,EAAiB7K,IAAE/U,IAAI6U,EAAM,qCAAsC,IACpE2K,GAAeI,wBACZ5K,gBAGFhgB,EAAqC,CACzC6qB,UAAW9K,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,8BAA+B,KACjEkL,WAAY,CACVrG,gBAAiB3E,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,mBAAoB,KACtEI,mBAAoBjL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,qBAAsB,KAC3EK,aAAclL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,KAAM,KACrDM,eAAgBnL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,OAAQ,KACzDO,UAAW,CACTpmB,GAAIgb,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,YACrC/f,KAAMkV,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,gBAAiB,KACxDQ,KAAMrL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,gBAAiB,KACxDZ,MAAOjK,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,iBAAkB,KAC1DR,MAAM,EACNC,QAAQ,GAEVlmB,OAAQ4b,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,sBAAuB,KAAK5I,cAAcqJ,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiCxL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,qBAAsB,KACxFY,cAAezL,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,8BAA+B,KAC/Ea,kBAAmB1L,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,kCAAmC,MAEzFpH,UAAWtD,EAAeuD,uBAAuB,CAC/CpD,WAAYN,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,oBAAqB,KAClEtK,YAAaP,IAAEc,SAASd,IAAE/U,IAAI4f,EAAgB,aAAc,OAE9Dc,gBAAiB3L,IACd4L,QAAQ5L,IAAE/U,IAAI4f,EAAgB,kBAAmB,KACjDljB,IAAI,SAACa,GAOJ,MAN8C,CAC5CqW,KAAMmB,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,OAAQ,KACrCqjB,SAAU7L,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,WAAY,KAC7CsjB,SAAU9L,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ4b,IAAEc,SAASd,IAAE/U,IAAIzC,EAAM,SAAU,4BAO5CvI,4MAIPkf,qHAEmDA,GAA5C+L,iBAAc5L,cAAWkP,gBAC1BpP,oEAEkC8L,8BAAgCsD,2DAKrDtP,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SACfd,IAAE/U,IAAI6U,EAAM,+DAAgE,OACxEjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,gDAAiD,OAChF1b,GAAWya,wBACRoB,kCAED,CAACpB,+MAIRM,qHAEmDA,GAA5C+L,iBAAc5L,cAAWkP,gBAC1BpP,kEAEgC8L,8BAAgCsD,2DAKnDtP,EAAqB3Z,QAAQ,CAAC6Z,QAAOE,wBAAlDQ,SACA1b,EAAS4b,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,6DAA8D,OAC9FjB,EAAOmB,IAAEc,SAASd,IAAE/U,IAAI6U,EAAM,8CAA+C,OAC9E1b,GAAWya,wBACRoB,kCAED,CAACpB,ssDC7BG8pB,eAvFb,SAAAA,EAAYjiB,GAAU,IAAAH,EAAA,mGAAAqiB,CAAA5kB,KAAA2kB,IACpBpiB,EAAAsiB,GAAA7kB,KAAA8kB,GAAAH,GAAA5nC,KAAAijB,KAAM0C,KAEDuC,MAAQ,CACX6B,UAAW,GACXE,WAAY,MALMzE,yPAFuBD,+MAYrCtC,KAAK+kB,8IAGJ,IAAAnE,EAAA5gB,KAAAmhB,EAAA6D,GAAA,GAC6BhlB,KAAKiF,OAAlC+B,EADAma,EACAna,WAAYF,EADZqa,EACYra,UACZ9L,EAFAgqB,GAAA,GAEahlB,KAAK0C,OAAlB1H,MAEHqE,EAAQ,GACR4lB,EAAU,KACd,GAAIje,EAAY,CAEd,IAAI+Q,EAC8C,aAAhD/Q,EAAWO,eAAeG,mBACkB,YAA5CV,EAAWO,eAAeE,cACxB,WAAa,SAEjBpI,EAAQ2H,EAAWC,mBACnBge,EACEriB,EAAAte,EAAA1B,cAACy2B,GAAD,CAASrS,WAAYA,EACZ2M,6BAA8B,WAAQiN,EAAKsE,YAAYle,EAAYF,IACnEwR,yBAA0B,WAAQsI,EAAKuE,QAAQne,IAC/CuR,sBAAuB,WAAQqI,EAAKwE,KAAKpe,IACzC+Q,OAAQA,EACR/c,MAAOA,IAKpB,OACE4H,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,oBACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAOA,EAAOQ,SAAS,UAAUoN,kBAAkB,IAC1DgY,EACDriB,EAAAte,EAAA1B,cAACmiB,GAAD,yFAKYiC,EAAwBF,kGAClC+N,GAAQiC,YAAY,CACxBrX,UAAWuH,EAAWvH,UACtB2H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,iMAIUE,8FACN0d,QACU1d,EAAWE,sBACR3D,GAAiBM,8CACrB7D,KAAK0C,MAAM1H,YAFxBkM,kBACA5L,eACAkP,gCAH6CwQ,uEAKzChb,KAAK+kB,0LAGF/d,8FACH0d,QACU1d,EAAWE,sBACR3D,GAAiBM,8CACrB7D,KAAK0C,MAAM1H,YAFxBkM,kBACA5L,eACAkP,gCAH6C+Q,oEAKzCvb,KAAK+kB,qSAIQL,GAAyCjZ,oBAAoB,CAC9E5Q,KAAMmF,KAAK0C,MAAM7H,KACjB2P,YAAaxK,KAAK0C,MAAM1H,eAFpB/e,SAKN+jB,KAAKoa,SAAS,CACZtT,UAAW7qB,EAAK6qB,UAChBE,WAAY/qB,EAAK+qB,m4BCxFFqe,8PAEkBlqB,mHAETA,GAAnBN,SAAMG,UAEPI,uFAKoBP,8BAAwBG,ydAkCjBE,EAAqB3Z,QAAQ,CAAC6Z,oBAAzDqP,SACAC,EAAuB1O,IAAE/U,IAAIwjB,EAAoB,4BAA6B,0BAE5ExO,gBAGFhgB,EAAsC,CAC1C6qB,UAAW9K,IAAEc,SAASd,IAAE/U,IAAIwjB,EAAoB,8BAA+B,KAC/EzB,eAAgB,CACdhoB,GAAIgb,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,KAAM,KACjD7P,KAAMmB,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,OAAQ,KACrD7C,SAAU7L,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,WAAY,KAC7D5C,SAAUhL,IAAS7V,IAAIyjB,EAAsB,WAAY,KACzDtqB,OAAQ4b,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,SAAU,KACzDptB,OAAQ0e,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,SAAU,KACzDtD,UAAWjB,GAAWS,kBAAkB3f,IAAIyjB,EAAsB,cAClEE,4BAA6B5O,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,+BAAgC,KACpGN,0BAA2BpO,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,6BAA8B,KAChGC,iBAAkBxN,QAAQlW,IAAIyjB,EAAsB,2BAA2B,IAC/EjL,UAAWtD,EAAeuD,uBAAuB,CAC/CpD,WAAYN,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,oBAAqB,KACxEnO,YAAaP,IAAEc,SAASd,IAAE/U,IAAIyjB,EAAsB,aAAc,OAEpEG,mBAAoBf,GAAwBgB,oBAAoB7jB,IAAIyjB,EAAsB,qBAAsB,KAChHK,YAAaf,GAAiBgB,mBAAmB/jB,IAAIyjB,EAAsB,cAAe,yBAIvFzuB,82DCtEUqpC,eAEnB,SAAAA,EAAY5iB,GAAU,IAAAH,EAAA,mGAAAgjB,CAAAvlB,KAAAslB,IACpB/iB,EAAAijB,GAAAxlB,KAAAylB,GAAAH,GAAAvoC,KAAAijB,KAAM0C,KAEDuC,MAAQ,CACX6B,UAAW,GACXkC,eAAgB,MALEzG,yPAFoCD,+MAYlDtC,KAAK+kB,8IAGJ,IAAA5D,EAAAuE,GAAA,GACiC1lB,KAAKiF,OAAtC6B,EADAqa,EACAra,UAAWkC,EADXmY,EACWnY,eACXhO,EAFA0qB,GAAA,GAEa1lB,KAAK0C,OAAlB1H,MAEP,IAAKgO,EAAiB,OAAO,KAE7B,IAAM1rB,EAAS0rB,EAAe1rB,QAAoC,aAA1B0rB,EAAe5oB,OACrDwiB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,UACbF,EAAAte,EAAA1B,cAAA,qBACAggB,EAAAte,EAAA1B,cAAA,WAAMomB,EAAe1rB,SAErB,KAEEghC,EAAatV,EAAe4B,4BAChChI,EAAAte,EAAA1B,cAACwsB,GAAD,CACE/P,MAAO,gCACP4D,QAAS,WACPrI,EAAQyc,+BAA+BrO,EAAe4B,4BAA6B5P,MAGrF,KAEJ,OACE4H,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,2BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAO2J,EAAenB,SAAUhI,SAAUiH,EAAWmG,kBAAkB,IAC/ErK,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,kBACZxlB,EACDslB,EAAAte,EAAA1B,cAACixB,GAAD,CAAgBpU,UAAWuJ,EAAevJ,YAE1CmD,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACZwb,IAGL1b,EAAAte,EAAA1B,cAACmiB,GAAD,kMAMsB/E,KAAK0C,OAAxB7H,SAAMG,mBACMqqB,GAAgCM,wBAAwB,CAAC9qB,OAAMG,iBAA5E/e,SACN+jB,KAAKoa,SAASn+B,23CC9DlB,IA4BM2pC,oaAAoDtjB,mEAItD4c,EAFkB2G,GAAA,GACmB7lB,KAAK0C,OAAnCwc,2DAIA,IAAA3R,EAAAsY,GAAA,GAKC7lB,KAAK0C,OAHXoE,EAFKyG,EAELzG,UACAkC,EAHKuE,EAGLvE,eACAhO,EAJKuS,EAILvS,MAGF,OAAKgO,EAKHpG,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,+BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAM,sBAAsBQ,SAAUiH,IAC9ClE,EAAAte,EAAA1B,cAACqgC,GAAD,CACEpY,mBAAoB7B,EAAe6B,mBACnCE,YAAa/B,EAAe+B,aAE5BnI,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACwsB,GAAD,CACE/P,MAAO,gCACP4D,QAAS,WACPrI,EAAQyc,+BAA+BrO,EAAe4B,4BAA6B5P,QAK3F4H,EAAAte,EAAA1B,cAACmiB,GAAD,OAnBK,4CAyBEC,eApES,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAMsa,gBAAgBzY,UACjCkC,eAAgB/D,EAAM4X,oBAAoB7T,iBAInB,SAACxH,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,WACoB,IAAA4G,EAAAD,GAAA,GACGnjB,GAAnB7H,EADgBirB,EAChBjrB,KAAMG,EADU8qB,EACV9qB,MACbwG,EAASqd,MACTrd,EAASya,GAAmB,CAACphB,OAAM2P,YAAaxP,QAwDvCgK,CAGb4gB,wzBC5BaG,oaAhDgBzjB,uDAI3B,OACEM,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,YACEggB,EAAAte,EAAA1B,cAACojC,GAAA,EAAD,KACEpjB,EAAAte,EAAA1B,cAAC8gC,EAAA,EAAD,KACE9gB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAAziB,GAAuB,IAArB2iB,EAAqB3iB,EAArB2iB,MAAOjpB,EAAcsG,EAAdtG,SACFM,EAAQlZ,iBAAM4Y,EAASmrB,QAC7B,OACErjB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACsjC,GAAD,CAAkCrrB,KAAMkpB,EAAME,OAAOppB,KAAMG,MAAOI,EAAMJ,OAAS,QAKzF4H,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAhW,GAAuB,IAArBkW,EAAqBlW,EAArBkW,MAAOjpB,EAAc+S,EAAd/S,SACFM,EAAQlZ,iBAAM4Y,EAASmrB,QAC7B,OACErjB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACujC,GAAD,CAAgCtrB,KAAMkpB,EAAME,OAAOppB,KAAMG,MAAOI,EAAMJ,OAAS,QAKvF4H,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,yCACT,SAAAxY,GAAuB,IAArB0Y,EAAqB1Y,EAArB0Y,MAAOjpB,EAAcuQ,EAAdvQ,SACFM,EAAQlZ,iBAAM4Y,EAASmrB,QAC7B,OACErjB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACwjC,GAAD,CAA6CvrB,KAAMkpB,EAAME,OAAOppB,KAAMG,MAAOI,EAAMJ,OAAS,4DCtC5GqrB,WAA0B,CAC9BhnB,MAAO,GACPQ,SAAU,GACVE,QAAS,GACTI,MAAO,ocCGT,IAAMmmB,GAA6C,CACjDjnB,MAAO,GACPQ,SAAU,GACV+F,eAAgB,GAChBjF,gBAAiB,GACjBkF,KAAM,MAGF0gB,GAAuD,CAC3DlnB,MAAO,GACPyH,UAAW,GACXjB,KAAM,KACNmB,WAAY,KACZD,uBAAuB,GAoFVyf,kCAAoC,CACjDlZ,WAlFK,WAA8G,IAA1FrI,EAA0FhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAzDqrB,GAAmBvnB,EAAsC9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EACnH,OAAIqf,EAAO/a,OAAS4U,EAAWK,cAAcC,+BACpC6F,EAAOiD,QAETiD,GA+EPkH,gBA5EK,WAAkG,IAAzElH,EAAyEhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAnCsrB,GAAwBxnB,EAAW9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EACvG,GAAIqf,EAAO/a,OAAS4U,EAAWK,cAAcE,oCAC3C,OAAO4F,EAAOiD,QAGhB,GAAIjD,EAAO/a,OAAS4U,EAAWK,cAAcG,iCAAkC,CAC7E,IAAK6L,EAAM+B,WACT,OAAO/B,EAIT,IAAMgE,EAA6BlK,EAAOiD,QACpCoC,EAAQa,EAAM+B,WAAWvH,UAAU0J,UAAU,SAAC/J,GAClD,OAAOA,EAASpe,KAAOioB,EAAiBjoB,KAE1C,GAAIojB,EAAQ,EACV,OAAOa,EAGT,IAAMwhB,EAAWC,GAAA,GAAIzhB,GAErB,OADAjJ,IAAE9U,IAAIu/B,EAAN,wBAAAriC,OAAwCggB,GAAS6E,GAC1Cwd,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWK,cAAcI,uCAAwC,CACnF,IAAM2N,EAAa/B,EAAM+B,WACzB,IAAKA,EACH,OAAO/B,EAH0E,IAM5EsE,EAN4Emd,GAAA,GAMzD3nB,GAAnBwK,YACDL,EAAelC,EAAWvH,UAAU0J,UAAU,SAAC/J,GACnD,OAAOA,EAAS3B,YAIlB,GAAI8L,EAAc,GAAKA,GAAevC,EAAWvH,UAAUhjB,OACzD,OAAOwoB,EAGT,IAAMwhB,EAAWC,GAAA,GAAIzhB,GAQrB,OALAjJ,IAAE9U,IAAIu/B,EAAN,wBAAAriC,OAAwC8kB,EAAxC,eAAkE,GAGlElN,IAAE9U,IAAIu/B,EAAN,wBAAAriC,OAAwCmlB,EAAxC,eAAiE,GAE1Dkd,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWK,cAAcK,2CAA4C,CACvF,IAAM0N,EAAa/B,EAAM+B,WACzB,IAAKA,EACH,OAAO/B,EAET,IAAMwhB,EAAWC,GAAA,GAAIzhB,GAGfqE,EAAuBvK,EAAOuK,qBASpC,OARIA,GAAwBA,EAAqB7sB,OAAS,GACxD6sB,EAAqB3jB,QAAQ,SAAAye,GAC3B,IAAMuiB,EAAwB3f,EAAWvH,UAAU2E,GACnDuiB,EAAsBnpB,cAAe,EACrCxB,IAAE9U,IAAIu/B,EAAN,wBAAAriC,OAAwCggB,GAASuiB,KAI9CF,EAGT,OAAOxhB,sKCjGT,IAAMqhB,GAAyC,CAC7Ctd,eAAgB,+HCLlB,IAAMqd,GAAiC,CACrCxgB,KAAM,+HCDR,IAAMwgB,GAAgC,CACpCvf,UAAW,4dCMb,IAAMuf,GAAwC,CAC5CvF,oBAAqB,GACrBjW,mBAAoB,GACpBE,YAAa,GACbqX,SAAU,QAGNd,GAAoBjB,GAAuBiB,kBCTlCkF,kCAA2B,CACxC/kB,UNCK,WAAyF,IAAtEwD,EAAsEhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAnDorB,GAActnB,EAAqC9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EAC9F,OAAQqf,EAAO/a,MACb,KAAK4U,EAAWC,KAAKG,yBACnB,OAAO+F,EAAOiD,QAChB,QACE,OAAOiD,IMLXiH,sBACA2Q,oBJAK,WAA6G,IAAhF5X,EAAgFhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAnDqrB,GAAmBvnB,EAAgC9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EAC5GspB,EAAwC/D,EAAM+D,eAEpD,GAAIjK,EAAO/a,OAAS4U,EAAWW,KAAKC,qBAElC,MAAO,CACLwP,eAAgBjK,EAAOiD,SAI3B,GAAIjD,EAAO/a,OAAS4U,EAAWW,KAAKE,4BAA6B,CAE/D,IAAKuP,EACH,OAAO/D,EAGT,IAAMgE,EAA6BlK,EAAOiD,QACpCoC,EAAQ4E,EAAevJ,UAAU0J,UAAU,SAAC/J,GAChD,OAAOA,EAASpe,KAAOioB,EAAiBjoB,KAE1C,GAAIojB,EAAQ,EACV,OAAOa,EAGT,IAAMwhB,EAAWG,KAAU3hB,GAE3B,OADA/d,KAAIu/B,EAAD,4BAAAriC,OAAuCggB,GAAS6E,GAC5Cwd,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWW,KAAKG,kCAAmC,CACrE,IAAKsP,EACH,OAAO/D,EAET,IAAMwhB,EAAWG,KAAU3hB,GAGrBqE,EAAuBvK,EAAOiD,QASpC,OARIsH,GAAwBA,EAAqB7sB,OAAS,GACxD6sB,EAAqB3jB,QAAQ,SAAAye,GAC3B,IAAMuiB,EAAwB3d,EAAevJ,UAAU2E,GACvDuiB,EAAsBnpB,cAAe,EACrCtW,KAAIu/B,EAAD,4BAAAriC,OAAuCggB,GAASuiB,KAIhDF,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWW,KAAKI,8BAA+B,CACjE,IAAKqP,EACH,OAAO/D,EAFwD,IAAA4hB,qUAAAC,CAAA,GAKzB/nB,EAAOiD,SAAxCkH,EAL0D2d,EAK1D3d,aAAcK,EAL4Csd,EAK5Ctd,YAGrB,GAAIA,EAAc,GAAKA,GAAeP,EAAevJ,UAAUhjB,OAC7D,OAAOwoB,EAGT,IAAMwhB,EAAWG,KAAU3hB,GAO3B,OAJA/d,KAAIu/B,EAAD,4BAAAriC,OAAuC8kB,EAAvC,eAAiE,GAEpEhiB,KAAIu/B,EAAD,4BAAAriC,OAAuCmlB,EAAvC,eAAgE,GAE5Dkd,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWW,KAAKK,yBAA0B,CAC5D,IAAM6sB,EAAWG,KAAU3hB,GAO3B,OANA/d,KAAIu/B,EAAD,wBAAoC,YAEnC1nB,EAAOiD,SACT9a,KAAIu/B,EAAD,wBAAoC1nB,EAAOiD,SAGzCykB,EAGT,GAAI1nB,EAAO/a,OAAS4U,EAAWW,KAAKM,qBAAsB,CACxD,IAAM4sB,EAAWG,KAAU3hB,GAG3B,OAFA/d,KAAIu/B,EAAD,wBAAoC,eACvCv/B,KAAIu/B,EAAD,wBAAoC,MAChCA,EAGT,OAAOxhB,GIvFPua,iBHLK,WAAgG,IAAtEva,EAAsEhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAA5CorB,GAActnB,EAA8B9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EACrG,OAAQqf,EAAO/a,MACb,KAAK4U,EAAW4B,KAAKC,iBACnB,0UAAAssB,CAAA,GACK9hB,EADL,CAEEY,KAAM9G,EAAOiD,UAEjB,QACE,OAAOiD,IGFXsa,gBFNK,WAA4F,IAAnEta,EAAmEhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAA1CorB,GAActnB,EAA4B9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EACjG,OAAQqf,EAAO/a,MACb,KAAK4U,EAAW8B,YAAYC,eAC1B,0UAAAqsB,CAAA,GACK/hB,EADL,CAEE6B,UAAW/H,EAAOiD,UAEtB,QACE,OAAOiD,IEDXie,wBDKK,WAA2F,IAA1Dje,EAA0DhK,UAAAxe,OAAA,QAAAiD,IAAAub,UAAA,GAAAA,UAAA,GAAzBorB,GAActnB,EAAW9D,UAAAxe,OAAA,EAAAwe,UAAA,QAAAvb,EAChG,GAAIqf,EAAO/a,OAAS4U,EAAWkB,oBAAoBC,yBAEjD,OAAAktB,GAAA,GACKhiB,EADL,CAEE6b,oBAHyC/hB,EAGhBiD,UAI7B,GAAIjD,EAAO/a,OAAS4U,EAAWkB,oBAAoBE,uBAAwB,CACzE,IAAMktB,EAAkCnoB,EACxC,IAAKuiB,GAAkB4F,EAAIllB,QAASiD,EAAM4F,qBACxCyW,GAAkB4F,EAAIllB,QAASiD,EAAM6b,qBACrC,OAAAmG,GAAA,GACKhiB,EADL,CAEE4F,mBAAoBzmB,KAClB6gB,EAAM4F,mBACN5F,EAAM6b,oBAAoBniB,OAAO,SAAC4hB,GAAD,OAAeA,EAAUv/B,KAAOkmC,EAAIllB,aAM7E,GAAIjD,EAAO/a,OAAS4U,EAAWkB,oBAAoBG,0BAA2B,CAC5E,IAAMitB,EAAqCnoB,EAC3C,GAAIuiB,GAAkB4F,EAAIllB,QAASiD,EAAM4F,qBACvCyW,GAAkB4F,EAAIllB,QAASiD,EAAM6b,qBACrC,OAAAmG,GAAA,GACKhiB,EADL,CAEE4F,mBAAoB5F,EAAM4F,mBAAmBlM,OAAO,SAAC4hB,GAAD,OAAeA,EAAUv/B,KAAOkmC,EAAIllB,YAK9F,OAAIjD,EAAO/a,OAAS4U,EAAWkB,oBAAoBI,iBAEjD+sB,GAAA,GACKhiB,EADL,CAEE8F,YAHgChM,EAGfiD,UAIjBjD,EAAO/a,OAAS4U,EAAWkB,oBAAoBK,cAEjD8sB,GAAA,GACKhiB,EADL,CAEEmd,SAH6BrjB,EAGfiD,UAIXiD,eElEHkiB,GAAa,CAACC,KAMb,IAOQC,GAPMC,uBACnBvb,GACAwb,+BACEC,mBAAepqC,WAAf,EAAmB+pC,qvCCIvB,IA6CMM,oaAAyCnlB,mEAI3C4c,EAFkBwI,GAAA,GACmB1nB,KAAK0C,OAAnCwc,2DAIA,IAAA3R,EAAAma,GAAA,GAOC1nB,KAAK0C,OALXoE,EAFKyG,EAELzG,UACAkC,EAHKuE,EAGLvE,eACAiJ,EAJK1E,EAIL0E,mCACAC,EALK3E,EAKL2E,qCACAkN,EANK7R,EAML6R,0BAGF,OAAKpW,EAKHpG,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,2BACbF,EAAAte,EAAA1B,cAAC6qB,GAAD,CAAQpO,MAAO2J,EAAenB,SAAUhI,SAAUiH,IAClDlE,EAAAte,EAAA1B,cAAC08B,GAAD,CACEtW,eAAgBA,EAChBuI,qBAAsBU,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACblB,gBAAgB,EAChBC,gBAAgB,EAChBC,iBAA4C,gBAA1BpV,EAAe5oB,SAEnCwiB,EAAAte,EAAA1B,cAACmiB,GAAD,OAfK,4CAqBEC,eAnFS,SAACC,GACvB,MAAO,CACL+D,eAAgB/D,EAAM4X,oBAAoB7T,eAC1ClC,UAAW7B,EAAMsa,gBAAgBzY,YAIV,SAACtF,EAAoBkB,GAC9C,MAAO,CACLwc,uBADK,WACoB,IAAA4G,EAAA4B,GAAA,GACShlB,GAAzB7H,EADgBirB,EAChBjrB,KAAM2P,EADUsb,EACVtb,YACbhJ,EAASqd,MACTrd,EAASya,GAAmB,CAACphB,OAAM2P,kBAErCyH,mCANK,SAM8BhJ,GAA4B,IACtDuB,EADsDkd,GAAA,GACnChlB,GAAnB8H,YACPhJ,EAAS8a,GAAqC,CAACrT,mBAAkBuB,kBAEnE0H,qCAVK,SAUgCG,GAA0B,IACtD7H,EADsDkd,GAAA,GACnChlB,GAAnB8H,YACPhJ,EAASkc,GAAuC,CAACrL,iBAAgB7H,kBAEnE4U,0BAdK,WAcuB,IACnB5U,EADmBkd,GAAA,GACAhlB,GAAnB8H,YACPhJ,EAASoc,GAA4B,CAACpT,oBA2D7BxF,CAGbyiB,wzBCzEaE,oaAzBSrlB,uDAGpB,OACEM,EAAAte,EAAA1B,cAAA,WACEggB,EAAAte,EAAA1B,cAAA,YACEggB,EAAAte,EAAA1B,cAAC8gC,EAAA,EAAD,KACE9gB,EAAAte,EAAA1B,cAAC+gC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAziB,GAAuB,IAArB2iB,EAAqB3iB,EAArB2iB,MAAOjpB,EAAcsG,EAAdtG,SACFM,EAAQlZ,iBAAM4Y,EAASmrB,QAC7B,OACErjB,EAAAte,EAAA1B,cAAA,OAAKkgB,UAAU,WACbF,EAAAte,EAAA1B,cAACglC,GAAD,CAAkC/sB,KAAMkpB,EAAME,OAAOppB,KAAM2P,YAAapP,EAAMJ,OAAS,kDCR3Gjd,OAAOw2B,iBAAiB,OAAQ,WAE9BsT,KAAWC,cAAgB,CACzBC,QAAS,CACPC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,qBACjBC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEd3T,QAAS,CACP4T,WAAY,OACZC,SAAU,OACVC,wBAAyB,QACzBC,QAAS,SAIb,IAAMC,EAAgBnmC,SAASomC,eAAe,YAC1CD,GACFE,IAASzY,OACP3N,EAAAte,EAAA1B,cAACojC,GAAA,EAAD,KACEpjB,EAAAte,EAAA1B,cAACqmC,EAAA,EAAD,CAAU5B,MAAOA,IACfzkB,EAAAte,EAAA1B,cAACsmC,GAAD,QAGHJ,GAGL,IAAMK,EAAyBxmC,SAASomC,eAAe,sBACnDI,GACFH,IAASzY,OACP3N,EAAAte,EAAA1B,cAACojC,GAAA,EAAD,KACEpjB,EAAAte,EAAA1B,cAACqmC,EAAA,EAAD,CAAU5B,MAAOA,IACfzkB,EAAAte,EAAA1B,cAACwmC,GAAD,QAGHD,GAGL,IAAME,EAAkB1mC,SAASomC,eAAe,cAC5CM,GACFL,IAASzY,OACP3N,EAAAte,EAAA1B,cAACojC,GAAA,EAAD,KACEpjB,EAAAte,EAAA1B,cAACqmC,EAAA,EAAD,CAAU5B,MAAOA,IACfzkB,EAAAte,EAAA1B,cAAC0mC,GAAD,QAGHD,yBChEPhmC,EAAAqD,QAAiB9I,EAAA6D,EAAuB,kECAxC4B,EAAAqD,QAAiB9I,EAAA6D,EAAuB","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"7115807f6802ec15964c\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([644,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 207,\n\t\"./af.js\": 207,\n\t\"./ar\": 208,\n\t\"./ar-dz\": 209,\n\t\"./ar-dz.js\": 209,\n\t\"./ar-kw\": 210,\n\t\"./ar-kw.js\": 210,\n\t\"./ar-ly\": 211,\n\t\"./ar-ly.js\": 211,\n\t\"./ar-ma\": 212,\n\t\"./ar-ma.js\": 212,\n\t\"./ar-sa\": 213,\n\t\"./ar-sa.js\": 213,\n\t\"./ar-tn\": 214,\n\t\"./ar-tn.js\": 214,\n\t\"./ar.js\": 208,\n\t\"./az\": 215,\n\t\"./az.js\": 215,\n\t\"./be\": 216,\n\t\"./be.js\": 216,\n\t\"./bg\": 217,\n\t\"./bg.js\": 217,\n\t\"./bm\": 218,\n\t\"./bm.js\": 218,\n\t\"./bn\": 219,\n\t\"./bn.js\": 219,\n\t\"./bo\": 220,\n\t\"./bo.js\": 220,\n\t\"./br\": 221,\n\t\"./br.js\": 221,\n\t\"./bs\": 222,\n\t\"./bs.js\": 222,\n\t\"./ca\": 223,\n\t\"./ca.js\": 223,\n\t\"./cs\": 224,\n\t\"./cs.js\": 224,\n\t\"./cv\": 225,\n\t\"./cv.js\": 225,\n\t\"./cy\": 226,\n\t\"./cy.js\": 226,\n\t\"./da\": 227,\n\t\"./da.js\": 227,\n\t\"./de\": 228,\n\t\"./de-at\": 229,\n\t\"./de-at.js\": 229,\n\t\"./de-ch\": 230,\n\t\"./de-ch.js\": 230,\n\t\"./de.js\": 228,\n\t\"./dv\": 231,\n\t\"./dv.js\": 231,\n\t\"./el\": 232,\n\t\"./el.js\": 232,\n\t\"./en-SG\": 233,\n\t\"./en-SG.js\": 233,\n\t\"./en-au\": 234,\n\t\"./en-au.js\": 234,\n\t\"./en-ca\": 235,\n\t\"./en-ca.js\": 235,\n\t\"./en-gb\": 236,\n\t\"./en-gb.js\": 236,\n\t\"./en-ie\": 237,\n\t\"./en-ie.js\": 237,\n\t\"./en-il\": 238,\n\t\"./en-il.js\": 238,\n\t\"./en-nz\": 239,\n\t\"./en-nz.js\": 239,\n\t\"./eo\": 240,\n\t\"./eo.js\": 240,\n\t\"./es\": 241,\n\t\"./es-do\": 242,\n\t\"./es-do.js\": 242,\n\t\"./es-us\": 243,\n\t\"./es-us.js\": 243,\n\t\"./es.js\": 241,\n\t\"./et\": 244,\n\t\"./et.js\": 244,\n\t\"./eu\": 245,\n\t\"./eu.js\": 245,\n\t\"./fa\": 246,\n\t\"./fa.js\": 246,\n\t\"./fi\": 247,\n\t\"./fi.js\": 247,\n\t\"./fo\": 248,\n\t\"./fo.js\": 248,\n\t\"./fr\": 249,\n\t\"./fr-ca\": 250,\n\t\"./fr-ca.js\": 250,\n\t\"./fr-ch\": 251,\n\t\"./fr-ch.js\": 251,\n\t\"./fr.js\": 249,\n\t\"./fy\": 252,\n\t\"./fy.js\": 252,\n\t\"./ga\": 253,\n\t\"./ga.js\": 253,\n\t\"./gd\": 254,\n\t\"./gd.js\": 254,\n\t\"./gl\": 255,\n\t\"./gl.js\": 255,\n\t\"./gom-latn\": 256,\n\t\"./gom-latn.js\": 256,\n\t\"./gu\": 257,\n\t\"./gu.js\": 257,\n\t\"./he\": 258,\n\t\"./he.js\": 258,\n\t\"./hi\": 259,\n\t\"./hi.js\": 259,\n\t\"./hr\": 260,\n\t\"./hr.js\": 260,\n\t\"./hu\": 261,\n\t\"./hu.js\": 261,\n\t\"./hy-am\": 262,\n\t\"./hy-am.js\": 262,\n\t\"./id\": 263,\n\t\"./id.js\": 263,\n\t\"./is\": 264,\n\t\"./is.js\": 264,\n\t\"./it\": 265,\n\t\"./it-ch\": 266,\n\t\"./it-ch.js\": 266,\n\t\"./it.js\": 265,\n\t\"./ja\": 267,\n\t\"./ja.js\": 267,\n\t\"./jv\": 268,\n\t\"./jv.js\": 268,\n\t\"./ka\": 269,\n\t\"./ka.js\": 269,\n\t\"./kk\": 270,\n\t\"./kk.js\": 270,\n\t\"./km\": 271,\n\t\"./km.js\": 271,\n\t\"./kn\": 272,\n\t\"./kn.js\": 272,\n\t\"./ko\": 273,\n\t\"./ko.js\": 273,\n\t\"./ku\": 274,\n\t\"./ku.js\": 274,\n\t\"./ky\": 275,\n\t\"./ky.js\": 275,\n\t\"./lb\": 276,\n\t\"./lb.js\": 276,\n\t\"./lo\": 277,\n\t\"./lo.js\": 277,\n\t\"./lt\": 278,\n\t\"./lt.js\": 278,\n\t\"./lv\": 279,\n\t\"./lv.js\": 279,\n\t\"./me\": 280,\n\t\"./me.js\": 280,\n\t\"./mi\": 281,\n\t\"./mi.js\": 281,\n\t\"./mk\": 282,\n\t\"./mk.js\": 282,\n\t\"./ml\": 283,\n\t\"./ml.js\": 283,\n\t\"./mn\": 284,\n\t\"./mn.js\": 284,\n\t\"./mr\": 285,\n\t\"./mr.js\": 285,\n\t\"./ms\": 286,\n\t\"./ms-my\": 287,\n\t\"./ms-my.js\": 287,\n\t\"./ms.js\": 286,\n\t\"./mt\": 288,\n\t\"./mt.js\": 288,\n\t\"./my\": 289,\n\t\"./my.js\": 289,\n\t\"./nb\": 290,\n\t\"./nb.js\": 290,\n\t\"./ne\": 291,\n\t\"./ne.js\": 291,\n\t\"./nl\": 292,\n\t\"./nl-be\": 293,\n\t\"./nl-be.js\": 293,\n\t\"./nl.js\": 292,\n\t\"./nn\": 294,\n\t\"./nn.js\": 294,\n\t\"./pa-in\": 295,\n\t\"./pa-in.js\": 295,\n\t\"./pl\": 296,\n\t\"./pl.js\": 296,\n\t\"./pt\": 297,\n\t\"./pt-br\": 298,\n\t\"./pt-br.js\": 298,\n\t\"./pt.js\": 297,\n\t\"./ro\": 299,\n\t\"./ro.js\": 299,\n\t\"./ru\": 300,\n\t\"./ru.js\": 300,\n\t\"./sd\": 301,\n\t\"./sd.js\": 301,\n\t\"./se\": 302,\n\t\"./se.js\": 302,\n\t\"./si\": 303,\n\t\"./si.js\": 303,\n\t\"./sk\": 304,\n\t\"./sk.js\": 304,\n\t\"./sl\": 305,\n\t\"./sl.js\": 305,\n\t\"./sq\": 306,\n\t\"./sq.js\": 306,\n\t\"./sr\": 307,\n\t\"./sr-cyrl\": 308,\n\t\"./sr-cyrl.js\": 308,\n\t\"./sr.js\": 307,\n\t\"./ss\": 309,\n\t\"./ss.js\": 309,\n\t\"./sv\": 310,\n\t\"./sv.js\": 310,\n\t\"./sw\": 311,\n\t\"./sw.js\": 311,\n\t\"./ta\": 312,\n\t\"./ta.js\": 312,\n\t\"./te\": 313,\n\t\"./te.js\": 313,\n\t\"./tet\": 314,\n\t\"./tet.js\": 314,\n\t\"./tg\": 315,\n\t\"./tg.js\": 315,\n\t\"./th\": 316,\n\t\"./th.js\": 316,\n\t\"./tl-ph\": 317,\n\t\"./tl-ph.js\": 317,\n\t\"./tlh\": 318,\n\t\"./tlh.js\": 318,\n\t\"./tr\": 319,\n\t\"./tr.js\": 319,\n\t\"./tzl\": 320,\n\t\"./tzl.js\": 320,\n\t\"./tzm\": 321,\n\t\"./tzm-latn\": 322,\n\t\"./tzm-latn.js\": 322,\n\t\"./tzm.js\": 321,\n\t\"./ug-cn\": 323,\n\t\"./ug-cn.js\": 323,\n\t\"./uk\": 324,\n\t\"./uk.js\": 324,\n\t\"./ur\": 325,\n\t\"./ur.js\": 325,\n\t\"./uz\": 326,\n\t\"./uz-latn\": 327,\n\t\"./uz-latn.js\": 327,\n\t\"./uz.js\": 326,\n\t\"./vi\": 328,\n\t\"./vi.js\": 328,\n\t\"./x-pseudo\": 329,\n\t\"./x-pseudo.js\": 329,\n\t\"./yo\": 330,\n\t\"./yo.js\": 330,\n\t\"./zh-cn\": 331,\n\t\"./zh-cn.js\": 331,\n\t\"./zh-hk\": 332,\n\t\"./zh-hk.js\": 332,\n\t\"./zh-tw\": 333,\n\t\"./zh-tw.js\": 333\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 589;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const inst = axios.create({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n\n    const response = await inst.request();\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.get(inputSchema, \"Required\", false)),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n    const inst = axios.create({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const response = await inst.request();\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: `${get(jsonObject, \"FirstName\")} ${get(jsonObject, \"Surname\")}`,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\", \n  QuestionID: \"${questionID}\", \n  AnswerData: \"${answerDataStr}\", \n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\", \n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\", \n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\n\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Commons\n\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-wrapper\">\n        {this.props.showLogoutButton && <LogoutButton/>}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnarie\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} />\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnarie\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} />\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnarie\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\"/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>;\n      </div>\n    )\n      ;\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n  };\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, taskType, status}) => {\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskName} ({prettifyStatus(status)})\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.securityArchitect)}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.chiefInformationSecurityOfficer)}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.businessOwner)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n} from \"../../actions/questionnarie\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\"/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchApproveSubmissionAction(submission.submissionID);\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchDenySubmissionAction(submission.submissionID);\n  }\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: \"\"\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\") && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\") &&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n          {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n    const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n      uuid: this.props.uuid,\n      secureToken: this.props.token,\n    });\n\n    this.setState({\n      siteTitle: data.siteTitle,\n      submission: data.submission,\n    });\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}