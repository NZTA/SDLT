{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/MySubmission/MySubmissionList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/mySubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","inst","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","submission","questionnaireTitle","submissionID","submissionUUID","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","taskSubmissions","toArray","taskName","taskType","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","userID","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","taskId","taskJSONObject","componentIDs","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee13","indexesToUpdate","_context13","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","redirectToTaskSubmission","redirectToComponentSelectionSubmission","handleApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","_this$props$submissio6","dispatchEditSubmissionAction","setState","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref11","_callee9","_ref12","_context9","approveQuestionnaireSubmission","_x14","_x15","_ref13","_callee10","_ref14","_context10","denyQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","editQuestionnaireSubmission","_x18","_x19","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","isCurrentUserSubmitter","Task_TaskSubmission","questionnaireSubmission","siteConfigState","currentUserState","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","_this2","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","productName","class","list","mySubmissionListState","_ref17","_callee12","_context12","fetchUserSubmissionList","_x20","_x21","_dispatchLoadDataAction","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","MySubmission_MySubmissionList","QuestionnaireForBusinessOwnerDataService","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","submissionList","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","mySubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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ACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAIA,SAAAC,EAAAC,GACA,IAAAzX,EAAA0X,EAAAD,GACA,OAAA7a,EAAAoD,GAEA,SAAA0X,EAAAD,GACA,IAAA7a,EAAAgK,EAAAjE,EAAA8U,GAAA,CACA,IAAArW,EAAA,IAAAnB,MAAA,uBAAAwX,EAAA,KAEA,MADArW,EAAAuW,KAAA,mBACAvW,EAEA,OAAAuB,EAAA8U,GAEAD,EAAA9S,KAAA,WACA,OAAA9I,OAAA8I,KAAA/B,IAEA6U,EAAApX,QAAAsX,EACArV,EAAAqD,QAAA8R,EACAA,EAAAxX,GAAA,0/BChKe4X,EA3CI,CACjBC,KAAM,CACJC,wBAAyB,0BACzBC,uBAAwB,yBACxBC,yBAA0B,4BAE5BC,cAAe,CACbC,+BAAgC,iCAChCC,oCAAqC,sCACrCC,iCAAkC,mCAClCC,uCAAwC,yCACxCC,2CAA4C,6CAC5CC,yBAA0B,0CAE5BC,KAAM,CACJC,qBAAsB,mCACtBC,4BAA6B,0CAC7BC,kCAAmC,gDACnCC,8BAA+B,4CAC/BC,yBAA0B,uCAC1BC,qBAAsB,oCAExBC,oBAAqB,CACnBC,yBAA0B,sDAC1BC,uBAAwB,oDACxBC,0BAA2B,uDAC3BC,iBAAkB,8CAClBC,cAAe,4CAGjBC,GAAI,CACFC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,mBAAoB,sBAEtBC,KAAM,CACJC,iBAAkB,gCAEpBC,YAAa,CACXC,eAAgB,oXC7GCC,6MAEmBC,GACpC/c,OAAOgd,SAASC,KAAhB,+BAAA5W,OAAsD0W,yDAGnBA,GACnC/c,OAAOgd,SAASC,KAAhB,2BAAA5W,OAAkD0W,0DAGdA,GAAkC,IAApBG,EAAoBC,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAJ,GAEhEnd,OAAOgd,SAASC,KADdC,EACF,kDAAA7W,OAAyE0W,EAAzE,WAAA1W,OAAuF6W,GAIzF,4BAAA7W,OAAmD0W,oDAGrBA,GAAkC,IAApBG,EAAoBC,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAJ,GAE1Dnd,OAAOgd,SAASC,KADdC,EACF,4CAAA7W,OAAmE0W,EAAnE,WAAA1W,OAAiF6W,GAInF,sBAAA7W,OAA6C0W,kEAGDA,GAAkC,IAApBG,EAAoBC,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAJ,GAExEnd,OAAOgd,SAASC,KADdC,EACF,2DAAA7W,OAAkF0W,EAAlF,WAAA1W,OAAgG6W,GAIlG,qCAAA7W,OAA4D0W,8CAI5D/c,OAAOgd,SAASC,KAAO,6DAIvBjd,OAAOgd,SAASC,KAAO,uEAIvBjd,OAAOgd,SAASC,KAAO,gxBCnCNG,6OAEEC,wHACuBA,GAAnCC,UAAOC,cAAWC,cACnBC,EAAU,GAEZD,IACFC,EAAQ,gBAAkBD,GAGtBtf,EAAO,CACXof,MAAOI,IAASJ,GAChBC,UAAWA,GAGPI,EAAOC,IAAMzT,OAAO,CACxB0T,IAAK,WACLC,OAAQ,OACR5f,KAAMA,EACNuf,QAASA,aAGYE,EAAKna,oBAAtBua,SACAC,EAAOD,EAAS7f,OAGhB+f,EAAeC,IAAEhV,IAAI8U,EAAM,mBAAoB,8BAE7C,IAAI9a,MAAM+a,oCAGXD,oTC1CEG,EAAwB,IAAIjb,MAAM,2CAClCkb,EAAsB,IAAIlb,MAAM,4UCuCxBmb,qMAEWhB,GAGV,IAAAiB,oUAAAC,CAAA,GACoBlB,GAA/BmB,EADWF,EACXE,WAAYC,EADDH,EACCG,YAEbC,EA5BV,SAA6BF,GAC3B,IAAME,EAASxa,KAAKC,MAAMqa,GAC1B,IAAIE,IAAWC,MAAMC,QAAQF,GAC3B,MAAMN,EAER,OAAOM,EAuBUG,CAAoBL,GAC7BM,EA5CV,SAA8BL,GAC5B,IAAKA,EACH,MAAO,GAGT,IAAMM,EAAa7a,KAAKC,MAAMsa,GACxBK,EAAU,GAMhB,OALIC,GACFb,IAAEvW,KAAKoX,GAAYnX,QAAQ,SAACwC,GAC1B0U,EAAQZ,IAAEc,SAAS5U,IAAQ2U,EAAW3U,KAGnC0U,EAgCWG,CAAqBR,GAC/BS,EAtBV,SAA+BJ,GAC7B,IAAII,EAAoB,GAQxB,OAPAhB,IAAEvW,KAAKmX,GAASlX,QAAQ,SAACuX,GACvB,IAAMC,EAASN,EAAQK,IAClBD,GAAqBG,QAAQnB,IAAEhV,IAAIkW,EAAN,aAA2B,MAC3DF,EAAoBC,KAIjBD,EAaqBI,CAAsBR,GAEhD,OAAOJ,EAAO9Y,IAAI,SAAC2Z,EAAgBC,GACjC,IAAML,EAAajB,IAAEc,SAASd,IAAEhV,IAAIqW,EAAgB,KAAM,KACpDE,EAAYJ,QAAQnB,IAAEhV,IAAI4V,EAAN,GAAAzY,OAAkB8Y,EAAlB,eAA0C,IAC9DO,EAAeL,QAAQnB,IAAEhV,IAAI4V,EAAN,GAAAzY,OAAkB8Y,EAAlB,kBAA6C,IAItEQ,GAAY,EAEdA,EADET,EACWA,IAAsBC,EAEN,IAAhBK,EAGf,IAAII,EAAS,KACTC,EAAU,KAERC,EAAeL,EAAYvB,IAAEhV,IAAI4V,EAAN,GAAAzY,OAAkB8Y,EAAlB,WAAuC,IAAM,GACxEY,EAAgBN,EAAYvB,IAAEhV,IAAI4V,EAAN,GAAAzY,OAAkB8Y,EAAlB,YAAwC,IAAM,GAE1Ea,EAAe9B,IAAEhV,IAAIqW,EAAgB,oBAAqB,IAC1DU,EAAgB/B,IAAEhV,IAAIqW,EAAgB,qBAAsB,IAE9DS,GAAgBrB,MAAMC,QAAQoB,IAAiBA,EAAathB,OAAS,IACvEkhB,EAASI,EAAapa,IAAI,SAACsa,GAEzB,IAAIja,EAAOiY,IAAEc,SAASd,IAAEhV,IAAIgX,EAAa,YAAa,KAAKC,cACxC,CAAC,OAAQ,QAAS,WAAY,OAAQ,OACzCC,SAASna,KACvBA,EAAO,QAGT,IAAMoa,EAAUnC,IAAEc,SAASd,IAAEhV,IAAIgX,EAAa,KAAM,KAC9CI,EAAqB,CACzBrd,GAAIod,EACJE,MAAOrC,IAAEc,SAASd,IAAEhV,IAAIgX,EAAa,QAAS,KAC9Cja,KAAMA,EACNua,SAAUnB,QAAQnB,IAAEuC,UAAUvC,IAAEhV,IAAIgX,EAAa,YAAY,KAC7DQ,UAAWC,OAAOC,SAAS1C,IAAEc,SAASd,IAAEhV,IAAIgX,EAAa,YAAa,KACtEW,YAAa3C,IAAEc,SAASd,IAAEhV,IAAIgX,EAAa,cAAe,KAC1DhiB,KAAM,MAIR,GAAI4hB,GAAgBnB,MAAMC,QAAQkB,IAAiBA,EAAaphB,OAAS,EAAG,CAC1E,IAAM0gB,EAASlB,IAAElZ,KAAK8a,EAAagB,OAAO,SAAC1B,GAAD,OAAYA,EAAOnc,KAAOod,KACpE,GAAIjB,EAAQ,CACV,IAAM2B,EAAY7C,IAAEc,SAASd,IAAEhV,IAAIkW,EAAQ,OAAQ,OAC/C2B,IACFT,EAAMpiB,KAAO6iB,IAKnB,OAAOT,KAIPL,GAAiBtB,MAAMC,QAAQqB,IAAkBA,EAAcvhB,OAAS,IAC1EmhB,EAAUI,EAAcra,IAAI,SAACob,GAE3B,IAAI/a,EAAOiY,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,aAAc,KAAKb,cAC1C,CAAC,WAAY,OAAQ,UAAW,UACnCC,SAASna,KACvBA,EAAO,YAGT,IAAMgb,EAAW/C,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,KAAM,KAChDE,EAAuB,CAC3Bje,GAAIge,EACJV,MAAOrC,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,QAAS,KAC/C/a,KAAMA,EACNkb,SAAS,GAGE,YAATlb,IACFib,EAAOE,QAAUlD,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,UAAW,MAGhD,SAAT/a,IACFib,EAAOG,KAAOnD,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,SAAU,MAG5C,WAAT/a,IACFib,EAAO3hB,OAAS2e,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,SAAU,MAI3D,IAAMM,EAASpD,IAAEc,SAASd,IAAEhV,IAAI8X,EAAc,SAAU,KAIxD,GAHAE,EAAOI,OAASA,EAGZvB,GAAiBpB,MAAMC,QAAQmB,IAAkBA,EAAcrhB,OAAS,EAAG,CAC7E,IAAM0gB,EAASlB,IAAElZ,KAAK+a,EAAce,OAAO,SAAC1B,GAAD,OAAYA,EAAOnc,KAAOge,KACrE,GAAI7B,EAAQ,CACV,IAAM+B,EAAU9B,QAAQnB,IAAEhV,IAAIkW,EAAQ,WAAW,IACjD8B,EAAOC,QAAUA,GAIrB,OAAOD,KAIX,IAAMK,EAAqB,CACzBte,GAAIkc,EACJqC,MAAOtD,IAAEc,SAASd,IAAEhV,IAAIqW,EAAgB,QAAS,KACjDkC,QAASvD,IAAEc,SAASd,IAAEhV,IAAIqW,EAAgB,WAAY,KACtDmC,YAAaxD,IAAEc,SAASd,IAAEhV,IAAIqW,EAAgB,cAAe,KAC7DtZ,KAAiF,UAA3EiY,IAAEc,SAASd,IAAEhV,IAAIqW,EAAgB,kBAAmB,KAAKY,cAA4B,QAAU,SACrGR,UAAWA,EACXF,UAAWA,EACXC,aAAcA,GAUhB,OAPIE,IACF2B,EAAS3B,OAASA,GAEhBC,IACF0B,EAAS1B,QAAUA,GAGd0B,2NCzKQI,kMAEQ5C,GACzB,IAAM9b,EAAK+b,IAAS9V,IAAI6V,EAAY,KAAM,KACpChW,EAAOiW,IAAS9V,IAAI6V,EAAY,OAAQ,KAE1C9Y,EAAO+Y,IAAS9V,IAAI6V,EAAY,WAAY,KAChD,OAAQ9Y,GACN,IAAK,gBACL,IAAK,YACH,MACF,QACEA,EAAO,gBAGX,IAAI2b,EAAY,GACVpD,EAAaQ,IAAS9V,IAAI6V,EAAY,oBAAqB,KAQjE,OAPIP,IACFoD,EAAYvD,EAAewD,uBAAuB,CAChDrD,aACAC,YAAa,QAIV,CAACxb,KAAI8F,OAAM9C,OAAM2b,6VCdPE,8kBA0BE1E,EAAqB5Z,QAAQ,CAAC8Z,uPAA3CU,SACA9f,EAAOgL,IAAI8U,EAAM,qBAAsB,IACxCW,MAAMC,QAAQ1gB,IAAyB,IAAhBA,EAAKQ,6BACzByf,gBAIF4D,EAAgB7jB,EAAK,GAErBsjB,EAAQxC,IAAS9V,IAAI6Y,EAAe,QAAS,KAC7CC,EAAWhD,IAAS9V,IAAI6Y,EAAe,WAAY,KAEnDE,EAAmB/Y,IAAI6Y,EAAe,UAAW,IACjDG,EAAUC,KAAKC,aAAaH,GAE5BI,EAAgBnZ,IAAI6Y,EAAe,QAAS,IAC5CO,EAAQH,KAAKI,WAAWF,qBAEvB,CACLb,QACAQ,WACAE,UACAI,8TAIgBL,GAClB,OAAKtD,MAAMC,QAAQqD,GAGHA,EAAiBrc,IAAI,SAAAa,GACnC,IAAI+b,EAAO,GACX,OAAQ/b,EAAI,MACV,IAAK,mBACH+b,EAAOC,IACP,MACF,IAAK,sBACHD,EAAOE,IACP,MACF,IAAK,8BACHF,EAAOG,IACP,MACF,IAAK,qBACHH,EAAOI,IAIX,MAAO,CACLpB,MAAOxC,IAAS9V,IAAIzC,EAAM,QAAS,KACnCoc,SAAUxD,QAAQnW,IAAIzC,EAAM,YAAY,IACxCqc,gBAAiB9D,IAAS9V,IAAIzC,EAAM,qBAAsB,KAC1D+b,KAAMA,KAvBD,sCA6BOO,GAChB,IAAKpE,MAAMC,QAAQmE,GACjB,MAAO,GAGT,IAAMT,EAAQ,GAKd,OAJAS,EAAenb,QAAQ,SAACob,GACtB,IAAMC,EAAOtB,EAAWuB,oBAAoBF,GAC5CV,EAAM1jB,KAAKqkB,KAENX,kNC5GUa,2LAEChb,GAAuC,IAAzBib,IAAyBjG,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,KAAAA,UAAA,GAEzD,GADAkG,MAAMlb,GACFib,EACF,MAAMjb,wKCCL,SAASmb,IACd,wBAAAC,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAA1C,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqBlC,EAAgBmC,gBAFrC,OAEGL,EAFHE,EAAAI,KAGGhD,EAAsC,CAC1Cjb,KAAM4U,EAAWC,KAAKG,yBACtBkJ,QAASP,GAEXD,EAASzC,GAPN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAUHX,EAAUkB,aAAVP,EAAAM,IAVG,yBAAAN,EAAAQ,SAAAZ,EAAA,6LAAP,gBAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,2qCC8BaqH,oaA3BMC,uDAEV,IAAAC,EAAAvC,KAEDwC,EAAO,CAAI,UAAJte,OAAAue,GAAiBzC,KAAK0C,MAAMF,UAKzC,OAJIxC,KAAK0C,MAAMC,OAAOjC,UACpB8B,EAAQ/lB,KAAK,YAIbmmB,EAAAxe,EAAA1B,cAACmgB,EAAA,EAAD,CAAMC,UAAWN,EAAQzd,KAAK,KAAMge,GAAI/C,KAAK0C,MAAMM,KAAMC,QAAS,SAACC,GAC9DX,EAAKG,MAAMC,OAAOjC,WACnBwC,EAAMC,iBACNjC,MAAM,qBAGR0B,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,QACbF,EAAAxe,EAAA1B,cAAA,OAAKE,IAAKod,KAAK0C,MAAMC,OAAOtC,KAAM+C,IAAKpD,KAAK0C,MAAMC,OAAOtD,SAE3DuD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACZ9C,KAAK0C,MAAMC,OAAOtD,yrCCRdgE,oaAbUf,uDAGrB,IAAME,EAAO,CAAI,cAAJte,OAAAof,GAAqBtD,KAAK0C,MAAMF,UAE7C,OACEI,EAAAxe,EAAA1B,cAACmgB,EAAA,EAAD,CAAMC,UAAWN,EAAQzd,KAAK,KAAMge,GAAI/C,KAAK0C,MAAMM,MAChDhD,KAAK0C,MAAMrD,wWCbCkE,uVAGX/H,EAAOC,IAAMzT,OAAO,CACxB0T,IAAK,gBACLC,OAAQ,MACRL,QAAS,CACPkI,mBAAoB,6BAGDhI,EAAKna,oBAAtBua,SACA7f,EAAO6f,EAAS7f,KAChBgf,EAAQgB,IAAEhV,IAAIhL,EAAM,YAAa,4BAE/B,IAAIgF,MAAMhF,mCAEXgf,61CCXL0I,oaAAqBnB,uDAMhB,IAAAC,EAAAvC,KACAwC,qUADAkB,CAAA,GACe1D,KAAK0C,OAApBF,QAEP,OACEI,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAS,gBAAA5e,OAAkBse,EAAQzd,KAAK,MAC9Cke,QAAS,WACPV,EAAKoB,WAGPf,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,OAAKE,IAAKghB,OADZ,kMAUoBL,GAAiBM,sBAAnCxI,SACNxd,OAAOgd,SAASC,KAAhB,+BAAA5W,OAAsDmX,qTA1BpDoI,GAEGK,aAAe,CACpBtB,QAAS,IA2BEiB,qkCCnCTM,oaAA2BzB,uDAMtB,IAAAC,EAAAvC,KACAwC,qUADAwB,CAAA,GACehE,KAAK0C,OAApBF,QAEP,OACEI,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAS,gBAAA5e,OAAkBse,EAAQzd,KAAK,MAC9Cke,QAAS,WACPV,EAAK0B,kBAGPrB,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,OAAKE,IAAKghB,OADZ,0LAUJ/lB,OAAOgd,SAASC,KAAhB,oUAzBEiJ,GAEGD,aAAe,CACpBtB,QAAS,IA0BEuB,u7BC8BAG,oaAjDI5B,uDAER,IAAA6B,qUAAAC,CAAA,GACuCpE,KAAK0C,MAAMjB,WAAlDpC,EADA8E,EACA9E,MAAOQ,EADPsE,EACOtE,SAAUE,EADjBoE,EACiBpE,QAASI,EAD1BgE,EAC0BhE,MAEjC,OACEyC,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,QACbF,EAAAxe,EAAA1B,cAAC2hB,GAAD,CAAc7B,QAAS,CAAC,WAAW,cAAe,OAAQ,UAE1DI,EAAAxe,EAAA1B,cAAC4hB,GAAD,CAAoB9B,QAAS,CAAC,WAAW,cAAe,OAAQ,UAEhEI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAA,KAAGoY,KAAK,KAAI8H,EAAAxe,EAAA1B,cAAA,OAAKE,IAAK2hB,IAAWzB,UAAU,UAC3CF,EAAAxe,EAAA1B,cAAA,UACG2c,GAEHuD,EAAAxe,EAAA1B,cAAA,UACGmd,GAEH+C,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,OACZ/C,EAAQtc,IAAI,SAACkf,EAAQ6B,GACpB,OACE5B,EAAAxe,EAAA1B,cAAC+hB,GAAD,CAAQzB,KAAI,wBAAA9e,OAA0Bye,EAAOhC,iBACrC6B,QAAS,CAAC,MAAO,QACjBG,OAAQA,EACR1a,IAAKuc,QAMrB5B,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACZ3C,EAAM1c,IAAI,SAACqd,GACV,IAAIkC,EAAI,qBAAA9e,OAAwB4c,EAAKhgB,IAIrC,MAHkB,cAAdggB,EAAKhd,OACPkf,EAAO,mCAGPJ,EAAAxe,EAAA1B,cAACgiB,GAAD,CAAY1B,KAAMA,EAAMR,QAAS,CAAC,QAASnD,MAAOyB,EAAKla,u2BCrCxD+d,oaAbMrC,uDAGjB,OACEM,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAU,UAChBF,EAAAxe,EAAA1B,cAAA,w5BCGR,IAmBMkiB,oaAAsBtC,kEAGpBtC,KAAK0C,MAAMmC,4BACb7E,KAAK0C,MAAMmC,8DAKb,OAAK7E,KAAK0C,MAAMjB,UAKdmB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBAAgBgC,MAAO,CACpCC,gBAAe,QAAA7gB,OAAU8gB,KAAV,MACfC,eAAgB,UAEhBrC,EAAAxe,EAAA1B,cAACwiB,GAAD,CAAMzD,UAAWzB,KAAK0C,MAAMjB,YAC5BmB,EAAAxe,EAAA1B,cAACyiB,GAAD,OATK,4CAeEC,eA5CS,SAACC,GACvB,MAAO,CACL5D,UAAW4D,EAAM5D,YAIM,SAACD,EAAoBkB,GAC9C,MAAO,CACLmC,2BAA4B,WAC1BrD,EAASL,QAmCAiE,CAGbR,q8BC9CIU,oaAAmBhD,uDASd,IAAAiD,qUAAAC,CAAA,GACoDxF,KAAK0C,OAAzDrD,EADAkG,EACAlG,MAAOmD,EADP+C,EACO/C,QAAS9B,EADhB6E,EACgB7E,SAAUuC,EAD1BsC,EAC0BtC,QAASwC,EADnCF,EACmCE,UAEtCpF,EAAO,KAKX,OAJIoF,IACFpF,EAAOuC,EAAAxe,EAAA1B,cAAA,OAAKE,IAAK6iB,KAIjB7C,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAW4C,KAAW,aAAclD,EAAS,CAAC9B,SAAYA,IAC1DuC,QAAS,SAACC,GACJxC,EACFwC,EAAMC,iBAGRF,EAAQC,KAGf7C,EACAhB,0CA5BHiG,GAEGxB,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cA4BEqC,q2CClCTK,oaAAoBrD,uDAUtB,OAAOM,EAAAxe,EAAA1B,cAACkjB,GAADC,GAAA,GAAgB7F,KAAK0C,MAArB,CAA4BF,QAAO,CAAG,eAAHte,OAAA4hB,GAAqB9F,KAAK0C,MAAMF,oDAVxEmD,GAEG7B,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cAQE0C,8zBCoBAI,oaAnCKzD,uDAET,IAAAiD,EAC4CvF,KAAK0C,MAAjDsD,EADAT,EACAS,eAAgBC,EADhBV,EACgBU,KAAMC,EADtBX,EACsBW,mBAE7B,OACEtD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,cACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,YACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBAAf,oBACAF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACVqD,wBAAyB,CACvBC,OAAQJ,KAGfpD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,wBACAkgB,EAAAxe,EAAA1B,cAAA,YAAOujB,EAAKrf,OAEdgc,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,4BACAkgB,EAAAxe,EAAA1B,cAAA,YAAOujB,EAAKI,SAGhBzD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,QAAQ4D,QAASiD,0NChC7BK,iMAEMC,GACvB,IAAM5J,EAAkC,iBAAb4J,EAAwBzkB,KAAKC,MAAMwkB,GAAYA,EAE1E,MAAO,CACL1lB,GAAI+b,IAAS9V,IAAI6V,EAAY,OAC7BhW,KAAI,GAAA1C,OAAK6C,IAAI6V,EAAY,aAArB,KAAA1Y,OAAqC6C,IAAI6V,EAAY,YACzDyJ,MAAOtf,IAAI6V,EAAY,SACvB6J,KAA4C,SAAtC5J,IAAS9V,IAAI6V,EAAY,SAC/B8J,OAAgD,SAAxC7J,IAAS9V,IAAI6V,EAAY,m+BCLlB+J,+PAEqBzL,iHACGA,GAAlCyF,oBAAiBtF,cAClBF,0EAEwCwF,iCAK3B1F,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA+K,EAAiB7K,IAAEhV,IAAI8U,EAAM,0CAA2C,4BAEtEG,kCAGD4K,sLAGmBjG,uGACpBxF,gJAUgBwF,sGAWH1F,EAAqB5Z,QAAQ,CAAC8Z,oBAA3CU,SACAgL,EAAa9K,IAAEhV,IAAI8U,EAAM,2BAA4B,MACrDiL,EAAoB/K,IAAEhV,IAAI8U,EAAM,yBAA0B,MAC1DkL,EAAWhL,IAAEhV,IAAI8U,EAAM,wBAAyB,MAEjDgL,GAAeC,GAAsBC,wBAClC/K,kCAGD,CACLqD,MAAOtD,IAAEhV,IAAI+f,EAAmB,OAAQ,IACxCjH,SAAU9D,IAAEhV,IAAIggB,EAAU,QAAS,IACnCpG,gBAAiB5E,IAAEhV,IAAI+f,EAAmB,KAAM,IAChDd,eAAgBjK,IAAEhV,IAAI+f,EAAmB,iBAAkB,IAC3Db,KAAMM,GAAWS,kBAAkBH,8LAIND,uGACzBzL,6JAU6ByL,4dA8BhB3L,EAAqB5Z,QAAQ,CAAC8Z,oBAA3CU,SAEAgL,EAAa9K,IAAEhV,IAAI8U,EAAM,2BAA4B,IACrDoL,EAAiBlL,IAAEhV,IAAI8U,EAAM,qCAAsC,IACpEgL,GAAeI,wBACZjL,gBAGFjgB,EAAqC,CACzCsjB,MAAOtD,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,qBAAsB,KAC9DC,UAAWnL,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,8BAA+B,KACjEoK,KAAMM,GAAWS,kBAAkBH,GACnCM,sBAAqF,SAA9DpL,IAAEhV,IAAIkgB,EAAgB,0BAA2B,SACxEG,WAAY,CACVzG,gBAAiB5E,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,mBAAoB,KACtEI,mBAAoBtL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,qBAAsB,KAC3EK,aAAcvL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,KAAM,KACrDM,eAAgBxL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,OAAQ,KACzDO,UAAW,CACT1mB,GAAIib,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,YACrCrgB,KAAMmV,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,gBAAiB,KACxDZ,MAAOtK,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,iBAAkB,KAC1DR,MAAM,EACNC,QAAQ,GAEVxmB,OAAQ6b,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,sBAAuB,KAAKjJ,cAAcyJ,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiC5L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,qBAAsB,KACxFW,cAAe7L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,8BAA+B,KAC/EY,kBAAmB9L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,kCAAmC,MAEzFxH,UAAWvD,EAAewD,uBAAuB,CAC/CrD,WAAYN,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,oBAAqB,KAClE3K,YAAaP,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,aAAc,OAE9Da,gBAAiB/L,IACdgM,QAAQhM,IAAEhV,IAAIkgB,EAAgB,kBAAmB,KACjDxjB,IAAI,SAACa,GAOJ,MAN8C,CAC5CsW,KAAMmB,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,OAAQ,KACrC0jB,SAAUjM,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,WAAY,KAC7C2jB,SAAUlM,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ6b,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,SAAU,4BAO5CvI,6LAGyBmf,qHAM8BA,GAAvDoM,iBAActK,eAAYkL,eAAY7M,cACvC8M,EAAgBtqB,OAAOuqB,KAAKrmB,KAAKsmB,UAAUH,IAE3C/M,+DAE6BmM,6BAA+BtK,6BAA6BmL,mDAM5ElN,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACcE,IAAEhV,IAAI8U,EAAM,gDAAiD,4BAEzEG,gMAI6Bd,2HAMiCA,GAA/DoM,iBAAcgB,mBAAgBC,mBAAgBlN,cAEjDiN,EAAe/rB,SAAWgsB,EAAehsB,6BACrCyf,SAIR,IADIwM,EAAY,GACPhE,EAAQ,EAAGA,EAAQ8D,EAAe/rB,OAAQioB,IAC3CxH,EAAasL,EAAe9D,GAC5B0D,EAAaK,EAAe/D,GAC5B2D,EAAgBtqB,OAAOuqB,KAAKrmB,KAAKsmB,UAAUH,IAC3CO,EAJoD,mBAAAvkB,OAKhD8Y,EALgD,yCAAA9Y,OAKEojB,EALF,oBAAApjB,OAKiC8Y,EALjC,oBAAA9Y,OAK8DikB,EAL9D,+BAS1DK,EAAU/rB,KAAKgsB,UAGbtN,4BAEJqN,EAAUzjB,KAAK,wBAIIkW,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACcE,IAAEhV,IAAI8U,EAAM,OAAQ,6BAEhCG,2LAIuBd,mHACOA,GAA/BoM,iBAAcjM,cACfF,qEAEmCmM,2DAKtBrM,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SACfd,IAAEhV,IAAI8U,EAAM,gEAAiE,OACzEjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,iDAAkD,OACjF3b,GAAW0a,wBACRoB,kCAED,CAACpB,6MAGkCM,mHACJA,GAA/BoM,iBAAcjM,cACfF,+FAE6DmM,2DAKhDrM,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SACfd,IAAEhV,IAAI8U,EAAM,0FAA2F,OACnGjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,2EAA4E,OAC3G3b,GAAW0a,wBACRoB,kCAED,CAACpB,6MAGkCM,mHACJA,GAA/BoM,iBAAcjM,cACfF,0EAEwCmM,2DAK3BrM,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SACfd,IAAEhV,IAAI8U,EAAM,qEAAsE,OAC9EjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,sDAAuD,OACtF3b,GAAW0a,wBACRoB,kCAED,CAACpB,0MAG+BM,mHACDA,GAA/BoM,iBAAcjM,cACfF,uEAEqCmM,2DAKxBrM,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,kEAAmE,OACnGjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,mDAAoD,OACnF3b,GAAW0a,wBACRoB,kCAED,CAACpB,0MAG+BM,mHACDA,GAA/BoM,iBAAcjM,cACfF,sEAEoCmM,2DAKvBrM,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,iEAAkE,OAClGjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,kDAAmD,OAClF3b,GAAW0a,wBACRoB,kCAED,CAACpB,sMAG2B8N,mGAC7BvN,gEACmCuN,2JAUtBzN,EAAqB5Z,QAAQ,CAAC8Z,oBAA3CU,SAGA9f,EAAOggB,IAAEhV,IAAI8U,EAAM,mCAAoC,IACxDW,MAAMC,QAAQ1gB,wBACX,wCAGDA,EAAK0H,IAAI,SAACa,GACf,IAAIqkB,EAAM,GAOV,OANAA,EAAG,GAAS5M,IAAEhV,IAAIzC,EAAM,KAAM,IAC9BqkB,EAAG,KAAW5M,IAAEhV,IAAIzC,EAAM,OAAQ,IAClCqkB,EAAG,OAAa5M,IAAEhV,IAAIzC,EAAM,sBAAuB,IACnDqkB,EAAG,YAAkB5M,IAAEhV,IAAIzC,EAAM,cAAe,IAChDqkB,EAAG,kBAAwB5M,IAAEhV,IAAIzC,EAAM,oBAAqB,IAC5DqkB,EAAG,QAAc5M,IAAEhV,IAAIzC,EAAM,UAAW,IACjCqkB,qvBCvUQC,+MAEoBC,GACrC,IAAMX,EAAqC,CACzC1K,UAAWqL,EAAarL,UACxBF,UAAWuL,EAAavL,UACxBC,aAAcsL,EAAatL,aAC3BuL,WAAYD,EAAa/kB,MA0B3B,MAvB0B,UAAtB+kB,EAAa/kB,MAAoB0Y,MAAMC,QAAQoM,EAAapL,UAC9DyK,EAAWzK,OAASoL,EAAapL,OAAOha,IAAI,SAAC0a,GAC3C,IAAIpiB,EAAOoiB,EAAMpiB,KAKjB,OAJIA,GAAQggB,IAAEgN,SAAShtB,KACrBA,EAAOA,EAAKitB,QAGP,CACLloB,GAAIqd,EAAMrd,GACV/E,KAAMA,MAKc,WAAtB8sB,EAAa/kB,MAAqB0Y,MAAMC,QAAQoM,EAAanL,WAC/DwK,EAAWxK,QAAUmL,EAAanL,QAAQja,IAAI,SAACsb,GAC7C,MAAO,CACLje,GAAIie,EAAOje,GACXke,QAASD,EAAOC,YAKfkJ,mDAGuBzI,GAC9B,IAAIwJ,GAAwB,EAQ5B,OAPAxJ,EAAUha,QAAQ,SAAC2Z,GAAa,IAAA8J,EAAAC,GAAA,GACQ/J,GAA/B9B,EADuB4L,EACvB5L,UAAWC,EADY2L,EACZ3L,cAEbD,GAAaC,IAChB0L,GAAwB,KAGrBA,yDAG6BnB,GACpC,IAAIsB,GAAS,EAMb,OALAtB,EAAgBriB,QAAQ,SAAC4jB,GACO,gBAA1BA,EAAenpB,SACjBkpB,GAAS,KAGNA,8CAIPlO,GACuC,IAAAiB,EAAAgN,GAAA,GACGjO,GAAnCoO,EADgCnN,EAChCmN,iBAAkB7J,EADctD,EACdsD,UAEnB8J,EAAe9J,EAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAASte,KAAOwoB,EAAiBxoB,KAClF2oB,EAAkBF,IAAiB9J,EAAUljB,OAAS,EAEtDmtB,EAAgB,CACpBH,aAAcA,EACdI,qBAAsB,GACtBC,YAAa,EACbC,UAAU,EACVC,WAAW,EACX1sB,OAAQ,IAIV,GAA8B,UAA1BksB,EAAiBxlB,KASnB,OARI2lB,EAEFC,EAAcG,UAAW,EAGzBH,EAAcE,YAAcF,EAAcH,aAAe,EAGpDG,EAIT,GAA8B,WAA1BJ,EAAiBxlB,KAAmB,CACtC,IAAKwlB,EAAiB5L,QACpB,MAAM,IAAI3c,MAAM,2CAGlB,IAAMgpB,EAAcT,EAAiB5L,QAAQsM,KAAK,SAACjL,GACjD,OAAOA,EAAOC,UAEhB,IAAK+K,EACH,MAAM,IAAIhpB,MAAM,kDAIlB,GAAyB,WAArBgpB,EAAYjmB,KAAmB,CAEjC,IAAK,IAAIzH,EAAIqtB,EAAcH,aAAe,EAAGltB,EAAIojB,EAAUljB,OAAQF,IACjEqtB,EAAcC,qBAAqBltB,KAAKJ,GAG1CqtB,EAActsB,OAAS2sB,EAAY3sB,QAAU,GAC7CssB,EAAcG,UAAW,EAW3B,GARyB,YAArBE,EAAYjmB,OACd4lB,EAAcI,WAAY,GAGH,aAArBC,EAAYjmB,MAAwB2lB,IACtCC,EAAcE,YAAcF,EAAcH,aAAe,GAGlC,SAArBQ,EAAYjmB,KAAiB,CAE/B,IAAMmmB,EAAWF,EAAY7K,KAM7B,GALAwK,EAAcE,YAAcnK,EAAU+J,UAAU,SAACpK,GAC/C,OAAOA,EAASte,KAAOmpB,IAIrBP,EAAcE,aAAeF,EAAcH,aAC7C,MAAM,IAAIxoB,MAAM,2CAIlB,GAAI2oB,EAAcE,YAAcF,EAAcH,aAAe,EAE3D,IADA,IAAIW,EAASR,EAAcH,aAAe,EACnCW,EAASR,EAAcE,aAC5BF,EAAcC,qBAAqBltB,KAAKytB,GACxCA,IASN,OAJIT,IAEFC,EAAcG,UAAW,GAEpBH,EAGT,MAAM,IAAI3oB,MAAM,2RClKCopB,mMAEQC,GACzB,OAAOrC,KAAQqC,GAAW3mB,IAAI,SAACmZ,GAC7B,OAAOuN,EAAwBpJ,oBAAoBnE,iDAI5BA,GACzB,MAAO,CACL9b,GAAI+b,IAAS9V,IAAI6V,EAAY,OAC7BhW,KAAMiW,IAAS9V,IAAI6V,EAAY,SAC/B2C,YAAa1C,IAAS9V,IAAI6V,EAAY,2OCZvByN,kMAEOD,GACxB,OAAOrC,KAAQqC,GAAW3mB,IAAI,SAACmZ,GAC7B,OAAOyN,EAAiBtJ,oBAAoBnE,iDAIrBA,GACzB,MAAO,CACL9b,GAAI+b,IAAS9V,IAAI6V,EAAY,OAC7B0N,QAASzN,IAAS9V,IAAI6V,EAAY,YAClCoG,KAAMnG,IAAS9V,IAAI6V,EAAY,u+BCIhB2N,8QAEoCC,mHAKSA,GAAvD/K,cAAWgL,8BAA2BpP,cAGvCqP,EAAa,GACnBjL,EAAUha,QAAQ,SAAC2Z,GAEjB,GAAKA,EAAS7B,cAAiB6B,EAAS9B,WAKlB,WAAlB8B,EAAStb,KAAb,CAKA,IAAM4Z,EAAU0B,EAAS1B,QACzB,IAAKA,IAAYlB,MAAMC,QAAQiB,GAC7B,MAAM,IAAI3c,MAAM,+DAIlB2c,EAAQjY,QAAQ,SAACsZ,GACf,GAAKA,EAAOC,QAAZ,CAIA,IAAMG,EAASJ,EAAOI,QACjBA,GAAUX,OAAOC,SAASU,IAAW,GAI1CuL,EAAWjuB,KAAK0iB,SAOY,KAH1BwL,EAAmBC,KAAKF,IAGTnuB,+DAKfisB,EAAY,GAClBmC,EAAiBllB,QAAQ,SAAC0Z,GACxB,IAAMhE,EAAK,yBAAAjX,OACKib,EADL,oCAAAjb,OAC8Cib,EAD9C,mCAAAjb,OACsFumB,EADtF,yBAKXjC,EAAU/rB,KAAK0e,KAGXA,4BAENqN,EAAUzjB,KAAK,uBAGIkW,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,yBAAlDQ,SACc9U,IAAI8U,EAAM,OAAQ,6BAE9BG,2LAIuBwO,mHACCA,GAAzB5P,SAAMiQ,gBACP1P,mDAEoBP,8BAAwBiQ,GAAe,qfAoChC5P,EAAqB5Z,QAAQ,CAAC8Z,oBAAzD2P,SACAC,EAAuBhkB,IAAI+jB,EAAoB,4BAA6B,4BAE1E9O,gBAGFjgB,EAAuB,CAC3B+E,GAAI+b,IAAS9V,IAAIgkB,EAAsB,KAAM,KAC7CnQ,KAAMiC,IAAS9V,IAAIgkB,EAAsB,OAAQ,KACjD/C,SAAUnL,IAAS9V,IAAIgkB,EAAsB,WAAY,KACzD9C,SAAUpL,IAAS9V,IAAIgkB,EAAsB,WAAY,KACzD7qB,OAAQ2c,IAAS9V,IAAIgkB,EAAsB,SAAU,KACrD3tB,OAAQyf,IAAS9V,IAAIgkB,EAAsB,SAAU,KACrDvD,UAAWjB,GAAWS,kBAAkBjgB,IAAIgkB,EAAsB,cAClEC,iBAAkB9N,QAAQnW,IAAIgkB,EAAsB,2BAA2B,IAC/EE,4BAA6BpO,IAAS9V,IAAIgkB,EAAsB,+BAAgC,KAChGN,0BAA2B5N,IAAS9V,IAAIgkB,EAAsB,6BAA8B,KAC5FG,8BAA+BrO,IAAS9V,IAAIgkB,EAAsB,8CAA+C,KACjHtL,UAAWvD,EAAewD,uBAAuB,CAC/CrD,WAAYQ,IAAS9V,IAAIgkB,EAAsB,oBAAqB,KACpEzO,YAAaO,IAAS9V,IAAIgkB,EAAsB,aAAc,OAEhEI,mBAAoBhB,GAAwBiB,oBAAoBrkB,IAAIgkB,EAAsB,qBAAsB,KAChHM,YAAahB,GAAiBiB,mBAAmBvkB,IAAIgkB,EAAsB,cAAe,wBAGrFhvB,sMAGkCyuB,6HACkCA,GAApE5P,SAAM0N,mBAAgBC,mBAAgBlN,cAAWwP,gBAEpDvC,EAAe/rB,SAAWgsB,EAAehsB,6BACrCyf,SAIR,IADIwM,EAAY,GACPhE,EAAQ,EAAGA,EAAQ8D,EAAe/rB,OAAQioB,IAC3CxH,EAAasL,EAAe9D,GAC5B0D,EAAaK,EAAe/D,GAC5B2D,EAAgBtqB,OAAOuqB,KAAKrmB,KAAKsmB,UAAUH,IAC7CO,EAJsD,mBAAAvkB,OAKhD8Y,EALgD,sCAAA9Y,OAMrD0W,EANqD,uBAAA1W,OAO/C8Y,EAP+C,uBAAA9Y,OAQ/CikB,EAR+C,wBAAAjkB,OAS9C2mB,GAAe,GAT+B,+BAc1DrC,EAAU/rB,KAAKgsB,UAGbtN,4BAEJqN,EAAUzjB,KAAK,wBAIIkW,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACc9U,IAAI8U,EAAM,OAAQ,6BAE9BG,8LAI0BwO,mHAMiBA,GAA5C5P,SAAMxd,WAAQie,cAAWwP,gBAC5B1P,yDAEyBP,yBAAmBxd,8BAA0BytB,GAAe,+CAMtE5P,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACD9U,IAAI8U,EAAM,mCAAoC,4BAC3CG,kCAED,CAACpB,gMAGsB4P,iHACaA,GAApC5P,SAAMS,cAAWwP,gBAElB1P,qDAEmBP,8BAAwBiQ,GAAe,+CAM7C5P,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACD9U,IAAI8U,EAAM,+BAAgC,4BACvCG,kCAED,CAACpB,iMAGuB4P,iHACVA,GAAde,WACDpQ,uCAEQoQ,kFAQmBtQ,EAAqB5Z,QAAQ,CAAC8Z,oBAAzD2P,SACAU,EAAiBzkB,IAAI+jB,EAAoB,gBAAiB,4BAExD9O,gBAEF8E,EAAOtB,EAAWuB,oBAAoByK,qBAErC1K,mNAIP0J,mHAOqDA,GAA9C5P,SAAMS,cAAWoQ,iBAAcnB,YAEhCnP,gFAGAP,iCACQ/c,OAAOuqB,KAAKrmB,KAAKsmB,UAAUoD,8BAChCnB,iDAOUrP,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACD9U,IAAI8U,EAAM,uDAAwD,4BAC/DG,kCAED,CAACpB,myBCnOL,SAAS8Q,GAAiC9E,GAC/C,sBAAA+E,EAAAC,GAAAvK,mBAAAC,KAAO,SAAAuK,EAAOrK,GAAP,IAAAzlB,EAAA,OAAAslB,mBAAAK,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cAAAiK,EAAAlK,KAAA,EAAAkK,EAAAjK,KAAA,EAGgB8E,GAAyBoF,oBAAoBnF,GAH7D,OAGG7qB,EAHH+vB,EAAA/J,KAIHP,GAQmDQ,EARDjmB,EAS/C,CACL+H,KAAM4U,EAAWK,cAAcE,oCAC/B+I,aAfK8J,EAAAjK,KAAA,gBAAAiK,EAAAlK,KAAA,EAAAkK,EAAA7J,GAAA6J,EAAA,SAOH5K,MAAK4K,EAAA7J,IAPF,yBAAA6J,EAAA3J,OAYF,IAAkDH,GAZhD6J,EAAA,iBAAP,gBAAAG,GAAA,OAAAL,EAAAzuB,MAAA8iB,KAAAhF,YAAA,GA0DK,SAASiR,GAA0B3C,GACxC,sBAAA4C,EAAAN,GAAAvK,mBAAAC,KAAO,SAAA6K,EAAO3K,EAAU4K,GAAjB,IAAAC,EAAAjF,EAAAkF,EAAA/C,EAAAK,EAAAD,EAAAE,EAAA,OAAAxI,mBAAAK,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,UACCwK,EAAuBD,IACvBhF,EAAaiF,EAAUG,mBAAmBC,gBAAgBrF,WAF3D,CAAAmF,EAAA1K,KAAA,eAAA0K,EAAAG,OAAA,wBAAAJ,EAYD1D,GAAmB+D,oBAAoB,CACzCrD,mBACA7J,UAAW2H,EAAW3H,YANtB8J,EARG+C,EAQH/C,aACAK,EATG0C,EASH1C,YACAD,EAVG2C,EAUH3C,qBACAE,EAXGyC,EAWHzC,SAOEF,EAAqBptB,OAAS,GAChCilB,EAAS,CACP1d,KAAM4U,EAAWK,cAAcK,2CAC/BuQ,yBAKAC,EAAcL,GAChB/H,EAAS,CACP1d,KAAM4U,EAAWK,cAAcI,uCAC/ByQ,gBA7BC2C,EAAA1K,KAAA,EAkCC+K,GAA0BR,IAAYrQ,IAAE6O,KAAF,CAAQrB,GAARrlB,OAAA2oB,GAAyBlD,GAAzB,CAA+CC,MAlCtF,OAoCDC,GACFlP,EAAQmS,8BAA8B1F,EAAWG,gBArC9C,yBAAAgF,EAAApK,SAAAgK,MAAP,gBAAAY,EAAAC,GAAA,OAAAd,EAAAhvB,MAAA8iB,KAAAhF,YAAA,YA6Ka4R,2FAAf,SAAAK,EAAyCZ,EAAsBa,GAA/D,IAAA9F,EAAA/L,EAAA,OAAAgG,mBAAAK,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UACQuF,EAAaiF,EAAUG,mBAAmBC,gBAAgBrF,WADlE,CAAA+F,EAAAtL,KAAA,eAAAsL,EAAAT,OAAA,wBAAAS,EAAAtL,KAAA,EAM0B0B,GAAiBM,eAN3C,cAMQxI,EANR8R,EAAApL,KAAAoL,EAAAvL,KAAA,EAAAuL,EAAAtL,KAAA,EAQU8E,GAAyBiG,0BAA0B,CACvDtF,aAAcF,EAAWE,aACzBgB,eAAgB4E,EAAgBzpB,IAAI,SAAC+gB,GAAD,OAAW4C,EAAW3H,UAAU+E,GAAO1jB,KAC3EynB,eAAgB2E,EAAgBzpB,IAAI,SAAC+gB,GAAD,OAAWoE,GAAmBwE,gCAAgChG,EAAW3H,UAAU+E,MACvHnJ,cAZN,OAAA8R,EAAAtL,KAAA,iBAAAsL,EAAAvL,KAAA,GAAAuL,EAAAlL,GAAAkL,EAAA,SAgBIjM,MAAMiM,EAAAlL,GAAMhD,SAhBhB,yBAAAkO,EAAAhL,SAAA8K,EAAA,s9BC5RMI,oaAAe/K,uDASV,IAAAiD,qUAAA+H,CAAA,GACmDtN,KAAK0C,OAAxDrD,EADAkG,EACAlG,MAAOQ,EADP0F,EACO1F,SAAU0N,EADjBhI,EACiBgI,iBAAkBC,EADnCjI,EACmCiI,SAE1C,OACE5K,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAU,UAChBF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,cACbF,EAAAxe,EAAA1B,cAAA,KAAGoY,KAAK,KAAI8H,EAAAxe,EAAA1B,cAAA,OAAKE,IAAK2hB,IAAWzB,UAAU,WAE7CF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,iBACZyK,GACC3K,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBACbF,EAAAxe,EAAA1B,cAAA,QAAMogB,UAAU,YAAY0K,GAC5B5K,EAAAxe,EAAA1B,cAAC2hB,GAAD,QAINzB,EAAAxe,EAAA1B,cAAA,UAAK2c,GACLuD,EAAAxe,EAAA1B,cAAA,UAAKmd,2CA1BPwN,GAEGvJ,aAAe,CACpBzE,MAAO,GACPQ,SAAU,GACV2N,SAAU,GACVD,kBAAkB,GA0BPF,yvCCjCf,IA6BMI,oaAAuBnL,kEAEP,IAAAiD,EAAAmI,GAAA,GAC6C1N,KAAK0C,OAA7D/B,EADW4E,EACX5E,iBACPgN,EAFkBpI,EACMoI,iCACQhN,oCAGzB,IAAAiN,EAAAF,GAAA,GAC6C1N,KAAK0C,MAAMmL,YAAxDxO,EADAuO,EACAvO,MAAOQ,EADP+N,EACO/N,SAAUmG,EADjB4H,EACiB5H,eAAgBC,EADjC2H,EACiC3H,KADjC6H,EAAAJ,GAAA,GAEiE1N,KAAK0C,OAAtE/B,EAFAmN,EAEAnN,gBAAiBoN,EAFjBD,EAEiBC,yCAExB,OAAI9H,EAKFrD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAUA,EAAU2N,SAAUvH,EAAKrf,OAEzDgc,EAAAxe,EAAA1B,cAACurB,GAAD,CAAOjI,eAAgBA,EAChBC,KAAMA,EACNC,mBAAoB,WAClB6H,EAAyCpN,MAGlDiC,EAAAxe,EAAA1B,cAACyiB,GAAD,OAbK,4CAmBEC,eA5DS,SAACC,GACvB,MAAO,CACLwI,WAAYxI,EAAMmH,mBAAmBqB,aAId,SAACrM,EAAoBkB,GAC9C,MAAO,CACLiL,gCADK,SAC2BhN,GAC9Ba,EFEC,SAAqCb,GAC1C,OAAAS,EAAAwK,GAAAvK,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAzlB,EAAA,OAAAslB,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgB8E,GAAyBuH,eAAevN,GAHxD,OAGG5kB,EAHH4lB,EAAAI,KAIHP,GAQ8CQ,EARDjmB,EAS1C,CACL+H,KAAM4U,EAAWK,cAAcC,+BAC/BgJ,aAfKL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOHT,MAAKS,EAAAM,IAPF,yBAAAN,EAAAQ,OAYF,IAA6CH,GAZ3CT,EAAA,iBAAP,SAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,IAAAoG,EEHa+M,CAA4BxN,KAEvCoN,yCAJK,SAIoCpN,GACvCa,EFoBC,SAAoCb,GACzC,OAAAyN,EAAAxC,GAAAvK,mBAAAC,KAAO,SAAA+M,EAAO7M,GAAP,IAAAnG,EAAAT,EAAA,OAAAyG,mBAAAK,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,cAAAyM,EAAA1M,KAAA,EAAA0M,EAAAzM,KAAA,EAIqB0B,GAAiBM,eAJtC,cAIGxI,EAJHiT,EAAAvM,KAAAuM,EAAAzM,KAAA,EAOgB8E,GAAyB4H,2BAA2B,CAAC5N,kBAAiBtF,cAPtF,OAOGT,EAPH0T,EAAAvM,KAUHpH,EAAQ6T,+BAA+B5T,GAVpC0T,EAAAzM,KAAA,iBAAAyM,EAAA1M,KAAA,GAAA0M,EAAArM,GAAAqM,EAAA,SAcHpN,MAAKoN,EAAArM,IAdF,yBAAAqM,EAAAnM,SAAAkM,EAAA,kBAAP,SAAAI,GAAA,OAAAL,EAAAlxB,MAAA8iB,KAAAhF,YAAA,IAAAoT,EErBaG,CAA2B5N,OAgD3ByE,CAGbqI,gwCC/DmBiB,oaAAoBpM,uDAE9B,IAAAiD,EAAAoJ,GAAA,GACoC3O,KAAK0C,OAAzCtD,EADAmG,EACAnG,SAAUwP,EADVrJ,EACUqJ,YAAapK,EADvBe,EACuBf,MAE9B,OACE5B,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,eACZ9C,KAAK6O,WAAWzP,GACjBwD,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAU,MACVpC,UAAWtB,EAAS7B,aACpB0F,QAAS,SAACC,GACR0L,EAAYxP,KAEnBoF,EAAM,EALT,KAKcpF,EAASC,2CAMlBD,GAAoB,IAAA8J,EAAAyF,GAAA,GACoBvP,GAA1C5B,EADsB0L,EACtB1L,UAAWF,EADW4L,EACX5L,UAAWC,EADA2L,EACA3L,aAE7B,OAAIC,EAEAoF,EAAAxe,EAAA1B,cAAA,OAAKE,IAAKksB,OAITvR,EAMDD,GAAaC,EAEbqF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,gCAKfF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,gCAXXF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,8/BCbNiM,oaAlBOzM,uDAEX,IAAAiD,qUAAAyJ,CAAA,GAC8BhP,KAAK0C,OAAnCjD,EADA8F,EACA9F,UAAWmP,EADXrJ,EACWqJ,YAElB,OACEhM,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SAAf,cACAF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACZrD,EAAUhc,IAAI,SAAC2b,EAAUoF,GACxB,OAAO5B,EAAAxe,EAAA1B,cAACusB,GAAD,CAAa7P,SAAUA,EAAUwP,YAAaA,EAAa3mB,IAAKmX,EAASte,GAAI0jB,MAAOA,04CCRjG0K,oaAAmB5M,uDAUrB,OAAOM,EAAAxe,EAAA1B,cAACkjB,GAADuJ,GAAA,GAAgBnP,KAAK0C,MAArB,CAA4BF,QAAO,CAAG,cAAHte,OAAAkrB,GAAoBpP,KAAK0C,MAAMF,oDAVvE0M,GAEGpL,aAAe,CACpBzE,MAAO,GACPqB,UAAU,EACV8B,QAAS,GACTS,QAAS,cAQEiM,k/CCuOAG,oaAhPY/M,uDAEhB,IAAAiD,EAAA+J,GAAA,GACuBtP,KAAK0C,OAA5BtD,EADAmG,EACAnG,SAAUoF,EADVe,EACUf,MAEjB,OACE5B,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZ0B,EAAM,EADT,KACcpF,EAASE,SAEvBsD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,eACZ1D,EAASG,aAGXS,KAAKuP,cAAcnQ,GACnBY,KAAKwP,iBAAiBpQ,0CAKfA,GAAoB,IACzBqQ,EADyBH,GAAA,GACAtP,KAAK0C,OAA9B+M,kBACP,GAAsB,WAAlBrQ,EAAStb,KAAb,CAIA,IAAM4Z,EAA+B3B,IAAEhV,IAAIqY,EAAU,UAAW,MAChE,IAAK1B,EACH,OAAO,KAIT,IAAIuB,EAAU,KACRyQ,EAAehS,EAAQsM,KAAK,SAACjL,GAAD,OAAYA,EAAOC,UAUrD,OATI0Q,GAAgBA,EAAazQ,UAC/BA,EACE2D,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,qBACAkgB,EAAAxe,EAAA1B,cAAA,OAAKyjB,wBAAyB,CAACC,OAAQsJ,EAAazQ,aAMxD2D,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZpF,EAAQja,IAAI,SAACsb,EAAQyF,GACpB,OAAQA,GACN,KAAK,EACH,OAAO5B,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAON,EAAOX,MAAOnW,IAAK8W,EAAOje,GAAI0hB,QAAS,CAAC,QAASS,QAAS,WAClFwM,EAAkB1Q,MAEtB,QACE,OAAO6D,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAON,EAAOX,MAAOnW,IAAK8W,EAAOje,GAAI0hB,QAAS,CAAC,QAASS,QAAS,WACnFwM,EAAkB1Q,UAK3BE,6CAKUG,GAAoB,IAC5BwQ,EAD4BN,GAAA,GACJtP,KAAK0C,OAA7BkN,iBACP,GAAsB,UAAlBxQ,EAAStb,KAAb,CAIA,IAAM2Z,EAA6B1B,IAAEhV,IAAIqY,EAAU,SAAU,MAC7D,IAAK3B,EACH,OAAO,KAGT,IAAMoS,EAAgB,GAKtB,OAJApS,EAAOhY,QAAQ,SAAC0Y,GACd0R,EAAc1R,EAAMrd,IAAMqd,EAAMpiB,MAAQ,KAGnC6mB,EAAAxe,EAAA1B,cAACotB,GAAA,EAAD,CACLD,cAAeA,EACfE,SAAU,SAAAC,GACR,IAAIC,EAAS,GAiCb,OAhCAxS,EAAOhY,QAAQ,SAAC0Y,GAAuB,IAAA+R,EAAAZ,GAAA,GACcnR,GAA5Crd,EAD8BovB,EAC9BpvB,GAAIgD,EAD0BosB,EAC1BpsB,KAAMua,EADoB6R,EACpB7R,SAAUD,EADU8R,EACV9R,MAAOG,EADG2R,EACH3R,UAC5BtX,EAAQ8U,IAAEhV,IAAIipB,EAAQlvB,EAAI,OAG5Bud,GAAapX,EAMbsX,EAAY,GAAKtX,GAASA,EAAM1K,OAASgiB,EAC3C0R,EAAOnvB,GAAP,wCAAAoD,OAAqDqa,EAArD,oBAAAra,OAAiFka,GAKtE,UAATta,GACD,2CAA2CqsB,KAAKlpB,GAMtC,SAATnD,IACWssB,KAAOnpB,EAAO,cACjBopB,YACRJ,EAAOnvB,GAAM,mBARfmvB,EAAOnvB,GAAM,0BAbbmvB,EAAOnvB,GAAP,8BAAAoD,OAA2Cka,KA0BxC6R,GAETK,SAAU,SAACN,EAAQO,GACjBX,EAAiBW,EAAQP,KAG1B,SAAA5O,GAAoDA,EAAlDoP,aAAkD,IAApCP,EAAoC7O,EAApC6O,OAAQQ,EAA4BrP,EAA5BqP,QAASC,EAAmBtP,EAAnBsP,cAC1BC,EAAiB,GASvB,OARA5U,IAAEvW,KAAKyqB,GACJtR,OAAO,SAAA1W,GACN,OAAOiV,QAAQuT,EAAQxoB,MAExBxC,QAAQ,SAAAwC,GACP0oB,EAAe1oB,GAAOgoB,EAAOhoB,KAI/B2a,EAAAxe,EAAA1B,cAACotB,GAAA,EAAD,KACElN,EAAAxe,EAAA1B,cAAA,aACEkgB,EAAAxe,EAAA1B,cAAA,aACC+a,EAAOha,IAAI,SAAC0a,GAAU,IAAAyS,EAAAtB,GAAA,GACsBnR,GAApCrd,EADc8vB,EACd9vB,GAAIgD,EADU8sB,EACV9sB,KAAMsa,EADIwS,EACJxS,MAAOM,EADHkS,EACGlS,YAClBmS,EAAW3T,QAAQnB,IAAEhV,IAAI4pB,EAAgB7vB,EAAI,OAC7C0hB,EAAU,GAKhB,OAJIqO,GACFrO,EAAQ/lB,KAAK,SAGX,CAAC,OAAQ,QAAS,OAAOwhB,SAASna,GAElC8e,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP8hB,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,SAAQF,EAAAxe,EAAA1B,cAAA,aAAQ0b,IAC9BwE,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAACotB,GAAA,EAAD,CAAOhsB,KAAMA,EAAM8C,KAAM9F,EAAIgiB,UAAWN,EAAQzd,KAAK,KAAM2Z,YAAaA,IACvEmS,GAAYjO,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,iDAMrB,SAAThf,EAEA8e,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP8hB,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,SAAQF,EAAAxe,EAAA1B,cAAA,aAAQ0b,IAC9BwE,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAACotB,GAAA,EAAD,CAAOlpB,KAAM9F,EAAIgwB,OAAQ,SAAA1C,GAAa,IAChC2C,EAAO,KACLC,EAF8B5C,EAAX6C,MAEDhqB,OAAS,KAKjC,OAJI+pB,GAAaA,EAAUhI,OAAOzsB,OAAS,IACzCw0B,EAAOX,KAAOY,GAAWE,UAIzBtO,EAAAxe,EAAA1B,cAACyuB,GAAA,EAAD,CACYC,WAAW,aACXtO,UAAWN,EAAQzd,KAAK,KACxBssB,SAAUN,EACVO,SAAU,SAACrqB,GACT,GAAKA,EAAL,CAIA,IAAM8pB,EAAOX,KAAOnpB,GAAOsqB,OAAO,cAClCb,EAAc5vB,EAAIiwB,QAJhBL,EAAc5vB,EAAI,OAMtB0wB,gBAAiB9S,EACjB+S,aAAa,SACbC,YAAU,OAGzBb,GAAYjO,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,iDAMrB,aAAThf,EAEA8e,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAKnH,GACP8hB,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,SAAQF,EAAAxe,EAAA1B,cAAA,aAAQ0b,IAC9BwE,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAACotB,GAAA,EAAD,CAAOlpB,KAAM9F,GACV,SAAA6qB,GAAa,IAAXsF,EAAWtF,EAAXsF,MACD,OAAOrO,EAAAxe,EAAA1B,cAAA,WAAAivB,GAAA,GAAcV,EAAd,CAAqBnO,UAAWN,EAAQzd,KAAK,KAAM2Z,YAAaA,OAG1EmS,GAAYjO,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,iDAK3B,OAETF,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAAA,WACAkgB,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,eAGtBuD,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAAA,WACAkgB,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eACX6N,GAAkB5U,IAAEvW,KAAKmrB,GAAgBp0B,OAAS,GACjDqmB,EAAAxe,EAAA1B,cAAA,qBAEGqZ,IAAEvW,KAAKmrB,GACLltB,IAAI,SAACwE,GACJ,OACE2a,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aAAa7a,IAAKA,GAAM0oB,EAAe1oB,yyCC1JnE2pB,oaAzEatP,+DAETiO,EAAmBP,GAAgB,IAAAzK,EAAAsM,GAAA,GACJ7R,KAAK0C,OAA5CjD,EAD2C8F,EAC3C9F,UAAWqS,EADgCvM,EAChCuM,qBAGZC,EAAkBtS,EAAUuK,KAAK,SAAC5K,GACtC,OAA8B,IAAvBA,EAAS5B,YAElB,GAAKuU,EAAL,CAIA,IAAMzI,EAAmBuI,GAAA,GAAIE,GAC7BhW,IAAEiW,MAAMhC,EAAQ,SAAC/oB,EAAOgB,GACtB,IAAMuc,EAAQ8E,EAAiB7L,OAAO+L,UAAU,SAACllB,GAAD,OAAUA,EAAKxD,KAAOmH,IACnEuc,GAAS,GACVzI,IAAE/U,IAAIsiB,EAAN,UAAAplB,OAAkCsgB,EAAlC,SAAgDvd,KAGpDqiB,EAAiBhM,WAAY,EAC7BgM,EAAiB/L,cAAe,EAEhCuU,EAAqBxI,8CAGLvK,GAAsB,IAAA+O,EAAA+D,GAAA,GACQ7R,KAAK0C,OAA5CjD,EAD+BqO,EAC/BrO,UAAWqS,EADoBhE,EACpBgE,qBAGZC,EAAkBtS,EAAUuK,KAAK,SAAC5K,GACtC,OAA8B,IAAvBA,EAAS5B,YAElB,GAAKuU,EAAL,CAIA,IAAMzI,EAAmBuI,GAAA,GAAIE,GAC7BzI,EAAiB5L,QAAU4L,EAAiB5L,QAAQja,IAAI,SAACa,GAEvD,OADAA,EAAK0a,QAAW1a,EAAKxD,KAAOie,EAAOje,GAC5BwD,IAETglB,EAAiBhM,WAAY,EAC7BgM,EAAiB/L,cAAe,EAEhCuU,EAAqBxI,qCAGd,IAAA2I,EAAAJ,GAAA,GACqC7R,KAAK0C,OAA1CjD,EADAwS,EACAxS,UAAWyS,EADXD,EACWC,mBAEZH,EAAkBtS,EAAUuK,KAAK,SAAC5K,GACtC,OAA8B,IAAvBA,EAAS5B,YAGZ2U,EAAuB1S,EAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAASte,KAAOixB,EAAgBjxB,KAE/F,OACE8hB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,sBACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACbF,EAAAxe,EAAA1B,cAAC0vB,GAAD,CAAS3S,UAAWA,EAAWmP,YAAasD,IAC3CH,GAAmBnP,EAAAxe,EAAA1B,cAAC2vB,GAAD,CAClB7N,MAAO2N,EACPlqB,IAAK8pB,EAAgBjxB,GACrBse,SAAU2S,EACVnC,iBAAkB5P,KAAK4P,iBAAiB1nB,KAAK8X,MAC7CyP,kBAAmBzP,KAAKyP,kBAAkBvnB,KAAK8X,gyCChE3D,IAiCMsS,oaAA+BhQ,kEAEf,IAAAiD,EAAAgN,GAAA,GACyCvS,KAAK0C,OAAzDkE,EADWrB,EACXqB,gBACP4L,EAFkBjN,EACKiN,8BACM5L,oCAGtB,IAAAkH,EAAAyE,GAAA,GACgFvS,KAAK0C,OAArF+P,EADA3E,EACA2E,mCAAoCC,EADpC5E,EACoC4E,qCADpCC,EAAAJ,GAAA,GAE0CvS,KAAK0C,MAAM+J,iBAArDpN,EAFAsT,EAEAtT,MAAO6H,EAFPyL,EAEOzL,UAAWjB,EAFlB0M,EAEkB1M,KAAMmB,EAFxBuL,EAEwBvL,WAE/B,OAAKnB,GAASmB,EAIY,gBAAtBA,EAAWlnB,OAEX0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,0BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAUqH,EAAWsG,SAAUvH,EAAKrf,OAC1Dgc,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,iBACbF,EAAAxe,EAAA1B,cAAA,sDAIFkgB,EAAAxe,EAAA1B,cAACyiB,GAAD,OAOJvC,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,0BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAUqH,EAAWsG,SAAUvH,EAAKrf,OAE1Dgc,EAAAxe,EAAA1B,cAACkwB,GAAD,CACEnT,UAAW2H,EAAW3H,UACtBqS,qBAAsB,SAACxI,GACrBmJ,EAAmCnJ,IAErC4I,mBAAoB,SAACW,GACnBH,EAAqCG,MAIzCjQ,EAAAxe,EAAA1B,cAACyiB,GAAD,OAhCK,4CAsCEC,eAnFS,SAACC,GACvB,MAAO,CACLoH,gBAAiBpH,EAAMmH,mBAAmBC,kBAInB,SAACjL,EAAoBkB,GAC9C,MAAO,CACL8P,6BADK,SACwB5L,GAC3BpF,EAASkK,GAAiC9E,KAE5C6L,mCAJK,SAI8BnJ,GR0DhC,IAAsCtH,EAC3C8Q,EQ1DItR,GRyDuCQ,EQzDDsH,ER0D1CwJ,EAAAlH,GAAAvK,mBAAAC,KAAO,SAAAyR,EAAOvR,EAAU4K,GAAjB,IAAAC,EAAA/E,EAAAjM,EAAA2B,EAAAkL,EAAA,OAAA7G,mBAAAK,KAAA,SAAAsR,GAAA,cAAAA,EAAApR,KAAAoR,EAAAnR,MAAA,UAGLL,EAAS,CACP1d,KAAM4U,EAAWK,cAAcG,iCAC/B8I,YAGIqK,EAAuBD,IACvB9E,EAAevL,IAAEhV,IAAIslB,EAAW,6DAA8D,MAT/F,CAAA2G,EAAAnR,KAAA,cAWG,IAAI9gB,MAAM,8CAXb,cAAAiyB,EAAAnR,KAAA,EAcmB0B,GAAiBM,eAdpC,cAcCxI,EAdD2X,EAAAjR,KAeC/E,EAAagF,EAAQlhB,GACrBonB,EAAqCU,GAAmBwE,gCAAgCpL,GAhBzFgR,EAAApR,KAAA,GAAAoR,EAAAnR,KAAA,GAoBG8E,GAAyBsM,qBAAqB,CAClD3L,eACAtK,aACA3B,YACA6M,eAxBC,QA4BH1G,EAASyK,GAA0BjK,IA5BhCgR,EAAAnR,KAAA,iBAAAmR,EAAApR,KAAA,GAAAoR,EAAA/Q,GAAA+Q,EAAA,UA+BH9R,MAAM8R,EAAA/Q,GAAMhD,SA/BT,yBAAA+T,EAAA7Q,SAAA4Q,EAAA,mBAAP,SAAAG,EAAAC,GAAA,OAAAL,EAAA51B,MAAA8iB,KAAAhF,eQxDE0X,qCAPK,SAOgCG,GACnCrR,ERsIC,SAAgCqR,GACrC,OAAAO,EAAAxH,GAAAvK,mBAAAC,KAAO,SAAA+R,EAAO7R,EAAU4K,GAAjB,IAAAC,EAAAjF,EAAAmC,EAAAK,EAAA,OAAAvI,mBAAAK,KAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,UACCwK,EAAuBD,IACvBhF,EAAaiF,EAAUG,mBAAmBC,gBAAgBrF,WAF3D,CAAAkM,EAAAzR,KAAA,eAAAyR,EAAA5G,OAAA,uBAOCnD,EAAenC,EAAW3H,UAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAAS5B,aACxD,GARd,CAAA8V,EAAAzR,KAAA,cASG,IAAI9gB,MAAM,gDATb,UAaA8xB,EAAetV,cAAiBsV,EAAevV,UAb/C,CAAAgW,EAAAzR,KAAA,eAAAyR,EAAA5G,OAAA,uBAiBC9C,EAAcxC,EAAW3H,UAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAASte,KAAO+xB,EAAe/xB,MAC9E,GAlBb,CAAAwyB,EAAAzR,KAAA,gBAAAyR,EAAA5G,OAAA,yBAsBLlL,EAAS,CACP1d,KAAM4U,EAAWK,cAAcI,uCAC/ByQ,gBAxBG0J,EAAAzR,KAAA,GA4BC+K,GAA0BR,IAAY,CAAC7C,EAAcK,IA5BtD,yBAAA0J,EAAAnR,SAAAkR,MAAP,SAAAE,EAAAC,GAAA,OAAAJ,EAAAl2B,MAAA8iB,KAAAhF,YAAA,IAAAoY,EQvIaK,CAAuBZ,OAoEvBzN,CAGbkN,09BCMaoB,oaAlGcpR,uDAElB,IAAAC,EAAAvC,KACAP,qUADAkU,CAAA,GACiB3T,KAAK0C,OAAtBjD,UAEP,OACEmD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACZrD,EAAUhc,IAAI,SAAC2b,EAAUoF,EAAOoP,GAC/B,IAAMC,EAAetR,EAAKuR,WAAW1U,GACrC,OACEwD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,MAAM7a,IAAKmX,EAASte,IACjC8hB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,OACbF,EAAAxe,EAAA1B,cAAA,SAAI8hB,EAAQ,EAAZ,KAAiBpF,EAASE,UAE5BsD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,qBACfF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,OACZ+Q,2CAUNzU,GAET,IAAKA,EAAS7B,aAAc,CAE1B,OACEqF,EAAAxe,EAAA1B,cAAA,WAFU,oBAOd,IAAK0c,EAAS9B,UAAW,CAEvB,OACEsF,EAAAxe,EAAA1B,cAAA,WAFU,mBAOd,GAAsB,UAAlB0c,EAAStb,MAAoBsb,EAAS3B,QAAUjB,MAAMC,QAAQ2C,EAAS3B,SAAW2B,EAAS3B,OAAOlhB,OAAS,EAAG,CAChH,IAAMw3B,EAAkB,SAAC5V,GACvB,IAAIpiB,EAAeoiB,EAAMpiB,MAAQ,GASjC,MAPmB,SAAfoiB,EAAMra,OACR/H,EAAOq0B,KAAOr0B,GAAMw1B,OAAO,eAGV,aAAfpT,EAAMra,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAIqjB,EAAS3B,OAAOlhB,OAAS,EAEzBqmB,EAAAxe,EAAA1B,cAAA,WACG0c,EAAS3B,OAAOha,IAAK,SAAA0a,GACpB,IAAMpiB,EAAOg4B,EAAgB5V,GAC7B,OACEyE,EAAAxe,EAAA1B,cAAA,OAAKuF,IAAKkW,EAAMrd,IACd8hB,EAAAxe,EAAA1B,cAAA,SAAIyb,EAAMC,OADZ,IAEEwE,EAAAxe,EAAA1B,cAAA,iBAFF,IAGEkgB,EAAAxe,EAAA1B,cAAA,YAAO3G,OAUjB6mB,EAAAxe,EAAA1B,cAAA,WACGqxB,EAAgB3U,EAAS3B,OAAO,IAAIuL,QAM3C,GAAsB,WAAlB5J,EAAStb,MAAqBsb,EAAS1B,SAAWlB,MAAMC,QAAQ2C,EAAS1B,SAAU,CACrF,IAAIqB,EAAuBhD,IAAElZ,KAAKuc,EAAS1B,QAAQiB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAE7E,OACE4D,EAAAxe,EAAA1B,cAAA,WACGqc,GAAU6D,EAAAxe,EAAA1B,cAAA,WAAMqc,EAAOX,69BCrCnB4V,oaA9CM1R,uDAEV,IAAAiD,qUAAA0O,CAAA,GAMCjU,KAAK0C,OAJX0E,EAFK7B,EAEL6B,WACA8M,EAHK3O,EAGL2O,wBACAC,EAJK5O,EAIL4O,6BACAC,EALK7O,EAKL6O,4BAGF,OAAKhN,EAIqB,gBAAtBA,EAAWlnB,OAEX0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAA,sDAQJkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAC2xB,GAAD,CAAgB5U,UAAW2H,EAAW3H,YACtCmD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,eACNoG,UAAW6O,KACX9R,QAAS,CAAC,UACVS,QAASmR,IACtBxR,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,eACNoG,UAAW8O,KACX/R,QAAS,CAAC,UACVS,QAASkR,IACtBvR,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,uBACNmD,QAAS,CAAC,UACV9B,SAAUkI,GAAmB4L,yBAAyBpN,EAAW3H,WACjEwD,QAASiR,MA5BlB,iQC5BQO,wLAEHC,GACd,OAAIA,EAGJ,GAAAxwB,OAAUwwB,GAFD,ygCCcEC,yFAAf,SAAA9I,EAAkC+I,GAAlC,OAAAvT,mBAAAK,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cAAAiK,EAAAY,OAAA,SACS,IAAIzrB,QAAQ,SAACC,GAClB,IAAM2zB,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,SAAC7R,GAC/BhiB,EAAQgiB,EAAM8R,OAAO53B,UAEvBy3B,EAAOI,cAAcL,MANzB,wBAAA9I,EAAA3J,SAAA0J,sCAUeqJ,yFAAf,SAAAnC,EAAiCoC,GAAjC,IAAAvZ,EAAAgZ,EAAA74B,EAAA,OAAAslB,mBAAAK,KAAA,SAAAsR,GAAA,cAAAA,EAAApR,KAAAoR,EAAAnR,MAAA,cAAAmR,EAAAnR,KAAA,EACyBuT,MAAMD,GAD/B,cACQvZ,EADRoX,EAAAjR,KAAAiR,EAAAnR,KAAA,EAEqBjG,EAASgZ,OAF9B,cAEQA,EAFR5B,EAAAjR,KAAAiR,EAAAnR,KAAA,EAGqB8S,GAAmBC,GAHxC,cAGQ74B,EAHRi3B,EAAAjR,KAAAiR,EAAAtG,OAAA,SAIS3wB,GAJT,yBAAAi3B,EAAA7Q,SAAA4Q,iCAOqBsC,gPAEM7K,+HAC2CA,GAA3D/K,cAAW+H,cAAWH,uBAAoBH,cAG3CoO,EAAU,GACVC,EAAS,CACblO,mBAAoB,CAClBmO,MAAM,EACNC,UALEC,EAAkB,IAKQ,EAC5BC,MAAO,UACPC,UAAW,UAEb1O,UAAW,CACTsO,MAAM,EACNC,SAAUC,EACVC,MAAO,UACPC,UAAW,UAEbC,eAAgB,CACdL,MAAM,EACNC,SAAUC,EAAkB,EAC5BC,MAAO,WAETG,gBAAiB,CACfN,MAAM,IAGJO,EAAe,CACnBN,SAAUC,GAENM,EAAO,CACX3W,MAAK,GAAAnb,OAAKmjB,EAAL,OAAAnjB,OAA6BsjB,EAAU5gB,OAGvCqvB,EAAOC,KAASC,QAAhBF,IACPE,KAAQF,IAAMA,YAIiBf,GAAkBkB,qBAA3CC,SAENf,EAAQ74B,KAAK,CACX65B,MAAOD,EACPE,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpBJ,EAAQ74B,KAAK,CACXg6B,KAAMpP,EACNvC,MAAO,qBACP0R,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAItCJ,EAAQ74B,KAAK,CACXg6B,KAAMvP,EACNpC,MAAO,YACP0R,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQ74B,KAAK,CACXg6B,KAAI,gBACJ3R,MAAO,iBACP0R,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAGpBJ,EAAQ74B,KAAK,CACXg6B,KAAI,SAAAvyB,OAAWsjB,EAAU5gB,MACzBke,MAAO,kBACP0R,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAGtCJ,EAAQ74B,KAAK,CACXg6B,KAAI,UAAAvyB,OAAYsjB,EAAUnB,OAC1BmQ,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQ74B,KAAK,CACXg6B,KAAI,YACJ3R,MAAO,iBACP0R,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpBjW,EAAUha,QAAQ,SAAC2Z,EAAUoF,GAS3B,GAPA8Q,EAAQ74B,KAAK,CACXg6B,KAAI,GAAAvyB,OAAKsgB,EAAQ,EAAb,MAAAtgB,OAAmBkb,EAASE,SAChCwF,MAAO,kBACP0R,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAIjCtW,EAAS7B,aASd,GAAK6B,EAAS9B,UAAd,CASA,GAAsB,UAAlB8B,EAAStb,MAAoBsb,EAAS3B,QAAUjB,MAAMC,QAAQ2C,EAAS3B,SAAW2B,EAAS3B,OAAOlhB,OAAS,EAAG,CAChH,IAAMw3B,EAAkB,SAAC5V,GACvB,IAAIpiB,EAAeoiB,EAAMpiB,MAAQ,GASjC,MAPmB,SAAfoiB,EAAMra,OACR/H,EAAOq0B,KAAOr0B,GAAMw1B,OAAO,eAGV,aAAfpT,EAAMra,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAIqjB,EAAS3B,OAAOlhB,OAAS,OAC3B6iB,EAAS3B,OAAOhY,QAAQ,SAAC0Y,EAAOqG,EAAOkS,GACrC,IAAMC,EAAUnS,IAAUkS,EAAIn6B,OAAS,EACvC+4B,EAAQ74B,KAAK,CACXg6B,KAAI,GAAAvyB,OAAKia,EAAMC,MAAX,MAAAla,OAAqBuwB,GAAW5X,SAASkX,EAAgB5V,KAC7DqY,OAAQ,CAAC,EAAG,EAAG,EAAGG,EAASjB,EAAkBjX,SAAQ,GAAAva,OAAIwxB,EAAkB,cAOjFJ,EAAQ74B,KAAK,CACXg6B,KAAM1C,EAAgB3U,EAAS3B,OAAO,IAAIuL,OAC1CwN,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAMtB,GAAsB,WAAlBtW,EAAStb,MAAqBsb,EAAS1B,SAAWlB,MAAMC,QAAQ2C,EAAS1B,SAAU,CACrF,IAAIqB,EAAuBhD,IAAElZ,KAAKuc,EAAS1B,QAAQiB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAC7EsW,EAAQ74B,KAAK,CACXg6B,KAAM1X,EAAOX,MACboY,OAAQ,CAAC,EAAG,EAAG,EAAGd,WA/CpBJ,EAAQ74B,KAAK,CACXg6B,KAAM,kBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,UAXpBJ,EAAQ74B,KAAK,CACXg6B,KAAM,mBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,iBA4DMR,GAAkB0B,qBAA1CC,SAENvB,EAAQ74B,KAAK,CACX65B,MAAOO,EACPN,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,yBAIZS,KAAQW,UAAU,CAACd,OAAMV,UAASC,SAAQQ,iBAAegB,SAASf,EAAK3W,kEAE7E6B,MAAM,iPAKiB0T,2GAClB,IAAI3zB,QAAQ,SAACC,GAClB,IAAM2zB,EAAS,IAAIC,WACnBD,EAAOmC,OAAS,SAAS9T,GACvBhiB,EAAQgiB,EAAM8R,OAAO53B,SAEvBy3B,EAAOI,cAAcL,23CC7M3B,IA6BMqC,oaAAwB3U,kEAER,IAAAiD,EAAA2R,GAAA,GACyClX,KAAK0C,OAAzDkE,EADWrB,EACXqB,gBACP4L,EAFkBjN,EACKiN,8BACM5L,oCAGtB,IAAA+L,EAAAuE,GAAA,GAC0ClX,KAAK0C,MAAM+J,iBAArDpN,EADAsT,EACAtT,MAAO6H,EADPyL,EACOzL,UAAWjB,EADlB0M,EACkB1M,KAAMmB,EADxBuL,EACwBvL,WAE/B,OAAKnB,EAKHrD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,mBACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAS,mBAAmB2N,SAAUvH,EAAKrf,OACjEgc,EAAAxe,EAAA1B,cAACy0B,GAAD,CAAQjQ,UAAWA,EACXE,WAAYA,EACZ8M,wBAAyBlU,KAAKkU,wBAAwBhsB,KAAK8X,MAC3DmU,6BAA8BnU,KAAKmU,6BAA6BjsB,KAAK8X,MACrEoU,4BAA6BpU,KAAKoU,4BAA4BlsB,KAAK8X,QAC3E4C,EAAAxe,EAAA1B,cAACyiB,GAAD,MAPF,KAJO,uDAkBTnF,KAAK0C,MAAM0U,qFAGkB,IAAAC,EAAAH,GAAA,GACOlX,KAAK0C,MAAM+J,iBAAxCrF,EADsBiQ,EACtBjQ,WAAYF,EADUmQ,EACVnQ,UACdE,GAILiO,GAAQiC,YAAY,CAClB7X,UAAW2H,EAAW3H,UACtB+H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,oEAKF,IAAMtM,EAAOmB,IAAEhV,IAAIiZ,KAAK0C,MAAM+J,gBAAiB,4BAA6B,IACvE7R,GAGLD,EAAQ6T,+BAA+B5T,0CAI5BwK,eApFS,SAACC,GACvB,MAAO,CACLoH,gBAAiBpH,EAAMmH,mBAAmBC,kBAInB,SAACjL,EAAoBkB,GAC9C,MAAO,CACL8P,6BADK,SACwB5L,GAC3BpF,EAASkK,GAAiC9E,KAE5CwQ,4BAJK,WbiLF,IACLG,Ea7KI/V,Gb6KJ+V,EAAA3L,GAAAvK,mBAAAC,KAAO,SAAAkW,EAAOhW,EAAU4K,GAAjB,IAAAC,EAAAI,EAAArF,EAAA/L,EAAAoc,EAAA7c,EAAA,OAAAyG,mBAAAK,KAAA,SAAAgW,GAAA,cAAAA,EAAA9V,KAAA8V,EAAA7V,MAAA,UAAA6V,EAAA9V,KAAA,EAEGyK,EAAuBD,IACvBK,EAAkBJ,EAAUG,mBAAmBC,gBAC/CrF,EAAaqF,EAAgBrF,WAJhC,CAAAsQ,EAAA7V,KAAA,eAAA6V,EAAAhL,OAAA,qBAUC9D,GAAmB4L,yBAAyBpN,EAAW3H,WAVxD,CAAAiY,EAAA7V,KAAA,eAWDX,MAAM,wEAXLwW,EAAAhL,OAAA,wBAAAgL,EAAA7V,KAAA,GAeqB0B,GAAiBM,eAftC,eAeGxI,EAfHqc,EAAA3V,KAAA2V,EAAA7V,KAAA,GAgBkB8E,GAAyBgR,oBAAoB,CAACrQ,aAAcF,EAAWE,aAAcjM,cAhBvG,eAAAoc,EAAAC,EAAA3V,KAgBInH,EAhBJ6c,EAgBI7c,KAhBJ8c,EAAA7V,KAAA,GAiBG0I,GAAgBqN,0CAA0C,CAC9DnY,UAAW2H,EAAW3H,UACtBgL,0BAA2BrD,EAAWE,aACtCjM,cApBC,QAsBHV,EAAQkd,+BAA+Bjd,GAtBpC8c,EAAA7V,KAAA,iBAAA6V,EAAA9V,KAAA,GAAA8V,EAAAzV,GAAAyV,EAAA,SAyBHxW,MAAKwW,EAAAzV,IAzBF,yBAAAyV,EAAAvV,SAAAqV,EAAA,kBAAP,SAAAM,EAAAC,GAAA,OAAAR,EAAAr6B,MAAA8iB,KAAAhF,iBarGaoK,CAGb6R,mvCC/EF,IAAMe,GAAiB,SAAC93B,GACtB,OAAOA,EACJ+3B,MAAM,KACNx0B,IAAI,SAACy0B,GACJ,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAI10B,MAAM,KAEhDuB,KAAK,MAGJszB,oaAAgB/V,uDAaX,IAAAiD,EAAA+S,GAAA,GAC0BtY,KAAK0C,OAA/B0E,EADA7B,EACA6B,WAAYmR,EADZhT,EACYgT,OAEnB,OAAKnR,EAIqB,gBAAtBA,EAAWlnB,QAAuC,cAAXq4B,EAEvC3V,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,kDAQJkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZ9C,KAAKwY,oBAAoBpR,GACzBpH,KAAKyY,YAAYrR,GACjBpH,KAAK0Y,gBAAgBtR,GACrBpH,KAAK2Y,cAAcvR,IAlBf,iDAuBSA,GAClB,IAAMI,EAAYJ,EAAWI,UAE7B,OACE5E,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBACbF,EAAAxe,EAAA1B,cAAA,iCACAkgB,EAAAxe,EAAA1B,cAAA,WAAKkgB,EAAAxe,EAAA1B,cAAA,0BAAL,IAA2B8kB,EAAU5gB,MACrCgc,EAAAxe,EAAA1B,cAAA,WAAKkgB,EAAAxe,EAAA1B,cAAA,mBAAL,IAAoB8kB,EAAUnB,OAC9BzD,EAAAxe,EAAA1B,cAAA,WAAKkgB,EAAAxe,EAAA1B,cAAA,oBAAL,IAAqBs1B,GAAe5Q,EAAWlnB,8CAKzCknB,GAAwB,IAAA7E,EAAAvC,KAC5B8H,EAAkBV,EAAWU,gBACnC,OAA+B,IAA3BA,EAAgBvrB,OACX,KAIPqmB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACbF,EAAAxe,EAAA1B,cAAA,mBACColB,EAAgBrkB,IAAI,SAAA2d,GAAwC,IAAtCxG,EAAsCwG,EAAtCxG,KAAMoN,EAAgC5G,EAAhC4G,SAAUC,EAAsB7G,EAAtB6G,SAAU/nB,EAAYkhB,EAAZlhB,OACxC6a,EADoDud,GAAA,GACvC/V,EAAKG,OAAlB3H,MACP,OACE6H,EAAAxe,EAAA1B,cAAA,OAAKuF,IAAK2S,GACRgI,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAW,eAAgBG,QAAS,SAACC,GAC1B,cAAb+E,EAIJtN,EAAQie,yBAAyBhe,EAAMG,GAHrCJ,EAAQke,uCAAuCje,EAAMG,KAKtDiN,EAPH,KAOegQ,GAAe93B,GAP9B,+CAgBEknB,GAAwB,IAAA6K,EAAAqG,GAAA,GAQ5BtY,KAAK0C,OANX6V,EAFkCtG,EAElCsG,OACArE,EAHkCjC,EAGlCiC,wBACAC,EAJkClC,EAIlCkC,6BACA2E,EALkC7G,EAKlC6G,yBACAC,EANkC9G,EAMlC8G,sBACAC,EAPkC/G,EAOlC+G,sBAGIC,EACJrW,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,0BACNoG,UAAW8O,KACX/R,QAAS,CAAC,UACVS,QAASkR,IAIxB,GAAe,cAAXoE,EAAwB,CAE1B,IAAMW,EACJtW,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,eACNoG,UAAW6O,KACX9R,QAAS,CAAC,UACVS,QAAS+V,IAKlBG,EACJvW,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,oBACNmD,QAAS,CAAC,UACV9B,SAAUkI,GAAmBwQ,+BAA+BhS,EAAWU,iBACvE7E,QAASiR,IAIvB,MAA0B,cAAtB9M,EAAWlnB,OAEX0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGw2B,EACAD,EACAE,GAEHvW,EAAAxe,EAAA1B,cAAA,aAKoB,4CAAtB0kB,EAAWlnB,OAEX0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGw2B,EACAD,GAEHrW,EAAAxe,EAAA1B,cAAA,aAMJkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGu2B,GAEHrW,EAAAxe,EAAA1B,cAAA,aAMN,GAAe,aAAX61B,EAAuB,CACzB,IAAMc,EACJzW,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,UACNmD,QAAS,CAAC,UACVS,QAAS6V,IAGjBQ,EACJ1W,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,OACNmD,QAAS,CAAC,UACVS,QAAS8V,IAIxB,MAA0B,cAAtB3R,EAAWlnB,OAEX0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGu2B,GAEHrW,EAAAxe,EAAA1B,cAAA,aAMJkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGu2B,GAEHrW,EAAAxe,EAAA1B,cAAA,WACG22B,EACAC,IAOT,OACE1W,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,WACGu2B,GAEHrW,EAAAxe,EAAA1B,cAAA,qDAKU0kB,GAEd,GAA0B,gBAAtBA,EAAWlnB,QACS,cAAtBknB,EAAWlnB,OAEX,OAAO,KAGT,IAAMwnB,EAAiBN,EAAWM,eAElC,OACE9E,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,uBACAkgB,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,+BADF,MAGGs1B,GAAetQ,EAAeG,oBAEjCjF,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,+CADF,MAGGs1B,GAAetQ,EAAeC,kCAEjC/E,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,2BADF,MAGGs1B,GAAetQ,EAAeE,wDAtOnCyQ,GAEGvU,aAAe,CACpBsD,WAAY,KACZ+M,6BAA8B,aAC9BD,wBAAyB,aACzB4E,yBAA0B,aAC1BC,sBAAuB,aACvBC,sBAAuB,aACvBT,OAAQ,SACRxd,MAAO,IAmOIsd,8wCCvPf,IA6CMkB,eAEJ,SAAAA,IAAc,IAAAhX,EAAA,mGAAAiX,CAAAxZ,KAAAuZ,IACZhX,EAAAkX,GAAAzZ,KAAA0Z,GAAAH,GAAA18B,KAAAmjB,QACKqF,MAAQ,CACXsU,WAAW,GAHDpX,yPAFeD,kEAST,IAAAiD,EAAAqU,GAAA,GACyC5Z,KAAK0C,OAAzDkE,EADWrB,EACXqB,gBACP4L,EAFkBjN,EACKiN,8BACM5L,oCAGtB,IAAA+L,EAAAiH,GAAA,GACsD5Z,KAAK0C,MAAM+J,iBAAjEpN,EADAsT,EACAtT,MAAO4G,EADP0M,EACO1M,KAAMmB,EADbuL,EACavL,WAAYD,EADzBwL,EACyBxL,sBAEhC,IAAKlB,IAASmB,EACZ,OAAO,KAIT,IAAImR,EAAS,SAEb,EAAG,CAED,GAAItS,EAAKnlB,KAAOsmB,EAAWI,UAAU1mB,GAAI,CACvCy3B,EAAS,YACT,MAIF,GAAIpR,EAAuB,CACzBoR,EAAS,WACT,aAEK,GAET,OACE3V,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,oBACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAS,UAAU2N,SAAUvH,EAAKrf,OACxDgc,EAAAxe,EAAA1B,cAACm3B,GAAD,CAASzS,WAAYA,EACZ+M,6BAA8BnU,KAAKmU,6BAA6BjsB,KAAK8X,MACrEkU,wBAAyBlU,KAAKkU,wBAAwBhsB,KAAK8X,MAC3D8Y,yBAA0B9Y,KAAK8Y,yBAAyB5wB,KAAK8X,MAC7D+Y,sBAAuB/Y,KAAK+Y,sBAAsB7wB,KAAK8X,MACvDgZ,sBAAuBhZ,KAAK8Z,gBAAgB5xB,KAAK8X,MACjDuY,OAAQA,IAEjB3V,EAAAxe,EAAA1B,cAACyiB,GAAD,MACAvC,EAAAxe,EAAA1B,cAACq3B,GAAA31B,EAAD,CACE41B,OAAQha,KAAKqF,MAAMsU,UACnBM,eAAgB,WAAO,OAAOx3B,SAASy3B,cAAc,uBAErDtX,EAAAxe,EAAA1B,cAAA,4DAGAkgB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WAAf,2FAGAF,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,MAAM4D,QAASjD,KAAKgZ,sBAAsB9wB,KAAK8X,QACjE4C,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,KAAK4D,QAASjD,KAAKma,iBAAiBjyB,KAAK8X,kEAOvC,IAAAqX,EAAAuC,GAAA,GACO5Z,KAAK0C,MAAM+J,iBAAxCrF,EADsBiQ,EACtBjQ,WAAYF,EADUmQ,EACVnQ,UACdE,GAILiO,GAAQiC,YAAY,CAClB7X,UAAW2H,EAAW3H,UACtB+H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,gEAIsB,IAAAkT,EAAAR,GAAA,GACO5Z,KAAK0C,MAAM+J,iBAAnCxG,EADiBmU,EACjBnU,KAAMmB,EADWgT,EACXhT,WAERnB,GAASmB,GAIdpH,KAAK0C,MAAM2X,gCAAgCjT,EAAWE,iEAG7B,IAAAgT,EAAAV,GAAA,GACM5Z,KAAK0C,MAAM+J,iBAAnCxG,EADkBqU,EAClBrU,KAAMmB,EADYkT,EACZlT,WAERnB,GAASmB,GAIdpH,KAAK0C,MAAM6X,gCAAgCnT,EAAWE,8DAGhC,IAAAkT,EAAAZ,GAAA,GACS5Z,KAAK0C,MAAM+J,iBAAnCxG,EADeuU,EACfvU,KAAMmB,EADSoT,EACTpT,WAERnB,GAASmB,GAIdpH,KAAK0C,MAAM+X,6BAA6BrT,EAAWE,8DAG7B,IAAAoT,EAAAd,GAAA,GACS5Z,KAAK0C,MAAM+J,iBAAnCxG,EADeyU,EACfzU,KAAMmB,EADSsT,EACTtT,WAERnB,GAASmB,IAIdpH,KAAKma,mBACLna,KAAK0C,MAAMiY,6BAA6BvT,EAAWE,yDAInDtH,KAAK4a,SAAS,CAACjB,WAAW,+CAI1B3Z,KAAK4a,SAAS,CAACjB,WAAW,2CAIfvU,eAlLS,SAACC,GACvB,MAAO,CACLoH,gBAAiBpH,EAAMmH,mBAAmBC,kBAInB,SAACjL,EAAoBkB,GAC9C,MAAO,CACL8P,6BADK,SACwB5L,GAC3BpF,EAASkK,GAAiC9E,KAE5CyT,gCAJK,SAI2B/S,GAC9B9F,EfoMC,SAAwC8F,GAC7C,OAAAuT,EAAAjP,GAAAvK,mBAAAC,KAAO,SAAAwZ,EAAOtZ,EAAU4K,GAAjB,IAAA/Q,EAAA0f,EAAAngB,EAAA,OAAAyG,mBAAAK,KAAA,SAAAsZ,GAAA,cAAAA,EAAApZ,KAAAoZ,EAAAnZ,MAAA,cAAAmZ,EAAApZ,KAAA,EAAAoZ,EAAAnZ,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGxI,EAFH2f,EAAAjZ,KAAAiZ,EAAAnZ,KAAA,EAGkB8E,GAAyBsU,+BAA+B,CAAC3T,eAAcjM,cAHzF,OAAA0f,EAAAC,EAAAjZ,KAGInH,EAHJmgB,EAGIngB,KACP4G,EAASkK,GAAiC9Q,IAJvCogB,EAAAnZ,KAAA,iBAAAmZ,EAAApZ,KAAA,GAAAoZ,EAAA/Y,GAAA+Y,EAAA,SAOH9Z,MAAK8Z,EAAA/Y,IAPF,yBAAA+Y,EAAA7Y,SAAA2Y,EAAA,kBAAP,SAAAI,EAAAC,GAAA,OAAAN,EAAA39B,MAAA8iB,KAAAhF,YAAA,IAAA6f,EerMaI,CAA+B3T,KAE1CiT,gCAPK,SAO2BjT,GAC9B9F,Ef8MC,SAAwC8F,GAC7C,OAAA8T,EAAAxP,GAAAvK,mBAAAC,KAAO,SAAA+Z,EAAO7Z,EAAU4K,GAAjB,IAAA/Q,EAAAigB,EAAA1gB,EAAA,OAAAyG,mBAAAK,KAAA,SAAA6Z,GAAA,cAAAA,EAAA3Z,KAAA2Z,EAAA1Z,MAAA,cAAA0Z,EAAA3Z,KAAA,EAAA2Z,EAAA1Z,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGxI,EAFHkgB,EAAAxZ,KAAAwZ,EAAA1Z,KAAA,EAGkB8E,GAAyB6U,+BAA+B,CAAClU,eAAcjM,cAHzF,OAAAigB,EAAAC,EAAAxZ,KAGInH,EAHJ0gB,EAGI1gB,KACP4G,EAASkK,GAAiC9Q,IAJvC2gB,EAAA1Z,KAAA,iBAAA0Z,EAAA3Z,KAAA,GAAA2Z,EAAAtZ,GAAAsZ,EAAA,SAOHra,MAAKqa,EAAAtZ,IAPF,yBAAAsZ,EAAApZ,SAAAkZ,EAAA,kBAAP,SAAAI,EAAAC,GAAA,OAAAN,EAAAl+B,MAAA8iB,KAAAhF,YAAA,IAAAogB,Ee/MaI,CAA+BlU,KAE1CmT,6BAVK,SAUwBnT,GAC3B9F,EfwNC,SAAqC8F,GAC1C,OAAAqU,EAAA/P,GAAAvK,mBAAAC,KAAO,SAAAsa,EAAOpa,EAAU4K,GAAjB,IAAA/Q,EAAAwgB,EAAAjhB,EAAA,OAAAyG,mBAAAK,KAAA,SAAAoa,GAAA,cAAAA,EAAAla,KAAAka,EAAAja,MAAA,cAAAia,EAAAla,KAAA,EAAAka,EAAAja,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGxI,EAFHygB,EAAA/Z,KAAA+Z,EAAAja,KAAA,EAGkB8E,GAAyBoV,4BAA4B,CAACzU,eAAcjM,cAHtF,OAAAwgB,EAAAC,EAAA/Z,KAGInH,EAHJihB,EAGIjhB,KACP4G,EAASkK,GAAiC9Q,IAJvCkhB,EAAAja,KAAA,iBAAAia,EAAAla,KAAA,GAAAka,EAAA7Z,GAAA6Z,EAAA,SAOH5a,MAAK4a,EAAA7Z,IAPF,yBAAA6Z,EAAA3Z,SAAAyZ,EAAA,kBAAP,SAAAI,EAAAC,GAAA,OAAAN,EAAAz+B,MAAA8iB,KAAAhF,YAAA,IAAA2gB,EezNaI,CAA4BzU,KAEvCqT,6BAbK,SAawBrT,GAC3B9F,EfkOC,SAAqC8F,GAC1C,OAAA4U,EAAAtQ,GAAAvK,mBAAAC,KAAO,SAAA6a,EAAO3a,EAAU4K,GAAjB,IAAA/Q,EAAA+gB,EAAAxhB,EAAA,OAAAyG,mBAAAK,KAAA,SAAA2a,GAAA,cAAAA,EAAAza,KAAAya,EAAAxa,MAAA,cAAAwa,EAAAza,KAAA,EAAAya,EAAAxa,KAAA,EAEqB0B,GAAiBM,eAFtC,cAEGxI,EAFHghB,EAAAta,KAAAsa,EAAAxa,KAAA,EAGkB8E,GAAyB2V,4BAA4B,CAAChV,eAAcjM,cAHtF,OAAA+gB,EAAAC,EAAAta,KAGInH,EAHJwhB,EAGIxhB,KACPD,EAAQ6T,+BAA+B5T,GAJpCyhB,EAAAxa,KAAA,iBAAAwa,EAAAza,KAAA,GAAAya,EAAApa,GAAAoa,EAAA,SAOHnb,MAAKmb,EAAApa,IAPF,yBAAAoa,EAAAla,SAAAga,EAAA,kBAAP,SAAAI,EAAAC,GAAA,OAAAN,EAAAh/B,MAAA8iB,KAAAhF,YAAA,IAAAkhB,EenOaI,CAA4BhV,OA6J5BlC,CAGbmU,ulCCxLK,SAASkD,GAAmBjS,GAAyD,IAAAkS,EAAAC,GAAA,GAC1DnS,GAAzB5P,EADmF8hB,EACnF9hB,KAAMiQ,EAD6E6R,EAC7E7R,YAEb,sBAAAzJ,EAAAwb,GAAAvb,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAQ,EAAAjD,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmB0I,GAAgBsS,oBAAoB,CACxDjiB,OACAiQ,gBAJC,cAEG7I,EAFHL,EAAAI,KAMGhD,EAAmC,CACvCjb,KAAM4U,EAAWY,KAAKC,qBACtByI,WARCL,EAAAE,KAAA,EAUGL,EAASzC,GAVZ,OAAA4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAaHX,EAAUkB,aAAVP,EAAAM,IAbG,yBAAAN,EAAAQ,SAAAZ,EAAA,iBAAP,gBAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,GAqDK,SAAS8hB,GACdtS,GAIgB,IAAAuS,EAAAJ,GAAA,GAC2CnS,GAApDlB,EADSyT,EACTzT,iBAAkBuB,EADTkS,EACSlS,YAAamS,EADtBD,EACsBC,cAEtC,sBAAArR,EAAAiR,GAAAvb,mBAAAC,KAAO,SAAAuK,EAAOrK,EAAU4K,GAAjB,IAAA6Q,EAAAC,EAAA5Q,EAAA/C,EAAAI,EAAAC,EAAAC,EAAAzsB,EAAA+/B,EAAAC,EAAA,OAAA/b,mBAAAK,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,WAECob,EAAoB,WACxB,OAAO7Q,IAAWiR,oBAAoBhU,mBAHnC,CAAAyC,EAAAjK,KAAA,eAAAiK,EAAAY,OAAA,wBAWCwQ,EAA+C,CACnDp5B,KAAM4U,EAAWY,KAAKE,4BACtBwI,QAASsH,GAbNwC,EAAAjK,KAAA,EAeCL,EAAS0b,GAfV,UAkBAF,EAlBA,CAAAlR,EAAAjK,KAAA,gBAAAiK,EAAAlK,KAAA,EAAAkK,EAAA7J,GAoBKsI,GApBLuB,EAAAwR,GAqBOL,IAAoBriB,KArB3BkR,EAAAyR,GAsBiB,CAACjU,EAAiBxoB,IAtBnCgrB,EAAA0R,GAuBiB,CAAC5U,GAAmBwE,gCAAgC9D,IAvBrEwC,EAAAjK,KAAA,GAwBkB0B,GAAiBM,eAxBnC,eAAAiI,EAAA2R,GAAA3R,EAAA/J,KAAA+J,EAAA4R,GAyBc7S,EAzBdiB,EAAA6R,GAAA,CAqBC/iB,KArBDkR,EAAAwR,GAsBChV,eAtBDwD,EAAAyR,GAuBChV,eAvBDuD,EAAA0R,GAwBCniB,UAxBDyQ,EAAA2R,GAyBC5S,YAzBDiB,EAAA4R,IAAA5R,EAAAjK,KAAA,GAAAiK,EAAA7J,GAoBqB2b,8BApBrB/gC,KAAAivB,EAAA7J,GAAA6J,EAAA6R,IAAA,QAAA7R,EAAAjK,KAAA,iBAAAiK,EAAAlK,KAAA,GAAAkK,EAAA+R,GAAA/R,EAAA,SA4BD9K,EAAUkB,aAAV4J,EAAA+R,IA5BC,WAAAvR,EAwCD1D,GAAmB+D,oBAAoB,CACzCrD,mBACA7J,UAAWwd,IAAoBxd,YAR/B8J,EAlCG+C,EAkCH/C,aACAI,EAnCG2C,EAmCH3C,qBACAC,EApCG0C,EAoCH1C,YACAC,EArCGyC,EAqCHzC,SArCGyC,EAsCHxC,UACA1sB,EAvCGkvB,EAuCHlvB,SAOEusB,EAAqBptB,OAAS,GA9C7B,CAAAuvB,EAAAjK,KAAA,gBA+CGsb,EAA4E,CAChFr5B,KAAM4U,EAAWY,KAAKG,kCACtBuI,QAAS2H,GAjDRmC,EAAAjK,KAAA,GAmDGL,EAAS2b,GAnDZ,aAuDDvT,EAAcL,GAvDb,CAAAuC,EAAAjK,KAAA,gBAwDGub,EAAmD,CACvDt5B,KAAM4U,EAAWY,KAAKI,8BACtBsI,QAAS,CAACuH,eAAcK,gBA1DvBkC,EAAAjK,KAAA,GA4DGL,EAAS4b,GA5DZ,WAgEAJ,EAhEA,CAAAlR,EAAAjK,KAAA,gBAAAiK,EAAAlK,KAAA,GAAAkK,EAAAjK,KAAA,GAkEK+b,GACJX,IACAlhB,IAAE6O,KAAF,CAAQrB,GAARrlB,OAAA45B,GAAyBnU,GAAzB,CAA+CC,KAC/CiB,GArED,QAAAiB,EAAAjK,KAAA,iBAAAiK,EAAAlK,KAAA,GAAAkK,EAAAiS,GAAAjS,EAAA,UAwED9K,EAAUkB,aAAV4J,EAAAiS,IAxEC,YA6EDlU,EA7EC,CAAAiC,EAAAjK,KAAA,gBAAAiK,EAAAjK,KAAA,GA8EGL,EAASwc,GAAuB,CAAChB,gBAAenS,cAAaztB,YA9EhE,yBAAA0uB,EAAA3J,SAAA0J,EAAA,0BAAP,gBAAAqH,EAAAC,GAAA,OAAAxH,EAAAzuB,MAAA8iB,KAAAhF,YAAA,GA6GK,SAASgjB,KAIK,IAAAC,EAAAtB,GAAA,GAAA3hB,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAjB,IACK6P,EADYoT,EACZpT,YAAamS,EADDiB,EACCjB,cAAe5/B,EADhB6gC,EACgB7gC,OAEnC,sBAAA8uB,EAAA0Q,GAAAvb,mBAAAC,KAAO,SAAA6K,EAAO3K,EAAU4K,GAAjB,IAAA6Q,EAAA5hB,EAAA+X,EAAAxY,EAAA,OAAAyG,mBAAAK,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,UACCob,EAAoB,WACxB,OAAO7Q,IAAWiR,oBAAoBhU,gBAGnC2T,EALA,CAAAzQ,EAAA1K,KAAA,gBAAA0K,EAAA3K,KAAA,EAAA2K,EAAA1K,KAAA,EAOuB0B,GAAiBM,eAPxC,UAOKxI,EAPLkR,EAAAxK,KAUI8I,EAVJ,CAAA0B,EAAA1K,KAAA,eAAA0K,EAAA1K,KAAA,EAWO0I,GAAgBqN,0CAA0C,CAC9DnY,UAAWwd,IAAoBxd,UAC/BgL,0BAA2BwS,IAAoBxS,0BAC/CpP,cAdH,cAAAkR,EAAA1K,KAAA,GAkBoB0I,GAAgByT,uBAAuB,CAC1DpjB,KAAMqiB,IAAoBriB,KAC1Bxd,OAAQA,GAAU,GAClBytB,YAAaA,EACbxP,cAtBD,eAAA+X,EAAA7G,EAAAxK,KAkBMnH,EAlBNwY,EAkBMxY,KAlBN2R,EAAA1K,KAAA,GAyBKL,EAASib,GAAmB,CAAC7hB,OAAMiQ,iBAzBxC,QAAA0B,EAAA1K,KAAA,iBAAA0K,EAAA3K,KAAA,GAAA2K,EAAAtK,GAAAsK,EAAA,SA2BDvL,EAAUkB,aAAVqK,EAAAtK,IA3BC,QAAAsK,EAAA1K,KAAA,wBAAA0K,EAAA1K,KAAA,GA8BGL,EAAS,CACb1d,KAAM4U,EAAWY,KAAKK,yBACtBqI,QAAS5kB,IAhCR,yBAAAmvB,EAAApK,SAAAgK,EAAA,kBAAP,gBAAAoH,EAAAC,GAAA,OAAAtH,EAAAhvB,MAAA8iB,KAAAhF,YAAA,GAsCK,SAASkjB,GACd1T,GAIgB,IAAA2T,EAAAxB,GAAA,GACyCnS,GAAlDqI,EADSsL,EACTtL,eAAgBhI,EADPsT,EACOtT,YAAamS,EADpBmB,EACoBnB,cAEpC,sBAAAzF,EAAAqF,GAAAvb,mBAAAC,KAAO,SAAA+R,EAAO7R,EAAU4K,GAAjB,IAAA/C,EAAA5J,EAAA8J,EAAAK,EAAAwT,EAAA,OAAA/b,mBAAAK,KAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,UACCwH,EAAiC+C,IAAWiR,oBAAoBhU,eADjE,CAAAiK,EAAAzR,KAAA,eAAAyR,EAAA5G,OAAA,oBAOCjN,EAAY4J,EAAe5J,aAC3B8J,EAAe9J,EAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAAS5B,aAC7C,GATd,CAAA8V,EAAAzR,KAAA,cAUG,IAAI9gB,MAAM,uCAVb,UAcA8xB,EAAetV,cAAiBsV,EAAevV,UAd/C,CAAAgW,EAAAzR,KAAA,eAAAyR,EAAA5G,OAAA,uBAkBC9C,EAAcnK,EAAU+J,UAAU,SAACpK,GAAD,OAAcA,EAASte,KAAO+xB,EAAe/xB,MACnE,GAnBb,CAAAwyB,EAAAzR,KAAA,gBAAAyR,EAAA5G,OAAA,yBAwBC0Q,EAAmD,CACvDt5B,KAAM4U,EAAWY,KAAKI,8BACtBsI,QAAS,CAACuH,eAAcK,gBA1BrB0J,EAAAzR,KAAA,GA4BCL,EAAS4b,GA5BV,WA+BAJ,EA/BA,CAAA1J,EAAAzR,KAAA,gBAAAyR,EAAAzR,KAAA,GAgCG+b,GACJvU,EACAtN,IAAE6O,KAAK,CAACrB,EAAcK,IACtBiB,GAnCC,yBAAAyI,EAAAnR,SAAAkR,MAAP,gBAAAyE,EAAAC,GAAA,OAAAR,EAAAr6B,MAAA8iB,KAAAhF,YAAA,GAyCK,SAASojB,KAIO,IAAAC,EAAA1B,GAAA,GAAA3hB,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAjB,IACG6P,EADcwT,EACdxT,YAAamS,EADCqB,EACDrB,cAEpB,sBAAAvF,EAAAmF,GAAAvb,mBAAAC,KAAO,SAAAkW,EAAOhW,EAAU4K,GAAjB,IAAA/C,EAAAwR,EAAAjgB,EAAA,OAAAyG,mBAAAK,KAAA,SAAAgW,GAAA,cAAAA,EAAA9V,KAAA8V,EAAA7V,MAAA,UACCwH,EAAiC+C,IAAWiR,oBAAoBhU,eADjE,CAAAqO,EAAA7V,KAAA,eAAA6V,EAAAhL,OAAA,oBAMAsQ,EANA,CAAAtF,EAAA7V,KAAA,gBAAA6V,EAAA9V,KAAA,EAAA8V,EAAAzV,GAQoBsI,GARpBmN,EAAA4F,GASOjU,EAAezO,KATtB8c,EAAA7V,KAAA,EAUkB0B,GAAiBM,eAVnC,cAAA6T,EAAA6F,GAAA7F,EAAA3V,KAAA2V,EAAA8F,GAWc3S,EAXd6M,EAAA+F,GAAA,CASC7iB,KATD8c,EAAA4F,GAUCjiB,UAVDqc,EAAA6F,GAWC1S,YAXD6M,EAAA8F,IAAA9F,EAAA7V,KAAA,GAAA6V,EAAAzV,GAQoCqc,mBARpCzhC,KAAA66B,EAAAzV,GAAAyV,EAAA+F,IAAA,eAAA5C,EAAAnD,EAAA3V,KAQMnH,EARNigB,EAQMjgB,KARN8c,EAAA7V,KAAA,GAaKL,EAASib,GAAmB,CAAC7hB,OAAMiQ,iBAbxC,QAAA6M,EAAA7V,KAAA,iBAAA6V,EAAA9V,KAAA,GAAA8V,EAAAgG,GAAAhG,EAAA,SAeD1W,EAAUkB,aAAVwV,EAAAgG,IAfC,QAAAhG,EAAA7V,KAAA,iBAkBHL,EAAS,CACP1d,KAAM4U,EAAWY,KAAKM,uBAnBrB,yBAAA8d,EAAAvV,SAAAqV,EAAA,kBAAP,gBAAA0D,EAAAC,GAAA,OAAA1D,EAAAv6B,MAAA8iB,KAAAhF,YAAA,YAyBa4iB,6FAAf,SAAA9C,EAA6CzR,EAAgC6D,EAAgCrC,GAA7G,OAAAxJ,mBAAAK,KAAA,SAAAsZ,GAAA,cAAAA,EAAApZ,KAAAoZ,EAAAnZ,MAAA,cAAAmZ,EAAApZ,KAAA,EAAAoZ,EAAA/Y,GAEUsI,GAFVyQ,EAAAsC,GAGYjU,EAAezO,KAH3BogB,EAAAuC,GAIsBrQ,EAAgBzpB,IAAI,SAAC+gB,GAAD,OAAW6E,EAAe5J,UAAU+E,GAAO1jB,KAJrFk6B,EAAAwC,GAKsBtQ,EAAgBzpB,IAAI,SAAC+gB,GAAD,OAAWoE,GAAmBwE,gCAAgC/D,EAAe5J,UAAU+E,MALjIwW,EAAAnZ,KAAA,EAMuB0B,GAAiBM,eANxC,cAAAmX,EAAAyC,GAAAzC,EAAAjZ,KAAAiZ,EAAA0C,GAOmB7S,EAPnBmQ,EAAA2C,GAAA,CAGM/iB,KAHNogB,EAAAsC,GAIMhV,eAJN0S,EAAAuC,GAKMhV,eALNyS,EAAAwC,GAMMniB,UANN2f,EAAAyC,GAOM5S,YAPNmQ,EAAA0C,IAAA1C,EAAAnZ,KAAA,GAAAmZ,EAAA/Y,GAE0B2b,8BAF1B/gC,KAAAm+B,EAAA/Y,GAAA+Y,EAAA2C,IAAA,QAAA3C,EAAAnZ,KAAA,iBAAAmZ,EAAApZ,KAAA,GAAAoZ,EAAA6C,GAAA7C,EAAA,SAUIha,EAAUkB,aAAa8Y,EAAA6C,GAAM5e,SAVjC,yBAAA+b,EAAA7Y,SAAA2Y,EAAA,s9BC3OeyD,oaA7Dcjc,uDAElB,IAAAiD,qUAAAiZ,CAAA,GASCxe,KAAK0C,OAPX2G,EAFK9D,EAEL8D,eACAyI,EAHKvM,EAGLuM,qBACA2B,EAJKlO,EAILkO,uBACAgL,EALKlZ,EAKLkZ,YACAC,EANKnZ,EAMLmZ,eACAC,EAPKpZ,EAOLoZ,eACAC,EARKrZ,EAQLqZ,iBAGEC,EACFjc,EAAAxe,EAAA1B,cAAC2xB,GAAD,CAAgB5U,UAAW4J,EAAe5J,YAGxCmf,IACFC,EACEjc,EAAAxe,EAAA1B,cAACkwB,GAAD,CACEnT,UAAW4J,EAAe5J,UAC1BqS,qBAAsBA,EACtBI,mBAAoBuB,KAK1B,IAAMqL,EAAaJ,EACjB9b,EAAAxe,EAAA1B,cAACitB,GAAD,CACEtQ,MAAO,gCACP4D,QAAS,WACPtI,EAAQkd,+BAA+BxO,EAAe4B,gCAGxD,KAEE8T,EAAaJ,EACjB/b,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAO,eAAgB4D,QAASwb,EAAahZ,UAAW6O,OACnE,KAEEl3B,EAASisB,EAAejsB,QAAoC,aAA1BisB,EAAenpB,OACrD0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAA,qBACAkgB,EAAAxe,EAAA1B,cAAA,WAAM2mB,EAAejsB,SAErB,KAEJ,OACEwlB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBACZ1lB,EACAyhC,EAEDjc,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZic,EACAD,gVCrEUE,idAcgB/jB,EAAqB5Z,QAAQ,CAAC8Z,kIAAzD2P,SAEAmU,EAA0BljB,IAAEhV,IAAI+jB,EAAoB,2BAA4B,4BAE9E,IAAI/pB,MAAM,iCAGZklB,EAAOM,GAAWS,kBAAkBiY,IAChCn+B,0BACF,IAAIC,MAAM,uDAGXklB,ibCzBJ,SAASiZ,KACd,wBAAA9d,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAyE,EAAAlH,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgBmd,GAAgBG,mBAHhC,OAGGlZ,EAHHtE,EAAAI,KAIGhD,EAA+B,CACnCjb,KAAM4U,EAAW6B,KAAKC,iBACtBwH,QAASiE,GAEXzE,EAASzC,GARN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAYHX,EAAUkB,aAAVP,EAAAM,IAZG,yBAAAN,EAAAQ,SAAAZ,EAAA,+LAAP,gBAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,wSCAmBokB,iZASgBnkB,EAAqB5Z,QAAQ,CAAC8Z,yEAAzD2P,SAEA5D,EAAYnL,IAAEc,SAASd,IAAEhV,IAAI+jB,EAAoB,8BAA+B,uBAC/E,CAAC5D,2bCbL,SAASmY,KACd,wBAAAje,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAA8d,EAAAvgB,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGsBud,GAAsBG,kBAH5C,OAGGD,EAHH3d,EAAAI,KAIGhD,EAA6B,CACjCjb,KAAM4U,EAAW+B,YAAYC,eAC7BsH,QAASsd,EAAWpY,WAEtB1F,EAASzC,GARN4C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAYHX,EAAUkB,aAAVP,EAAAM,IAZG,yBAAAN,EAAAQ,SAAAZ,EAAA,+LAAP,gBAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,kvCCYF,IAuCMwkB,oaAAgCld,kEAEhB,IAAAiD,EAAAka,GAAA,GACyBzf,KAAK0C,OAAzC9H,EADW2K,EACX3K,MACP8kB,EAFkBna,EACLma,wBACU9kB,oCAGhB,IAAAkT,EAAA2R,GAAA,GAQCzf,KAAK0C,OANXwE,EAFK4G,EAEL5G,UACAyY,EAHK7R,EAGL6R,YACAtW,EAJKyE,EAILzE,eACAoJ,EALK3E,EAKL2E,mCACAC,EANK5E,EAML4E,qCACAkN,EAPK9R,EAOL8R,0BAGF,IAAKD,IAAgBtW,EACnB,OAAO,KAIT,IAAMwW,EAAyBphB,SAASkhB,EAAY7+B,MAAQ2d,SAAS4K,EAAe7B,UAAU1mB,IACxF89B,EAA8C,gBAA1BvV,EAAenpB,SAA8By/B,EAAYlZ,MAAQoZ,GACrFlB,EACuB,aAA1BtV,EAAenpB,QAA4E,cAAjDmpB,EAAe6B,gCACzDyU,EAAYlZ,MAASoZ,IAA2BxW,EAAe2B,kBAElE,OACEpI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,2BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOgK,EAAerB,SAAUnI,SAAUqH,EAAWsG,SAAUmS,EAAY/4B,OACnFgc,EAAAxe,EAAA1B,cAACo9B,GAAD,CACEzW,eAAgBA,EAChByI,qBAAsBW,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACbjB,eAAgBA,EAChBC,iBAAkBA,EAClBF,iBAAkBrV,EAAe4B,8BAEnCrI,EAAAxe,EAAA1B,cAACyiB,GAAD,8CAMOC,eArFS,SAACC,GACvB,MAAO,CACL0a,wBAAyB1a,EAAMmH,mBAAmBC,gBAClDpD,eAAgBhE,EAAMgY,oBAAoBhU,eAC1CnC,UAAW7B,EAAM2a,gBAAgB9Y,UACjCyY,YAAata,EAAM4a,iBAAiBha,OAIb,SAACzE,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,SACkB9kB,GACrB4G,EAAS0d,MACT1d,EAAS6d,MACT7d,EAASib,GAAmB,CAAC7hB,WAE/B6X,mCANK,SAM8BnJ,GACjC9H,EAASsb,GAAqC,CAACxT,uBAEjDoJ,qCATK,SASgCG,GACnCrR,EAAS0c,GAAuC,CAACrL,qBAEnD+M,0BAZK,WAaHpe,EAAS4c,SA8DAhZ,CAGboa,mvCCxFF,IA4CMU,oaAAgC5d,mEAIlCod,EAFkBS,GAAA,GACmBngB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAAqS,GAAA,GAQCngB,KAAK0C,OANXwE,EAFK4G,EAEL5G,UACAyY,EAHK7R,EAGL6R,YACAtW,EAJKyE,EAILzE,eACAoJ,EALK3E,EAKL2E,mCACAC,EANK5E,EAML4E,qCACAkN,EAPK9R,EAOL8R,0BAGF,IAAKD,IAAgBtW,EACnB,OAAO,KAGT,IAAMuV,EAA8C,gBAA1BvV,EAAenpB,OACnCy+B,EAA4C,aAA1BtV,EAAenpB,OAEvC,OACE0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,2BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOgK,EAAerB,SAAUnI,SAAUqH,EAAWsG,SAAUmS,EAAY/4B,OACnFgc,EAAAxe,EAAA1B,cAACo9B,GAAD,CACEzW,eAAgBA,EAChByI,qBAAsBW,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACbjB,eAAgBA,EAChBC,iBAAkBA,EAClBF,gBAAgB,IAElB9b,EAAAxe,EAAA1B,cAACyiB,GAAD,8CAMOC,eAtFS,SAACC,GACvB,MAAO,CACLgE,eAAgBhE,EAAMgY,oBAAoBhU,eAC1CnC,UAAW7B,EAAM2a,gBAAgB9Y,UACjCyY,YAAata,EAAM4a,iBAAiBha,OAIb,SAACzE,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,WACoB,IAChBnU,EADgB4U,GAAA,GACFzd,GAAd6I,OACP/J,EAAS0d,MACT1d,EAAS6d,MACT7d,EPKC,SAAsCgJ,GAAqC,IAGhF4D,EAFO7C,EADyEoR,GAAA,GAC3DnS,GAAde,OAEP,OAAA6C,EAAAwO,GAAAvb,mBAAAC,KAAO,SAAA+M,EAAO7M,EAAU4K,GAAjB,IAAAtL,EAAAkB,EAAAjD,EAAA,OAAAsC,mBAAAK,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,cAAAyM,EAAA1M,KAAA,EAAA0M,EAAAzM,KAAA,EAEgB0I,GAAgB6V,oBAAoB,CAAC7U,WAFrD,cAEGzK,EAFHwN,EAAAvM,KAIGC,EAA0B,CAC9BlhB,GAAI,GACJ8Z,KAAM,GACNoN,SAAUlH,EAAKla,KACfqhB,SAAU,gBACV/nB,OAAQ,cACR9C,OAAQ,GACRqiB,UAAWqB,EAAKrB,UAChB0L,mBAAoB,GACpBE,YAAa,GACbJ,4BAA6B,GAC7BR,0BAA2B,GAC3BjD,UAAW4E,IAAW6T,iBACtBjV,kBAAkB,GAGdjM,EAAmC,CACvCjb,KAAM4U,EAAWY,KAAKC,qBACtByI,WAtBCsM,EAAAzM,KAAA,EAwBGL,EAASzC,GAxBZ,OAAAuP,EAAAzM,KAAA,iBAAAyM,EAAA1M,KAAA,GAAA0M,EAAArM,GAAAqM,EAAA,SA2BHtN,EAAUkB,aAAVoM,EAAArM,IA3BG,yBAAAqM,EAAAnM,SAAAkM,EAAA,kBAAP,SAAAI,EAAAzC,GAAA,OAAAoC,EAAAlxB,MAAA8iB,KAAAhF,YORaqlB,CAA6B,CAAC9U,aAEzCkH,mCAPK,SAO8BnJ,GACjC9H,EAASsb,GAAqC,CAACxT,mBAAkB0T,eAAe,MAElFtK,qCAVK,SAUgCG,GACnCrR,EAAS0c,GAAuC,CAACrL,iBAAgBmK,eAAe,MAElF4C,0BAbK,WAcHpe,EAAS4c,GAA4B,CAACpB,eAAe,QA+D5C5X,CAGb8a,i7BCpGmBnR,oaAAgBzM,uDAE1B,IAAAiD,qUAAA+a,CAAA,GACuBtgB,KAAK0C,OAA5BrD,EADAkG,EACAlG,MAAOvZ,EADPyf,EACOzf,SAEd,OACE8c,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SAASzD,GACvBvZ,GACC8c,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,YACZhd,8xCCPQ4oB,oaAAoBpM,uDAE9B,IAAAiD,EAAAgb,GAAA,GACoCvgB,KAAK0C,OAAzCrD,EADAkG,EACAlG,MAAOqB,EADP6E,EACO7E,SAAUkO,EADjBrJ,EACiBqJ,YAExB,OACEhM,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,eACZ9C,KAAK6O,aACNjM,EAAAxe,EAAA1B,cAAA,UAAQogB,UAAU,MACVpC,SAAUA,EACVuC,QAAS,SAACC,GACRA,EAAMC,iBACNyL,MAEDvP,yCASb,OAHWkhB,GAAA,GACYvgB,KAAK0C,OAArB8d,UAGL,IAAK,UACH,OAAO5d,EAAAxe,EAAA1B,cAAA,OAAKE,IAAK69B,KAAard,IAAI,KACpC,IAAK,UACH,OAAOR,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,gCACtB,IAAK,UACH,OAAOF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,gCACtB,IAAK,iBACH,OAAOF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,0CACtB,QACE,OAAO,09BCnCM4d,oaAAsBC,IAAMre,kDAEtC,IAAAiD,qUAAAqb,CAAA,GAC8C5gB,KAAK0C,OAAnD5hB,EADAykB,EACAzkB,GAAI8F,EADJ2e,EACI3e,KAAM2Y,EADVgG,EACUhG,YAAashB,EADvBtb,EACuBsb,gBAE9B,OACEje,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBAAgB7a,IAAKnH,GAClC8hB,EAAAxe,EAAA1B,cAAA,UACEkgB,EAAAxe,EAAA1B,cAAA,UAAQugB,QAAS,SAACC,GAChBA,EAAMC,iBACN0d,MAEAje,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,qCAEfF,EAAAxe,EAAA1B,cAAA,YAAOkE,IAETgc,EAAAxe,EAAA1B,cAAA,SAAI6c,sNCvBSuhB,iMACMhgC,EAAYigC,GACnC,OAAOA,EAAWpiB,OAAO,SAACqiB,GAAD,OAAeA,EAAUlgC,KAAOA,IAAIvE,OAAS,oyCCqBrD0kC,eAEnB,SAAAA,EAAYve,GAAU,IAAAH,EAAA,mGAAA2e,CAAAlhB,KAAAihB,IACpB1e,EAAA4e,GAAAnhB,KAAAohB,GAAAH,GAAApkC,KAAAmjB,KAAM0C,KACD2C,MAAQ,CACX1G,OAAQ,GACR2L,QAAS,IAJS/H,yPAFwBD,uDAUrC,IAAA+e,EAAArhB,KAAAuF,EAAA+b,GAAA,GASCthB,KAAK0C,OAPX6e,EAFKhc,EAELgc,oBACApW,EAHK5F,EAGL4F,mBACAqW,EAJKjc,EAILic,kBACAX,EALKtb,EAKLsb,gBACAY,EANKlc,EAMLkc,aACAC,EAPKnc,EAOLmc,oBACAC,EARKpc,EAQLoc,aARKC,EAAAN,GAAA,GAWuBthB,KAAKqF,OAA5B1G,EAXAijB,EAWAjjB,OAAQ2L,EAXRsX,EAWQtX,QAEf,OACE1H,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,sBAEbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBACbF,EAAAxe,EAAA1B,cAACm/B,GAAD,CAASxiB,MAAO,uBAAuB+Y,eACrCxV,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAA,KAAGogB,UAAU,kBACbF,EAAAxe,EAAA1B,cAAA,SAAOoB,KAAK,OAAO4a,YAAY,sBAAsB4S,SAAU,SAACpO,GAC9D,IAAMjc,EAAQ4V,IAASqG,EAAM8R,OAAO/tB,OAAO+hB,OAC3CqY,EAAKzG,SAAS,CAACjc,OAAQ1X,QAI3B2b,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,SACZye,EACE5iB,OAAO,SAACqiB,GACP,OAAKriB,GAGEqiB,EAAUp6B,KAAKqX,SAASU,KAEhClb,IAAI,SAACu9B,GACJ,IAAMc,EAAahB,GAAuBiB,kBAAkBf,EAAUlgC,GAAIqqB,GAE1E,OACEvI,EAAAxe,EAAA1B,cAACs/B,GAAD,CACE3iB,MAAO2hB,EAAUp6B,KACjB45B,SAAUsB,EAAa,UAAY,UACnCphB,UAAU,EACVzY,IAAK+4B,EAAUlgC,GACf8tB,YAAa,WAEPkT,EACFjB,EAAgBG,EAAUlgC,IAE1B2gC,EAAaT,EAAUlgC,WAQvC8hB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,gBACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WAAf,uBAIAF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,uBACZqI,EAAmB1nB,IAAI,SAACu9B,GACvB,OACEpe,EAAAxe,EAAA1B,cAACu/B,GAAD,CACEh6B,IAAK+4B,EAAUlgC,GACfA,GAAIkgC,EAAUlgC,GACd8F,KAAMo6B,EAAUp6B,KAChB2Y,YAAayhB,EAAUzhB,YACvBshB,gBAAiB,WACfA,EAAgBG,EAAUlgC,UAOpC8hB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZqI,EAAmB5uB,OAAS,GAC3BqmB,EAAAxe,EAAA1B,cAACkgB,EAAAxe,EAAM89B,SAAP,KACEtf,EAAAxe,EAAA1B,cAAA,SAAOoB,KAAK,OAAO4a,YAAY,mBAAmB4S,SAAU,SAACpO,GAC3D,IAAMjc,EAAQ4V,IAASqG,EAAM8R,OAAO/tB,OAAO+hB,OAC3CqY,EAAKzG,SAAS,CAACtQ,QAASrjB,OAE1B2b,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,sBAAsBmD,QAAS,CAAC,QAASS,QAAS,WAClEue,EAAkBlX,OAIxB1H,EAAAxe,EAAA1B,cAAC4jB,GAAD,CAAajH,MAAM,2BAA2BmD,QAAS,CAAC,QAASS,QAAS,WACxEye,UAMR9e,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,iBACZ6e,w+BC7HUQ,ybAWgBlnB,EAAqB5Z,QAAQ,CAAC8Z,qGAAzD2P,SACAV,EAAYrjB,IAAI+jB,EAAoB,+BACrCtO,MAAMC,QAAQ2N,4CACV,kBAGHgY,EAAahY,EAAU3mB,IAAI,SAACmZ,GAIhC,MAAO,CAAC9b,GAHG+b,IAAS9V,IAAI6V,EAAY,KAAM,KAG9BhW,KAFCiW,IAAS9V,IAAI6V,EAAY,OAAQ,KAE5B2C,YADE1C,IAAS9V,IAAI6V,EAAY,cAAe,0BAIvDwlB,wLAGsB5X,uHAKqBA,GAA3CF,YAAS+X,oBAAiBhnB,cAE3BmN,EAAY6Z,EAAgB5+B,IAAI,SAAC3C,GACrC,2BAAAoD,OACYpD,EADZ,qCAAAoD,OACkDpD,EADlD,iBAAAoD,OACoEomB,EADpE,4CAQInP,4BAENqN,EAAUzjB,KAAK,sBAGIkW,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACAymB,EAAcv7B,IAAI8U,EAAM,OAAQ,4BAE9BG,gBAGFqP,EAAckX,KAAQF,EAAgB5+B,IAAI,SAAC3C,GAC7C,IAAMmH,EAAG,mBAAA/D,OAAsBpD,GACzB+a,EAAO9U,IAAIu7B,EAAar6B,EAAK,MACnC,OAAK4T,EAGsB,CACzB/a,GAAI+b,IAAS9V,IAAI8U,EAAM,KAAM,KAC7ByO,QAASzN,IAAS9V,IAAI8U,EAAM,UAAW,KACvCmH,KAAMnG,IAAS9V,IAAI8U,EAAM,aAAc,MALhC,0BAUNwP,wcCnDJ,SAASmX,KACd,sBAAAphB,EAAAqhB,GAAAphB,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAA+f,EAAAxiB,EAAA,OAAAsC,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC6BsgB,GAA6BK,0BAD1D,cACCjB,EADD5f,EAAAI,KAEChD,EAAwC,CAC5Cjb,KAAM4U,EAAWmB,oBAAoBC,yBACrCkI,QAASuf,GAJN5f,EAAAE,KAAA,EAOCL,EAASzC,GAPV,wBAAA4C,EAAAQ,SAAAZ,MAAP,gBAAAa,GAAA,OAAAhB,EAAAlkB,MAAA8iB,KAAAhF,YAAA,GAWK,SAAS0nB,GAAqB5hC,GACnC,sBAAAstB,EAAAqU,GAAAphB,mBAAAC,KAAO,SAAA+M,EAAO7M,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,cACC9C,EAAqC,CACzCjb,KAAM4U,EAAWmB,oBAAoBE,uBACrCiI,QAASlhB,GAHNwtB,EAAAzM,KAAA,EAKCL,EAASzC,GALV,wBAAAuP,EAAAnM,SAAAkM,MAAP,gBAAAI,GAAA,OAAAL,EAAAlxB,MAAA8iB,KAAAhF,YAAA,GASK,SAAS2nB,GAAwB7hC,GACtC,sBAAA6qB,EAAA8W,GAAAphB,mBAAAC,KAAO,SAAAuK,EAAOrK,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cACC9C,EAAwC,CAC5Cjb,KAAM4U,EAAWmB,oBAAoBG,0BACrCgI,QAASlhB,GAHNgrB,EAAAjK,KAAA,EAKCL,EAASzC,GALV,wBAAA+M,EAAA3J,SAAA0J,MAAP,gBAAAG,GAAA,OAAAL,EAAAzuB,MAAA8iB,KAAAhF,YAAA,GAmCK,SAAS4nB,GAAYC,GAC1B,sBAAA3W,EAAAuW,GAAAphB,mBAAAC,KAAO,SAAA6K,EAAO3K,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cACC9C,EAA4B,CAChCjb,KAAM4U,EAAWmB,oBAAoBK,cACrC8H,QAAS6gB,GAHNtW,EAAA1K,KAAA,EAKCL,EAASzC,GALV,wBAAAwN,EAAApK,SAAAgK,MAAP,gBAAAY,GAAA,OAAAb,EAAAhvB,MAAA8iB,KAAAhF,YAAA,GASK,SAAS8nB,GAAeC,GAC7B,sBAAA3P,EAAAqP,GAAAphB,mBAAAC,KAAO,SAAA+R,EAAO7R,GAAP,IAAAzC,EAAA,OAAAsC,mBAAAK,KAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,cACC9C,EAA+B,CACnCjb,KAAM4U,EAAWmB,oBAAoBI,iBACrC+H,QAAS+gB,GAHNzP,EAAAzR,KAAA,EAKCL,EAASzC,GALV,wBAAAuU,EAAAnR,SAAAkR,MAAP,gBAAArG,GAAA,OAAAoG,EAAAl2B,MAAA8iB,KAAAhF,YAAA,g7BCpFmBgoB,oaAAiCrC,IAAMre,kDAEjD,IAAAiD,qUAAA0d,CAAA,GACiDjjB,KAAK0C,OAAtDyI,EADA5F,EACA4F,mBAAoBE,EADpB9F,EACoB8F,YAAavlB,EADjCyf,EACiCzf,SAExC,OACE8c,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,4BACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,iCACAkgB,EAAAxe,EAAA1B,cAAA,UACGyoB,EAAmB1nB,IAAI,SAACu9B,GACvB,OACEpe,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAK+4B,EAAUlgC,IAAKkgC,EAAUp6B,UAK1Cgc,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAA,kCACAkgB,EAAAxe,EAAA1B,cAAA,UACG2oB,EAAY5nB,IAAI,SAACy/B,GAChB,OACEtgB,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAKi7B,EAAOpiC,IAAI8hB,EAAAxe,EAAA1B,cAAA,KAAGoY,KAAMooB,EAAOlgB,KAAMgS,OAAO,UAAUkO,EAAOlgB,WAKzEld,GACC8c,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,YACZhd,0xCCjBb,IA2CMq9B,oaAA8C7gB,mEAIhDod,EAFkB0D,GAAA,GACmBpjB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAAsV,GAAA,GAWCpjB,KAAK0C,OATXwE,EAFK4G,EAEL5G,UACAyY,EAHK7R,EAGL6R,YACA4B,EAJKzT,EAILyT,oBACApW,EALK2C,EAKL3C,mBACAkY,EANKvV,EAMLuV,2BACAC,EAPKxV,EAOLwV,8BACAC,EARKzV,EAQLyV,gCACAV,EATK/U,EASL+U,SACAxX,EAVKyC,EAULzC,YAGF,IAAKsU,EACH,OAAO,KAGT,IAAId,EAAO,KACX,OAAQgE,GACN,IAAK,OACHhE,EACEjc,EAAAxe,EAAA1B,cAAC8gC,GAAD,CACEjC,oBAAqBA,EACrBpW,mBAAoBA,EACpBqW,kBAAmB,SAAClX,GAClBiZ,EAAgCjZ,IAElCuW,gBAAiB,SAAC//B,GAChBwiC,EAA8BxiC,IAEhC2gC,aAAc,SAAC3gC,GACbuiC,EAA2BviC,IAE7B4gC,oBAAqB,WACnB/mB,EAAQ8oB,oBAId,MACF,IAAK,SACH5E,EACEjc,EAAAxe,EAAA1B,cAACghC,GAAD,CACEvY,mBAAoBA,EACpBE,YAAaA,GAEbzI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACitB,GAAD,CAAYtQ,MAAM,eAAe4D,QAAS,WAAOtI,EAAQ8oB,sBAMnE,OACE7gB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,+BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAM,sBAAsBQ,SAAUqH,IAC7C2X,EACDjc,EAAAxe,EAAA1B,cAACyiB,GAAD,8CAMOC,eAhHS,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAM2a,gBAAgB9Y,UACjCyY,YAAata,EAAM4a,iBAAiBha,KACpCsb,oBAAqBlc,EAAMse,wBAAwBpC,oBACnDpW,mBAAoB9F,EAAMse,wBAAwBxY,mBAClD0X,SAAUxd,EAAMse,wBAAwBd,SACxCxX,YAAahG,EAAMse,wBAAwBtY,cAIpB,SAAC7J,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,WAEHle,EAAS0d,MACT1d,EAAS6d,MACT7d,EAASghB,OAEXa,2BANK,SAMsBviC,GACzB0gB,EAASkhB,GAAqB5hC,KAEhCwiC,8BATK,SASyBxiC,GAC5B0gB,EAASmhB,GAAwB7hC,KAEnCyiC,gCAZK,SAY2BjZ,GAC9B9I,EFUC,SAA2B8I,GAChC,OAAAwI,EAAA2P,GAAAphB,mBAAAC,KAAO,SAAAyR,EAAOvR,EAAU4K,GAAjB,IAAAC,EAAAlB,EAAA9P,EAAAgQ,EAAA,OAAAhK,mBAAAK,KAAA,SAAAsR,GAAA,cAAAA,EAAApR,KAAAoR,EAAAnR,MAAA,UAAAmR,EAAApR,KAAA,EAEE0I,EAFF,CAAA0I,EAAAnR,KAAA,cAGK,IAAI9gB,MAAM,iCAHf,UAMGsrB,EAAuBD,IACvBjB,EAAqBkB,EAAUsX,wBAAwBxY,mBAP1D,CAAA6H,EAAAnR,KAAA,cASK,IAAI9gB,MAAM,8BATf,cAAAiyB,EAAAnR,KAAA,EAWqB0B,GAAiBM,eAXtC,cAWGxI,EAXH2X,EAAAjR,KAAAiR,EAAAnR,KAAA,GAYuBsgB,GAA6ByB,kBAAkB,CACvEtZ,UACA+X,gBAAiBzX,KAAKO,EAAmB1nB,IAAI,SAACu9B,GAAD,OAAeA,EAAUlgC,MACtEua,cAfC,eAYGgQ,EAZH2H,EAAAjR,KAAAiR,EAAAnR,KAAA,GAiBGL,EAASshB,GAAezX,IAjB3B,eAAA2H,EAAAnR,KAAA,GAkBGL,EAASohB,GAAY,WAlBxB,QAAA5P,EAAAnR,KAAA,iBAAAmR,EAAApR,KAAA,GAAAoR,EAAA/Q,GAAA+Q,EAAA,SAoBHhS,EAAUkB,aAAV8Q,EAAA/Q,IApBG,yBAAA+Q,EAAA7Q,SAAA4Q,EAAA,kBAAP,SAAAG,EAAAC,GAAA,OAAAL,EAAA51B,MAAA8iB,KAAAhF,YAAA,IAAA8X,EEXa0O,CAAkBlX,OAuFlBlF,CAGb+d,mvCCjHF,IAmDMU,oaAAoCvhB,mEAItCod,EAFkBoE,GAAA,GACmB9jB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAAgW,GAAA,GAWC9jB,KAAK0C,OATXwE,EAFK4G,EAEL5G,UACAyY,EAHK7R,EAGL6R,YACAtW,EAJKyE,EAILzE,eACAkY,EALKzT,EAKLyT,oBACApW,EANK2C,EAML3C,mBACAkY,EAPKvV,EAOLuV,2BACAC,EARKxV,EAQLwV,8BACAC,EATKzV,EASLyV,gCACAQ,EAVKjW,EAULiW,qBAGF,IAAKpE,IAAgBtW,EACnB,OAAO,KAGT,IAAIwV,EAAO,KACX,OAAQxV,EAAenpB,QACrB,IAAK,cACH2+B,EACEjc,EAAAxe,EAAA1B,cAAC8gC,GAAD,CACEjC,oBAAqBA,EACrBpW,mBAAoBA,EACpBwW,aAAc,CACZ/e,EAAAxe,EAAA1B,cAACitB,GAAD,CACE1nB,IAAI,OACJoX,MAAO,gCACP4D,QAAS,WACPtI,EAAQkd,+BAA+BxO,EAAe4B,iCAI5DuW,kBAAmB,SAAClX,GAClBiZ,EAAgCjZ,IAElCuW,gBAAiB,SAAC//B,GAChBwiC,EAA8BxiC,IAEhC2gC,aAAc,SAAC3gC,GACbuiC,EAA2BviC,IAE7B4gC,oBAAqB,WACnBqC,OAIN,MACF,IAAK,WACHlF,EACEjc,EAAAxe,EAAA1B,cAACghC,GAAD,CACEvY,mBAAoB9B,EAAe8B,mBACnCE,YAAahC,EAAegC,aAE5BzI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACitB,GAAD,CACEtQ,MAAO,gCACP4D,QAAS,WACPtI,EAAQkd,+BAA+BxO,EAAe4B,kCAQpE,OACErI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,+BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAM,sBAAsBQ,SAAUqH,IAC7C2X,EACDjc,EAAAxe,EAAA1B,cAACyiB,GAAD,8CAMOC,eAtIS,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAM2a,gBAAgB9Y,UACjCyY,YAAata,EAAM4a,iBAAiBha,KACpCoD,eAAgBhE,EAAMgY,oBAAoBhU,eAC1CkY,oBAAqBlc,EAAMse,wBAAwBpC,oBACnDpW,mBAAoB9F,EAAMse,wBAAwBxY,qBAI3B,SAAC3J,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,WACoB,IAChB9kB,EADgBkpB,GAAA,GACJphB,GAAZ9H,KACP4G,EAAS0d,MACT1d,EAAS6d,MACT7d,EAASghB,MACThhB,EAASib,GAAmB,CAAC7hB,WAE/ByoB,2BARK,SAQsBviC,GACzB0gB,EAASkhB,GAAqB5hC,KAEhCwiC,8BAXK,SAWyBxiC,GAC5B0gB,EAASmhB,GAAwB7hC,KAEnCyiC,gCAdK,SAc2BjZ,GAC9B9I,EjBmHC,SAAgC8I,GACrC,OAAAwI,EAAA8J,GAAAvb,mBAAAC,KAAO,SAAAyR,EAAOvR,EAAU4K,GAAjB,IAAAC,EAAAhD,EAAAoC,EAAA,OAAApK,mBAAAK,KAAA,SAAAsR,GAAA,cAAAA,EAAApR,KAAAoR,EAAAnR,MAAA,UACCwK,EAAuBD,IACvB/C,EAAiBgD,EAAUgR,oBAAoBhU,eAFhD,CAAA2J,EAAAnR,KAAA,eAAAmR,EAAAtG,OAAA,wBAOCjB,EAAeY,EAAUsX,wBAAwBxY,mBAAmB1nB,IAAI,SAACu9B,GAC7E,OAAOA,EAAUlgC,KARdkyB,EAAApR,KAAA,EAAAoR,EAAA/Q,GAYGsI,GAZHyI,EAAAsK,GAaDhT,EAbC0I,EAAAuK,GAcD9R,EAdCuH,EAAAwK,GAeKnU,EAAezO,KAfpBoY,EAAAnR,KAAA,GAgBgB0B,GAAiBM,eAhBjC,eAAAmP,EAAAyK,GAAAzK,EAAAjR,KAAAiR,EAAA0K,GAAA,CAaDpT,QAbC0I,EAAAsK,GAcD7R,aAdCuH,EAAAuK,GAeD3iB,KAfCoY,EAAAwK,GAgBDniB,UAhBC2X,EAAAyK,IAAAzK,EAAAnR,KAAA,GAAAmR,EAAA/Q,GAYmB+hB,2CAZnBnnC,KAAAm2B,EAAA/Q,GAAA+Q,EAAA0K,IAAA,eAAA1K,EAAAnR,KAAA,GAkBGL,EAASwc,MAlBZ,QAAAhL,EAAAnR,KAAA,iBAAAmR,EAAApR,KAAA,GAAAoR,EAAA2K,GAAA3K,EAAA,SAoBHhS,EAAUkB,aAAV8Q,EAAA2K,IApBG,yBAAA3K,EAAA7Q,SAAA4Q,EAAA,kBAAP,SAAAhG,EAAAC,GAAA,OAAA8F,EAAA51B,MAAA8iB,KAAAhF,YAAA,IAAA8X,EiBpHamR,CAAuB3Z,KAElCyZ,qBAjBK,WAkBHviB,EAASwc,SAyGA5Y,CAGbye,62CCrJF,IA0FMK,oaAAyB5hB,mEAG3Bod,EAFkByE,GAAA,GACmBnkB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAAqW,GAAA,GAICnkB,KAAK0C,OAFXid,EAFK7R,EAEL6R,YACAyE,EAHKtW,EAGLsW,iBAGF,OAAKzE,GAAgByE,EAKnBxhB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAM,gBAAgBQ,SAAS,GAAG2N,SAAUmS,EAAY/4B,OA7E3D,SAACw9B,GACZ,OAAIA,EAAiB7nC,OAWnBqmB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,oBACbF,EAAAxe,EAAA1B,cAAA,SAAOogB,UAAU,oCACfF,EAAAxe,EAAA1B,cAAA,aACEkgB,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAI,2BACN2a,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eAAd,gBACAF,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eAAd,UACAF,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eAAd,gBACAF,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eAAd,UACAF,EAAAxe,EAAA1B,cAAA,MAAIogB,UAAU,eAAd,aAGJF,EAAAxe,EAAA1B,cAAA,aACG0hC,EAAiB3gC,IAAI,SAAC4gC,GACrB,IAAI3oB,EAAM,GAMV,OAJEA,EAD0B,gBAAxB2oB,EAAankC,OACT,8BAAgCmkC,EAAazpB,KAE7C,2BAA6BypB,EAAazpB,KAGhDgI,EAAAxe,EAAA1B,cAAA,MAAIuF,IAAKo8B,EAAavjC,IACpB8hB,EAAAxe,EAAA1B,cAAA,UACG0tB,KAAOiU,EAAaC,SAAS/S,OAAO,gBAEvC3O,EAAAxe,EAAA1B,cAAA,UACG2hC,EAAaE,mBAEhB3hB,EAAAxe,EAAA1B,cAAA,UACG2hC,EAAaG,aAEhB5hB,EAAAxe,EAAA1B,cAAA,UACkB2hC,EAAankC,OAnD5C+3B,MAAM,KACNx0B,IAAI,SAACy0B,GACJ,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAI10B,MAAM,KAEhDuB,KAAK,MAiDQ6d,EAAAxe,EAAA1B,cAAA,UACIkgB,EAAAxe,EAAA1B,cAAA,KAAGoY,KAAMY,GAAT,gBA3ChBkH,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,aACbF,EAAAxe,EAAA1B,cAAA,OAAK+hC,MAAM,sBAAX,+BAyECC,CAAKN,GACNxhB,EAAAxe,EAAA1B,cAACyiB,GAAD,OAPK,4CAaEC,eApHS,SAACC,GACvB,MAAO,CACLsa,YAAata,EAAM4a,iBAAiBha,KACpCme,iBAAkB/e,EAAMsf,sBAAsBP,mBAIvB,SAAC5iB,EAAoBkB,GAC9C,MAAO,CACCgd,0BADDre,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEGL,EAAS0d,MAFZ,cAAAvd,EAAAE,KAAA,EAGGL,ElCmQV,eAAAojB,EAAAhZ,GAAAvK,mBAAAC,KAAO,SAAAujB,EAAOrjB,EAAe4K,GAAtB,IAAAnG,EAAAlqB,EAAA,OAAAslB,mBAAAK,KAAA,SAAAojB,GAAA,cAAAA,EAAAljB,KAAAkjB,EAAAjjB,MAAA,UACCoE,EAAOmG,IAAW6T,iBAAiBha,KADpC,CAAA6e,EAAAjjB,KAAA,eAAAijB,EAAApY,OAAA,wBAAAoY,EAAAjjB,KAAA,EAKc8E,GAAyBoe,wBAAwB9e,EAAKnlB,IALpE,OAKC/E,EALD+oC,EAAA/iB,KAMLP,EAAS,CACP1d,KAAM4U,EAAWK,cAAcM,yBAC/B2I,QAASjmB,IARN,wBAAA+oC,EAAA3iB,SAAA0iB,MAAP,gBAAAG,EAAAC,GAAA,OAAAL,EAAA1nC,MAAA8iB,KAAAhF,YAAA,IkCtQO,wBAAA2G,EAAAQ,SAAAZ,KAAA2jB,gLAAA,kBAAAA,EAAAhoC,MAAA8iB,KAAAhF,cAAA,MAAAkqB,GA4GM9f,CAGb8e,wzBCnBaiB,oaAjGO7iB,uDAGlB,OACEM,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,YACEkgB,EAAAxe,EAAA1B,cAAC0iC,EAAA,EAAD,KACExiB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KACf,WACC,OAAO3iB,EAAAxe,EAAA1B,cAAC8iC,GAAD,QAGX5iB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,4BACT,SAAAnkB,GAAa,IAAXqkB,EAAWrkB,EAAXqkB,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACgjC,GAAD,CAAgB/kB,gBAAiB8kB,EAAME,OAAO7kC,QAKtD8hB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,mCACT,SAAAnX,GAAa,IAAXqX,EAAWrX,EAAXqX,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACkjC,GAAD,CAAwBhf,eAAgB6e,EAAME,OAAOE,UAK7DjjB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,+BACT,SAAA5Z,GAAa,IAAX8Z,EAAW9Z,EAAX8Z,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACojC,GAAD,CAAiBlf,eAAgB6e,EAAME,OAAOE,UAKtDjjB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAAzS,GAAa,IAAX2S,EAAW3S,EAAX2S,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACqjC,GAAD,CAAkBnf,eAAgB6e,EAAME,OAAOE,UAKvDjjB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAArZ,GAAa,IAAXuZ,EAAWvZ,EAAXuZ,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACsjC,GAAD,CAAyBprB,KAAM6qB,EAAME,OAAO/qB,UAKpDgI,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,6BACT,SAAAnS,GAAa,IAAXqS,EAAWrS,EAAXqS,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACujC,GAAD,CAAyB1a,OAAQka,EAAME,OAAOpa,YAKtD3I,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,mCACV3iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACwjC,GAAD,QAGJtjB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,yCACT,SAAAhO,GAAa,IAAXkO,EAAWlO,EAAXkO,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACyjC,GAAD,CAA6BvrB,KAAM6qB,EAAME,OAAO/qB,UAKxDgI,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,kBACT,SAAA9N,GAAaA,EAAXgO,MACD,OACE7iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAC0jC,GAAD,q+BCrFCC,wPAEcnrB,qHACCA,GAAzBN,SAAMiQ,gBACP1P,4DAE6BP,8BAAwBiQ,4dA8BxC5P,EAAqB5Z,QAAQ,CAAC8Z,oBAA3CU,SAEAgL,EAAa9K,IAAEhV,IAAI8U,EAAM,2BAA4B,IACrDoL,EAAiBlL,IAAEhV,IAAI8U,EAAM,qCAAsC,IACpEgL,GAAeI,wBACZjL,gBAGFjgB,EAAqC,CACzCmrB,UAAWnL,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,8BAA+B,KACjEuL,WAAY,CACVzG,gBAAiB5E,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,mBAAoB,KACtEI,mBAAoBtL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,qBAAsB,KAC3EK,aAAcvL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,KAAM,KACrDM,eAAgBxL,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,OAAQ,KACzDO,UAAW,CACT1mB,GAAIib,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,YACrCrgB,KAAMmV,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,gBAAiB,KACxDZ,MAAOtK,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,iBAAkB,KAC1DR,MAAM,EACNC,QAAQ,GAEVxmB,OAAQ6b,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,sBAAuB,KAAKjJ,cAAcyJ,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiC5L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,qBAAsB,KACxFW,cAAe7L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,8BAA+B,KAC/EY,kBAAmB9L,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,kCAAmC,MAEzFxH,UAAWvD,EAAewD,uBAAuB,CAC/CrD,WAAYN,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,oBAAqB,KAClE3K,YAAaP,IAAEc,SAASd,IAAEhV,IAAIkgB,EAAgB,aAAc,OAE9Da,gBAAiB/L,IACdgM,QAAQhM,IAAEhV,IAAIkgB,EAAgB,kBAAmB,KACjDxjB,IAAI,SAACa,GAOJ,MAN8C,CAC5CsW,KAAMmB,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,OAAQ,KACrC0jB,SAAUjM,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,WAAY,KAC7C2jB,SAAUlM,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ6b,IAAEc,SAASd,IAAEhV,IAAIzC,EAAM,SAAU,4BAO5CvI,uMAIPmf,qHAEmDA,GAA5CoM,iBAAcjM,cAAWwP,gBAC1B1P,oEAEkCmM,8BAAgCuD,2DAKrD5P,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SACfd,IAAEhV,IAAI8U,EAAM,+DAAgE,OACxEjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,gDAAiD,OAChF3b,GAAW0a,wBACRoB,kCAED,CAACpB,0MAIRM,qHAEmDA,GAA5CoM,iBAAcjM,cAAWwP,gBAC1B1P,kEAEgCmM,8BAAgCuD,2DAKnD5P,EAAqB5Z,QAAQ,CAAC8Z,QAAOE,wBAAlDQ,SACA3b,EAAS6b,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,6DAA8D,OAC9FjB,EAAOmB,IAAEc,SAASd,IAAEhV,IAAI8U,EAAM,8CAA+C,OAC9E3b,GAAW0a,wBACRoB,kCAED,CAACpB,isDC3BG0rB,eAvFb,SAAAA,EAAY5jB,GAAU,IAAAH,EAAA,mGAAAgkB,CAAAvmB,KAAAsmB,IACpB/jB,EAAAikB,GAAAxmB,KAAAymB,GAAAH,GAAAzpC,KAAAmjB,KAAM0C,KAED2C,MAAQ,CACX6B,UAAW,GACXE,WAAY,MALM7E,yPAFuBD,+MAYrCtC,KAAK0mB,8IAGJ,IAAArF,EAAArhB,KAAA4hB,EAAA+E,GAAA,GAC6B3mB,KAAKqF,OAAlC+B,EADAwa,EACAxa,WAAYF,EADZ0a,EACY1a,UACZnM,EAFA4rB,GAAA,GAEa3mB,KAAK0C,OAAlB3H,MAEHsE,EAAQ,GACRunB,EAAU,KACd,GAAIxf,EAAY,CAEd,IAAImR,EAC8C,aAAhDnR,EAAWM,eAAeG,mBACkB,YAA5CT,EAAWM,eAAeE,cACxB,WAAa,SAEjBvI,EAAQ+H,EAAWC,mBACnBuf,EACEhkB,EAAAxe,EAAA1B,cAACm3B,GAAD,CAASzS,WAAYA,EACZ+M,6BAA8B,WAAQkN,EAAKwF,YAAYzf,EAAYF,IACnE4R,yBAA0B,WAAQuI,EAAKyF,QAAQ1f,IAC/C2R,sBAAuB,WAAQsI,EAAK0F,KAAK3f,IACzCmR,OAAQA,EACRxd,MAAOA,IAKpB,OACE6H,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,oBACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOA,EAAOQ,SAAS,UAAU0N,kBAAkB,IAC1DqZ,EACDhkB,EAAAxe,EAAA1B,cAACyiB,GAAD,yFAKYiC,EAAwBF,kGAClCmO,GAAQiC,YAAY,CACxB7X,UAAW2H,EAAW3H,UACtB+H,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BH,4LAIUE,8FACNif,QACUjf,EAAWE,sBACR/D,GAAiBM,8CACrB7D,KAAK0C,MAAM3H,YAFxBuM,kBACAjM,eACAwP,gCAH6C2Q,uEAKzCxb,KAAK0mB,0LAGFtf,8FACHif,QACUjf,EAAWE,sBACR/D,GAAiBM,8CACrB7D,KAAK0C,MAAM3H,YAFxBuM,kBACAjM,eACAwP,gCAH6CkR,oEAKzC/b,KAAK0mB,qSAIQL,GAAyCta,oBAAoB,CAC9EnR,KAAMoF,KAAK0C,MAAM9H,KACjBiQ,YAAa7K,KAAK0C,MAAM3H,eAFpBhf,SAKNikB,KAAK4a,SAAS,CACZ1T,UAAWnrB,EAAKmrB,UAChBE,WAAYrrB,EAAKqrB,m4BCxFF4f,8PAEkB9rB,mHAETA,GAAnBN,SAAMG,UAEPI,uFAKoBP,8BAAwBG,ydAkCjBE,EAAqB5Z,QAAQ,CAAC8Z,oBAAzD2P,SACAC,EAAuBhP,IAAEhV,IAAI+jB,EAAoB,4BAA6B,0BAE5E9O,gBAGFjgB,EAAsC,CAC1CmrB,UAAWnL,IAAEc,SAASd,IAAEhV,IAAI+jB,EAAoB,8BAA+B,KAC/EzB,eAAgB,CACdvoB,GAAIib,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,KAAM,KACjDnQ,KAAMmB,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,OAAQ,KACrD/C,SAAUjM,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,WAAY,KAC7D9C,SAAUpL,IAAS9V,IAAIgkB,EAAsB,WAAY,KACzD7qB,OAAQ6b,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,SAAU,KACzD3tB,OAAQ2e,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,SAAU,KACzDvD,UAAWjB,GAAWS,kBAAkBjgB,IAAIgkB,EAAsB,cAClEE,4BAA6BlP,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,+BAAgC,KACpGN,0BAA2B1O,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,6BAA8B,KAChGC,iBAAkB9N,QAAQnW,IAAIgkB,EAAsB,2BAA2B,IAC/EtL,UAAWvD,EAAewD,uBAAuB,CAC/CrD,WAAYN,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,oBAAqB,KACxEzO,YAAaP,IAAEc,SAASd,IAAEhV,IAAIgkB,EAAsB,aAAc,OAEpEI,mBAAoBhB,GAAwBiB,oBAAoBrkB,IAAIgkB,EAAsB,qBAAsB,KAChHM,YAAahB,GAAiBiB,mBAAmBvkB,IAAIgkB,EAAsB,cAAe,yBAIvFhvB,y2DCtEUkrC,eAEnB,SAAAA,EAAYvkB,GAAU,IAAAH,EAAA,mGAAA2kB,CAAAlnB,KAAAinB,IACpB1kB,EAAA4kB,GAAAnnB,KAAAonB,GAAAH,GAAApqC,KAAAmjB,KAAM0C,KAED2C,MAAQ,CACX6B,UAAW,GACXmC,eAAgB,MALE9G,yPAFoCD,+MAYlDtC,KAAK0mB,8IAGJ,IAAA9E,EAAAyF,GAAA,GACiCrnB,KAAKqF,OAAtC6B,EADA0a,EACA1a,UAAWmC,EADXuY,EACWvY,eACXtO,EAFAssB,GAAA,GAEarnB,KAAK0C,OAAlB3H,MAEP,IAAKsO,EAAiB,OAAO,KAE7B,IAAMjsB,EAASisB,EAAejsB,QAAoC,aAA1BisB,EAAenpB,OACrD0iB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,UACbF,EAAAxe,EAAA1B,cAAA,qBACAkgB,EAAAxe,EAAA1B,cAAA,WAAM2mB,EAAejsB,SAErB,KAEE0hC,EAAazV,EAAe4B,4BAChCrI,EAAAxe,EAAA1B,cAACitB,GAAD,CACEtQ,MAAO,gCACP4D,QAAS,WACPtI,EAAQkd,+BAA+BxO,EAAe4B,4BAA6BlQ,MAGrF,KAEJ,OACE6H,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,2BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOgK,EAAerB,SAAUnI,SAAUqH,EAAWqG,kBAAkB,IAC/E3K,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,kBACZ1lB,EACDwlB,EAAAxe,EAAA1B,cAAC2xB,GAAD,CAAgB5U,UAAW4J,EAAe5J,YAE1CmD,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACZgc,IAGLlc,EAAAxe,EAAA1B,cAACyiB,GAAD,kMAMsBnF,KAAK0C,OAAxB9H,SAAMG,mBACMisB,GAAgCM,wBAAwB,CAAC1sB,OAAMG,iBAA5Ehf,SACNikB,KAAK4a,SAAS7+B,23CC9DlB,IA4BMwrC,oaAAoDjlB,mEAItDod,EAFkB8H,GAAA,GACmBxnB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAA0Z,GAAA,GAKCxnB,KAAK0C,OAHXwE,EAFK4G,EAEL5G,UACAmC,EAHKyE,EAGLzE,eACAtO,EAJK+S,EAIL/S,MAGF,OAAKsO,EAKHzG,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,+BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAM,sBAAsBQ,SAAUqH,IAC9CtE,EAAAxe,EAAA1B,cAACghC,GAAD,CACEvY,mBAAoB9B,EAAe8B,mBACnCE,YAAahC,EAAegC,aAE5BzI,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACitB,GAAD,CACEtQ,MAAO,gCACP4D,QAAS,WACPtI,EAAQkd,+BAA+BxO,EAAe4B,4BAA6BlQ,QAK3F6H,EAAAxe,EAAA1B,cAACyiB,GAAD,OAnBK,4CAyBEC,eApES,SAACC,GACvB,MAAO,CACL6B,UAAW7B,EAAM2a,gBAAgB9Y,UACjCmC,eAAgBhE,EAAMgY,oBAAoBhU,iBAInB,SAAC7H,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,WACoB,IAAA+H,EAAAD,GAAA,GACG9kB,GAAnB9H,EADgB6sB,EAChB7sB,KAAMG,EADU0sB,EACV1sB,MACbyG,EAAS6d,MACT7d,EAASib,GAAmB,CAAC7hB,OAAMiQ,YAAa9P,QAwDvCqK,CAGbmiB,wzBC5BaG,oaAhDgBplB,uDAI3B,OACEM,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,YACEkgB,EAAAxe,EAAA1B,cAACilC,GAAA,EAAD,KACE/kB,EAAAxe,EAAA1B,cAAC0iC,EAAA,EAAD,KACExiB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAAnkB,GAAuB,IAArBqkB,EAAqBrkB,EAArBqkB,MAAO5qB,EAAcuG,EAAdvG,SACFM,EAAQnZ,iBAAM6Y,EAAS+sB,QAC7B,OACEhlB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACmlC,GAAD,CAAkCjtB,KAAM6qB,EAAME,OAAO/qB,KAAMG,MAAOI,EAAMJ,OAAS,QAKzF6H,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAnX,GAAuB,IAArBqX,EAAqBrX,EAArBqX,MAAO5qB,EAAcuT,EAAdvT,SACFM,EAAQnZ,iBAAM6Y,EAAS+sB,QAC7B,OACEhlB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAAColC,GAAD,CAAgCltB,KAAM6qB,EAAME,OAAO/qB,KAAMG,MAAOI,EAAMJ,OAAS,QAKvF6H,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,yCACT,SAAA5Z,GAAuB,IAArB8Z,EAAqB9Z,EAArB8Z,MAAO5qB,EAAc8Q,EAAd9Q,SACFM,EAAQnZ,iBAAM6Y,EAAS+sB,QAC7B,OACEhlB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACqlC,GAAD,CAA6CntB,KAAM6qB,EAAME,OAAO/qB,KAAMG,MAAOI,EAAMJ,OAAS,4DCtC5GitB,WAA0B,CAC9B3oB,MAAO,GACPQ,SAAU,GACVE,QAAS,GACTI,MAAO,ocCGT,IAAM8nB,GAA6C,CACjD5oB,MAAO,GACPQ,SAAU,GACVmG,eAAgB,GAChBrF,gBAAiB,GACjBsF,KAAM,MAGFiiB,GAAuD,CAC3D7oB,MAAO,GACP6H,UAAW,GACXjB,KAAM,KACNmB,WAAY,KACZD,uBAAuB,GAoFVghB,kCAAoC,CACjDta,WAlFK,WAA8G,IAA1FxI,EAA0FrK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAzDitB,GAAmBlpB,EAAsC/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EACnH,OAAIuf,EAAOjb,OAAS4U,EAAWK,cAAcC,+BACpC+F,EAAOiD,QAETqD,GA+EPoH,gBA5EK,WAAkG,IAAzEpH,EAAyErK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAnCktB,GAAwBnpB,EAAW/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EACvG,GAAIuf,EAAOjb,OAAS4U,EAAWK,cAAcE,oCAC3C,OAAO8F,EAAOiD,QAGhB,GAAIjD,EAAOjb,OAAS4U,EAAWK,cAAcG,iCAAkC,CAC7E,IAAKmM,EAAM+B,WACT,OAAO/B,EAIT,IAAMiE,EAA6BvK,EAAOiD,QACpCwC,EAAQa,EAAM+B,WAAW3H,UAAU+J,UAAU,SAACpK,GAClD,OAAOA,EAASte,KAAOwoB,EAAiBxoB,KAE1C,GAAI0jB,EAAQ,EACV,OAAOa,EAGT,IAAM+iB,EAAWC,GAAA,GAAIhjB,GAErB,OADAtJ,IAAE/U,IAAIohC,EAAN,wBAAAlkC,OAAwCsgB,GAAS8E,GAC1C8e,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWK,cAAcI,uCAAwC,CACnF,IAAMiO,EAAa/B,EAAM+B,WACzB,IAAKA,EACH,OAAO/B,EAH0E,IAM5EuE,EAN4Eye,GAAA,GAMzDtpB,GAAnB6K,YACDL,EAAenC,EAAW3H,UAAU+J,UAAU,SAACpK,GACnD,OAAOA,EAAS5B,YAIlB,GAAIoM,EAAc,GAAKA,GAAexC,EAAW3H,UAAUljB,OACzD,OAAO8oB,EAGT,IAAM+iB,EAAWC,GAAA,GAAIhjB,GAQrB,OALAtJ,IAAE/U,IAAIohC,EAAN,wBAAAlkC,OAAwCqlB,EAAxC,eAAkE,GAGlExN,IAAE/U,IAAIohC,EAAN,wBAAAlkC,OAAwC0lB,EAAxC,eAAiE,GAE1Dwe,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWK,cAAcK,2CAA4C,CACvF,IAAMgO,EAAa/B,EAAM+B,WACzB,IAAKA,EACH,OAAO/B,EAET,IAAM+iB,EAAWC,GAAA,GAAIhjB,GAGfsE,EAAuB5K,EAAO4K,qBASpC,OARIA,GAAwBA,EAAqBptB,OAAS,GACxDotB,EAAqBlkB,QAAQ,SAAA+e,GAC3B,IAAM8jB,EAAwBlhB,EAAW3H,UAAU+E,GACnD8jB,EAAsB/qB,cAAe,EACrCxB,IAAE/U,IAAIohC,EAAN,wBAAAlkC,OAAwCsgB,GAAS8jB,KAI9CF,EAGT,OAAO/iB,sKCjGT,IAAM4iB,GAAyC,CAC7C5e,eAAgB,+HCLlB,IAAM2e,GAAiC,CACrC/hB,KAAM,+HCDR,IAAM+hB,GAAgC,CACpC9gB,UAAW,4dCMb,IAAM8gB,GAAwC,CAC5CzG,oBAAqB,GACrBpW,mBAAoB,GACpBE,YAAa,GACbwX,SAAU,QAGNd,GAAoBjB,GAAuBiB,2ICjBjD,IAAMwG,GAAqC,CACzCC,eAAgB,ICQHL,kCAA2B,CACxC1mB,UPAK,WAAyF,IAAtE4D,EAAsErK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAnDgtB,GAAcjpB,EAAqC/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EAC9F,OAAQuf,EAAOjb,MACb,KAAK4U,EAAWC,KAAKG,yBACnB,OAAOiG,EAAOiD,QAChB,QACE,OAAOqD,IOJXmH,sBACA6Q,oBLDK,WAA6G,IAAhFhY,EAAgFrK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAnDitB,GAAmBlpB,EAAgC/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EAC5G6pB,EAAwChE,EAAMgE,eAEpD,GAAItK,EAAOjb,OAAS4U,EAAWY,KAAKC,qBAElC,MAAO,CACL8P,eAAgBtK,EAAOiD,SAI3B,GAAIjD,EAAOjb,OAAS4U,EAAWY,KAAKE,4BAA6B,CAE/D,IAAK6P,EACH,OAAOhE,EAGT,IAAMiE,EAA6BvK,EAAOiD,QACpCwC,EAAQ6E,EAAe5J,UAAU+J,UAAU,SAACpK,GAChD,OAAOA,EAASte,KAAOwoB,EAAiBxoB,KAE1C,GAAI0jB,EAAQ,EACV,OAAOa,EAGT,IAAM+iB,EAAWK,KAAUpjB,GAE3B,OADAre,KAAIohC,EAAD,4BAAAlkC,OAAuCsgB,GAAS8E,GAC5C8e,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWY,KAAKG,kCAAmC,CACrE,IAAK4P,EACH,OAAOhE,EAET,IAAM+iB,EAAWK,KAAUpjB,GAGrBsE,EAAuB5K,EAAOiD,QASpC,OARI2H,GAAwBA,EAAqBptB,OAAS,GACxDotB,EAAqBlkB,QAAQ,SAAA+e,GAC3B,IAAM8jB,EAAwBjf,EAAe5J,UAAU+E,GACvD8jB,EAAsB/qB,cAAe,EACrCvW,KAAIohC,EAAD,4BAAAlkC,OAAuCsgB,GAAS8jB,KAIhDF,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWY,KAAKI,8BAA+B,CACjE,IAAK2P,EACH,OAAOhE,EAFwD,IAAAqjB,qUAAAC,CAAA,GAKzB5pB,EAAOiD,SAAxCuH,EAL0Dmf,EAK1Dnf,aAAcK,EAL4C8e,EAK5C9e,YAGrB,GAAIA,EAAc,GAAKA,GAAeP,EAAe5J,UAAUljB,OAC7D,OAAO8oB,EAGT,IAAM+iB,EAAWK,KAAUpjB,GAO3B,OAJAre,KAAIohC,EAAD,4BAAAlkC,OAAuCqlB,EAAvC,eAAiE,GAEpEviB,KAAIohC,EAAD,4BAAAlkC,OAAuC0lB,EAAvC,eAAgE,GAE5Dwe,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWY,KAAKK,yBAA0B,CAC5D,IAAMyuB,EAAWK,KAAUpjB,GAO3B,OANAre,KAAIohC,EAAD,wBAAoC,YAEnCrpB,EAAOiD,SACThb,KAAIohC,EAAD,wBAAoCrpB,EAAOiD,SAGzComB,EAGT,GAAIrpB,EAAOjb,OAAS4U,EAAWY,KAAKM,qBAAsB,CACxD,IAAMwuB,EAAWK,KAAUpjB,GAG3B,OAFAre,KAAIohC,EAAD,wBAAoC,eACvCphC,KAAIohC,EAAD,wBAAoC,MAChCA,EAGT,OAAO/iB,GKtFP4a,iBJNK,WAAgG,IAAtE5a,EAAsErK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAA5CgtB,GAAcjpB,EAA8B/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EACrG,OAAQuf,EAAOjb,MACb,KAAK4U,EAAW6B,KAAKC,iBACnB,0UAAAouB,CAAA,GACKvjB,EADL,CAEEY,KAAMlH,EAAOiD,UAEjB,QACE,OAAOqD,IIDX2a,gBHPK,WAA4F,IAAnE3a,EAAmErK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAA1CgtB,GAAcjpB,EAA4B/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EACjG,OAAQuf,EAAOjb,MACb,KAAK4U,EAAW+B,YAAYC,eAC1B,0UAAAmuB,CAAA,GACKxjB,EADL,CAEE6B,UAAWnI,EAAOiD,UAEtB,QACE,OAAOqD,IGAXse,wBFIK,WAA2F,IAA1Dte,EAA0DrK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAzBgtB,GAAcjpB,EAAW/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EAChG,GAAIuf,EAAOjb,OAAS4U,EAAWmB,oBAAoBC,yBAEjD,OAAAgvB,GAAA,GACKzjB,EADL,CAEEkc,oBAHyCxiB,EAGhBiD,UAI7B,GAAIjD,EAAOjb,OAAS4U,EAAWmB,oBAAoBE,uBAAwB,CACzE,IAAMgvB,EAAkChqB,EACxC,IAAKgjB,GAAkBgH,EAAI/mB,QAASqD,EAAM8F,qBACxC4W,GAAkBgH,EAAI/mB,QAASqD,EAAMkc,qBACrC,OAAAuH,GAAA,GACKzjB,EADL,CAEE8F,mBAAoBjnB,KAClBmhB,EAAM8F,mBACN9F,EAAMkc,oBAAoB5iB,OAAO,SAACqiB,GAAD,OAAeA,EAAUlgC,KAAOioC,EAAI/mB,aAM7E,GAAIjD,EAAOjb,OAAS4U,EAAWmB,oBAAoBG,0BAA2B,CAC5E,IAAM+uB,EAAqChqB,EAC3C,GAAIgjB,GAAkBgH,EAAI/mB,QAASqD,EAAM8F,qBACvC4W,GAAkBgH,EAAI/mB,QAASqD,EAAMkc,qBACrC,OAAAuH,GAAA,GACKzjB,EADL,CAEE8F,mBAAoB9F,EAAM8F,mBAAmBxM,OAAO,SAACqiB,GAAD,OAAeA,EAAUlgC,KAAOioC,EAAI/mB,YAK9F,OAAIjD,EAAOjb,OAAS4U,EAAWmB,oBAAoBI,iBAEjD6uB,GAAA,GACKzjB,EADL,CAEEgG,YAHgCtM,EAGfiD,UAIjBjD,EAAOjb,OAAS4U,EAAWmB,oBAAoBK,cAEjD4uB,GAAA,GACKzjB,EADL,CAEEwd,SAH6B9jB,EAGfiD,UAIXqD,GErDPsf,sBDZK,WAA+G,IAAhFtf,EAAgFrK,UAAAze,OAAA,QAAAiD,IAAAwb,UAAA,GAAAA,UAAA,GAAjDutB,GAAaxpB,EAAoC/D,UAAAze,OAAA,EAAAye,UAAA,QAAAxb,EACpH,OAAIuf,EAAOjb,OAAS4U,EAAWK,cAAcM,4VAC3C2vB,CAAA,GACK3jB,EADL,CAEE+e,iBAAkBrlB,EAAOiD,UAItBqD,eETH4jB,GAAa,CAACC,KAMb,IAOQC,GAPMC,uBACnB/c,GACAgd,+BACEC,mBAAepsC,WAAf,EAAmB+rC,qvCCIvB,IA6CMM,oaAAyCjnB,mEAI3Cod,EAFkB8J,GAAA,GACmBxpB,KAAK0C,OAAnCgd,2DAIA,IAAA5R,EAAA0b,GAAA,GAOCxpB,KAAK0C,OALXwE,EAFK4G,EAEL5G,UACAmC,EAHKyE,EAGLzE,eACAoJ,EAJK3E,EAIL2E,mCACAC,EALK5E,EAKL4E,qCACAkN,EANK9R,EAML8R,0BAGF,OAAKvW,EAKHzG,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,2BACbF,EAAAxe,EAAA1B,cAACsrB,GAAD,CAAQ3O,MAAOgK,EAAerB,SAAUnI,SAAUqH,EAAWqG,kBAAkB,IAC/E3K,EAAAxe,EAAA1B,cAACo9B,GAAD,CACEzW,eAAgBA,EAChByI,qBAAsBW,EACtBgB,uBAAwBf,EACxB+L,YAAamB,EACblB,gBAAgB,EAChBC,gBAAgB,EAChBC,iBAA4C,gBAA1BvV,EAAenpB,SAEnC0iB,EAAAxe,EAAA1B,cAACyiB,GAAD,OAfK,4CAqBEC,eAnFS,SAACC,GACvB,MAAO,CACLgE,eAAgBhE,EAAMgY,oBAAoBhU,eAC1CnC,UAAW7B,EAAM2a,gBAAgB9Y,YAIV,SAAC1F,EAAoBkB,GAC9C,MAAO,CACLgd,uBADK,WACoB,IAAA+H,EAAA+B,GAAA,GACS9mB,GAAzB9H,EADgB6sB,EAChB7sB,KAAMiQ,EADU4c,EACV5c,YACbrJ,EAAS6d,MACT7d,EAASib,GAAmB,CAAC7hB,OAAMiQ,kBAErC4H,mCANK,SAM8BnJ,GAA4B,IACtDuB,EADsD2e,GAAA,GACnC9mB,GAAnBmI,YACPrJ,EAASsb,GAAqC,CAACxT,mBAAkBuB,kBAEnE6H,qCAVK,SAUgCG,GAA0B,IACtDhI,EADsD2e,GAAA,GACnC9mB,GAAnBmI,YACPrJ,EAAS0c,GAAuC,CAACrL,iBAAgBhI,kBAEnE+U,0BAdK,WAcuB,IACnB/U,EADmB2e,GAAA,GACA9mB,GAAnBmI,YACPrJ,EAAS4c,GAA4B,CAACvT,oBA2D7BzF,CAGbmkB,wzBCzEaE,oaAzBSnnB,uDAGpB,OACEM,EAAAxe,EAAA1B,cAAA,WACEkgB,EAAAxe,EAAA1B,cAAA,YACEkgB,EAAAxe,EAAA1B,cAAC0iC,EAAA,EAAD,KACExiB,EAAAxe,EAAA1B,cAAC2iC,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAnkB,GAAuB,IAArBqkB,EAAqBrkB,EAArBqkB,MAAO5qB,EAAcuG,EAAdvG,SACFM,EAAQnZ,iBAAM6Y,EAAS+sB,QAC7B,OACEhlB,EAAAxe,EAAA1B,cAAA,OAAKogB,UAAU,WACbF,EAAAxe,EAAA1B,cAACgnC,GAAD,CAAkC9uB,KAAM6qB,EAAME,OAAO/qB,KAAMiQ,YAAa1P,EAAMJ,OAAS,kDCR3Gld,OAAOk3B,iBAAiB,OAAQ,WAE9B4U,KAAWC,cAAgB,CACzBC,QAAS,CACPC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,qBACjBC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEdjV,QAAS,CACPkV,WAAY,OACZC,SAAU,OACVC,wBAAyB,QACzBC,QAAS,SAIb,IAAMC,EAAgBnoC,SAASooC,eAAe,YAC1CD,GACFE,IAASha,OACPlO,EAAAxe,EAAA1B,cAACilC,GAAA,EAAD,KACE/kB,EAAAxe,EAAA1B,cAACqoC,EAAA,EAAD,CAAU5B,MAAOA,IACfvmB,EAAAxe,EAAA1B,cAACsoC,GAAD,QAGHJ,GAGL,IAAMK,EAAyBxoC,SAASooC,eAAe,sBACnDI,GACFH,IAASha,OACPlO,EAAAxe,EAAA1B,cAACilC,GAAA,EAAD,KACE/kB,EAAAxe,EAAA1B,cAACqoC,EAAA,EAAD,CAAU5B,MAAOA,IACfvmB,EAAAxe,EAAA1B,cAACwoC,GAAD,QAGHD,GAGL,IAAME,EAAkB1oC,SAASooC,eAAe,cAC5CM,GACFL,IAASha,OACPlO,EAAAxe,EAAA1B,cAACilC,GAAA,EAAD,KACE/kB,EAAAxe,EAAA1B,cAACqoC,EAAA,EAAD,CAAU5B,MAAOA,IACfvmB,EAAAxe,EAAA1B,cAAC0oC,GAAD,QAGHD,yBChEPhoC,EAAAqD,QAAiB9I,EAAA6D,EAAuB,kECAxC4B,EAAAqD,QAAiB9I,EAAA6D,EAAuB,kECAxC4B,EAAAqD,QAAiB9I,EAAA6D,EAAuB","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"38a9ece382a1e3cc6e82\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([366,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 208,\n\t\"./af.js\": 208,\n\t\"./ar\": 209,\n\t\"./ar-dz\": 210,\n\t\"./ar-dz.js\": 210,\n\t\"./ar-kw\": 211,\n\t\"./ar-kw.js\": 211,\n\t\"./ar-ly\": 212,\n\t\"./ar-ly.js\": 212,\n\t\"./ar-ma\": 213,\n\t\"./ar-ma.js\": 213,\n\t\"./ar-sa\": 214,\n\t\"./ar-sa.js\": 214,\n\t\"./ar-tn\": 215,\n\t\"./ar-tn.js\": 215,\n\t\"./ar.js\": 209,\n\t\"./az\": 216,\n\t\"./az.js\": 216,\n\t\"./be\": 217,\n\t\"./be.js\": 217,\n\t\"./bg\": 218,\n\t\"./bg.js\": 218,\n\t\"./bm\": 219,\n\t\"./bm.js\": 219,\n\t\"./bn\": 220,\n\t\"./bn.js\": 220,\n\t\"./bo\": 221,\n\t\"./bo.js\": 221,\n\t\"./br\": 222,\n\t\"./br.js\": 222,\n\t\"./bs\": 223,\n\t\"./bs.js\": 223,\n\t\"./ca\": 224,\n\t\"./ca.js\": 224,\n\t\"./cs\": 225,\n\t\"./cs.js\": 225,\n\t\"./cv\": 226,\n\t\"./cv.js\": 226,\n\t\"./cy\": 227,\n\t\"./cy.js\": 227,\n\t\"./da\": 228,\n\t\"./da.js\": 228,\n\t\"./de\": 229,\n\t\"./de-at\": 230,\n\t\"./de-at.js\": 230,\n\t\"./de-ch\": 231,\n\t\"./de-ch.js\": 231,\n\t\"./de.js\": 229,\n\t\"./dv\": 232,\n\t\"./dv.js\": 232,\n\t\"./el\": 233,\n\t\"./el.js\": 233,\n\t\"./en-SG\": 234,\n\t\"./en-SG.js\": 234,\n\t\"./en-au\": 235,\n\t\"./en-au.js\": 235,\n\t\"./en-ca\": 236,\n\t\"./en-ca.js\": 236,\n\t\"./en-gb\": 237,\n\t\"./en-gb.js\": 237,\n\t\"./en-ie\": 238,\n\t\"./en-ie.js\": 238,\n\t\"./en-il\": 239,\n\t\"./en-il.js\": 239,\n\t\"./en-nz\": 240,\n\t\"./en-nz.js\": 240,\n\t\"./eo\": 241,\n\t\"./eo.js\": 241,\n\t\"./es\": 242,\n\t\"./es-do\": 243,\n\t\"./es-do.js\": 243,\n\t\"./es-us\": 244,\n\t\"./es-us.js\": 244,\n\t\"./es.js\": 242,\n\t\"./et\": 245,\n\t\"./et.js\": 245,\n\t\"./eu\": 246,\n\t\"./eu.js\": 246,\n\t\"./fa\": 247,\n\t\"./fa.js\": 247,\n\t\"./fi\": 248,\n\t\"./fi.js\": 248,\n\t\"./fo\": 249,\n\t\"./fo.js\": 249,\n\t\"./fr\": 250,\n\t\"./fr-ca\": 251,\n\t\"./fr-ca.js\": 251,\n\t\"./fr-ch\": 252,\n\t\"./fr-ch.js\": 252,\n\t\"./fr.js\": 250,\n\t\"./fy\": 253,\n\t\"./fy.js\": 253,\n\t\"./ga\": 254,\n\t\"./ga.js\": 254,\n\t\"./gd\": 255,\n\t\"./gd.js\": 255,\n\t\"./gl\": 256,\n\t\"./gl.js\": 256,\n\t\"./gom-latn\": 257,\n\t\"./gom-latn.js\": 257,\n\t\"./gu\": 258,\n\t\"./gu.js\": 258,\n\t\"./he\": 259,\n\t\"./he.js\": 259,\n\t\"./hi\": 260,\n\t\"./hi.js\": 260,\n\t\"./hr\": 261,\n\t\"./hr.js\": 261,\n\t\"./hu\": 262,\n\t\"./hu.js\": 262,\n\t\"./hy-am\": 263,\n\t\"./hy-am.js\": 263,\n\t\"./id\": 264,\n\t\"./id.js\": 264,\n\t\"./is\": 265,\n\t\"./is.js\": 265,\n\t\"./it\": 266,\n\t\"./it-ch\": 267,\n\t\"./it-ch.js\": 267,\n\t\"./it.js\": 266,\n\t\"./ja\": 268,\n\t\"./ja.js\": 268,\n\t\"./jv\": 269,\n\t\"./jv.js\": 269,\n\t\"./ka\": 270,\n\t\"./ka.js\": 270,\n\t\"./kk\": 271,\n\t\"./kk.js\": 271,\n\t\"./km\": 272,\n\t\"./km.js\": 272,\n\t\"./kn\": 273,\n\t\"./kn.js\": 273,\n\t\"./ko\": 274,\n\t\"./ko.js\": 274,\n\t\"./ku\": 275,\n\t\"./ku.js\": 275,\n\t\"./ky\": 276,\n\t\"./ky.js\": 276,\n\t\"./lb\": 277,\n\t\"./lb.js\": 277,\n\t\"./lo\": 278,\n\t\"./lo.js\": 278,\n\t\"./lt\": 279,\n\t\"./lt.js\": 279,\n\t\"./lv\": 280,\n\t\"./lv.js\": 280,\n\t\"./me\": 281,\n\t\"./me.js\": 281,\n\t\"./mi\": 282,\n\t\"./mi.js\": 282,\n\t\"./mk\": 283,\n\t\"./mk.js\": 283,\n\t\"./ml\": 284,\n\t\"./ml.js\": 284,\n\t\"./mn\": 285,\n\t\"./mn.js\": 285,\n\t\"./mr\": 286,\n\t\"./mr.js\": 286,\n\t\"./ms\": 287,\n\t\"./ms-my\": 288,\n\t\"./ms-my.js\": 288,\n\t\"./ms.js\": 287,\n\t\"./mt\": 289,\n\t\"./mt.js\": 289,\n\t\"./my\": 290,\n\t\"./my.js\": 290,\n\t\"./nb\": 291,\n\t\"./nb.js\": 291,\n\t\"./ne\": 292,\n\t\"./ne.js\": 292,\n\t\"./nl\": 293,\n\t\"./nl-be\": 294,\n\t\"./nl-be.js\": 294,\n\t\"./nl.js\": 293,\n\t\"./nn\": 295,\n\t\"./nn.js\": 295,\n\t\"./pa-in\": 296,\n\t\"./pa-in.js\": 296,\n\t\"./pl\": 297,\n\t\"./pl.js\": 297,\n\t\"./pt\": 298,\n\t\"./pt-br\": 299,\n\t\"./pt-br.js\": 299,\n\t\"./pt.js\": 298,\n\t\"./ro\": 300,\n\t\"./ro.js\": 300,\n\t\"./ru\": 301,\n\t\"./ru.js\": 301,\n\t\"./sd\": 302,\n\t\"./sd.js\": 302,\n\t\"./se\": 303,\n\t\"./se.js\": 303,\n\t\"./si\": 304,\n\t\"./si.js\": 304,\n\t\"./sk\": 305,\n\t\"./sk.js\": 305,\n\t\"./sl\": 306,\n\t\"./sl.js\": 306,\n\t\"./sq\": 307,\n\t\"./sq.js\": 307,\n\t\"./sr\": 308,\n\t\"./sr-cyrl\": 309,\n\t\"./sr-cyrl.js\": 309,\n\t\"./sr.js\": 308,\n\t\"./ss\": 310,\n\t\"./ss.js\": 310,\n\t\"./sv\": 311,\n\t\"./sv.js\": 311,\n\t\"./sw\": 312,\n\t\"./sw.js\": 312,\n\t\"./ta\": 313,\n\t\"./ta.js\": 313,\n\t\"./te\": 314,\n\t\"./te.js\": 314,\n\t\"./tet\": 315,\n\t\"./tet.js\": 315,\n\t\"./tg\": 316,\n\t\"./tg.js\": 316,\n\t\"./th\": 317,\n\t\"./th.js\": 317,\n\t\"./tl-ph\": 318,\n\t\"./tl-ph.js\": 318,\n\t\"./tlh\": 319,\n\t\"./tlh.js\": 319,\n\t\"./tr\": 320,\n\t\"./tr.js\": 320,\n\t\"./tzl\": 321,\n\t\"./tzl.js\": 321,\n\t\"./tzm\": 322,\n\t\"./tzm-latn\": 323,\n\t\"./tzm-latn.js\": 323,\n\t\"./tzm.js\": 322,\n\t\"./ug-cn\": 324,\n\t\"./ug-cn.js\": 324,\n\t\"./uk\": 325,\n\t\"./uk.js\": 325,\n\t\"./ur\": 326,\n\t\"./ur.js\": 326,\n\t\"./uz\": 327,\n\t\"./uz-latn\": 328,\n\t\"./uz-latn.js\": 328,\n\t\"./uz.js\": 327,\n\t\"./vi\": 329,\n\t\"./vi.js\": 329,\n\t\"./x-pseudo\": 330,\n\t\"./x-pseudo.js\": 330,\n\t\"./yo\": 331,\n\t\"./yo.js\": 331,\n\t\"./zh-cn\": 332,\n\t\"./zh-cn.js\": 332,\n\t\"./zh-hk\": 333,\n\t\"./zh-hk.js\": 333,\n\t\"./zh-tw\": 334,\n\t\"./zh-tw.js\": 334\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 598;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\"\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const inst = axios.create({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n\n    const response = await inst.request();\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n    const inst = axios.create({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const response = await inst.request();\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: `${get(jsonObject, \"FirstName\")} ${get(jsonObject, \"Surname\")}`,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchUserSubmissionList(userID: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchUserSubmissionList(user.id);\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>;\n      </div>\n    )\n      ;\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n  };\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, taskType, status}) => {\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskName} ({prettifyStatus(status)})\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.securityArchitect)}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.chiefInformationSecurityOfficer)}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.businessOwner)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchApproveSubmissionAction(submission.submissionID);\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchDenySubmissionAction(submission.submissionID);\n  }\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\") && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {MyQuestionnaireItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    mySubmissionList: state.mySubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<MyQuestionnaireItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: MyQuestionnaireItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div class=\"alert alert-danger\">\n          Sorry, No data to dispaly.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle=\"\" username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../MySubmission/MySubmissionList\";\n\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n    const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n      uuid: this.props.uuid,\n      secureToken: this.props.token,\n    });\n\n    this.setState({\n      siteTitle: data.siteTitle,\n      submission: data.submission,\n    });\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: MySubmissionListState = {\n  submissionList: []\n}\n\nexport function mySubmissionListState(state: MySubmissionListState = initalState, action: any): MySubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {mySubmissionListState} from \"./mySubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  mySubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}