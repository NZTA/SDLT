{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Logo.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Common/RiskResultContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/icons/pdf.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","FETCH_MY_PRODUCT_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","maxLength","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","secureToken","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","approver","riskResults","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","maxlength","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","viewAs","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","alreadySubmittedAlert","buttons","editIcon","pdfIcon","existsUnansweredQuestion","summaryButton","redirectToQuestionnaireSummary","Questionnaire_AnswersPreview","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","PDFUtil_typeof","results","resultObj","rating","colour","riskName","weights","score","table","headerRows","widths","body","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","_x10","_x11","RiskResultContainer","RiskResultContainer_objectSpread","riskResult","backgroundColor","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","renderSubmitterInfo","renderTasks","renderApprovals","Common_RiskResultContainer","renderSkipCheckbox","renderButtons","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","viewAnswersButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchBusinessOwnerApproveSubmissionAction","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchBusinessOwnerDenySubmissionAction","dispatchDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmissionAsBusinessOwner","_x20","_x21","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmissionAsBusinessOwner","_x22","_x23","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref13","_callee10","_ref14","_context10","approveQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","denyQuestionnaireSubmission","_x18","_x19","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","backButton","editButton","pdfButton","downloadPdf","resultStatus","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","_props","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","search","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","HashRouter","es","App_MainApp","vendorContainer","App_VendorApp"],"mappings":"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C,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"51b3b82ae7fb2a1ce9f7\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([370,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 600;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\",\n    FETCH_MY_PRODUCT_LIST:\"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/review/${uuid}?token=${token}`;\n      return;\n    }\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            maxLength: Number.parseInt(_.toString(_.get(inputSchema, \"MaxLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string, secureToken:string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    GQRiskResult,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: _.has(submissionJSON, 'GQRiskResult') ? JSON.parse(_.get(submissionJSON, \"GQRiskResult\", \"\")) : \"\"\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n\n  static async approveQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n    RiskResultData\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n      riskResults: _.has(submissionJSONObject, 'RiskResultData') ? JSON.parse(_.get(submissionJSONObject, \"RiskResultData\", \"\")) : \"\"\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\n// load questionanqire submissions\n// this is same for SA, User, BO, CISO and normal user\nexport function loadQuestionnaireSubmissionState(submissionHash: string, secureToken: string): ThunkAction {\n  if(typeof(secureToken) == \"undefined\") {\n    secureToken = '';\n  }\n\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash, secureToken);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\n// As a User submit the questionnaire\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// As a user submit the  Questionnaire submission for approval\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// Assign to SA\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a SA / CISO\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a SA / CISO\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a BO\nexport function approveQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a BO\nexport function denyQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Edit answers of the Questionnaire Submission as a User\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// load all the Questionnaire Submissions of the logged in user\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list of pending approval list\n// for SA, CISO and Business owner\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list for the business owner\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      //set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue,\n                  maxLength\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder} maxlength={maxLength > 0 ? maxLength : 4096}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = dataArr.join(', ');\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport URLUtil from \"../../utils/URLUtil\";\n\ntype Props = {\n  siteTitle: string,\n  secureToken: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      viewAs,\n      secureToken,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    const alreadySubmittedAlert = (\n      <div className=\"alert alert-success text-center\">\n        This questionnaire has already been submitted.\n      </div>\n    )\n\n    const buttons = (\n      <div className=\"buttons\">\n      <LightButton title=\"EDIT ANSWERS\"\n                   iconImage={editIcon}\n                   classes={[\"button\"]}\n                   onClick={handleEditAnswerButtonClick}/>\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n      <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                  classes={[\"button\"]}\n                  disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                  onClick={handleSubmitButtonClick}/>\n      </div>\n    );\n\n    const summaryButton = (\n      <div className=\"buttons\">\n      <LightButton title=\"BACK TO SUMMARY\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireSummary(submission.submissionUUID, secureToken)}/>\n      </div>\n    );\n\n    return (\n      <div className=\"Review\">\n        {submission.status !== \"in_progress\" && alreadySubmittedAlert}\n        <AnswersPreview questions={submission.questions}/>\n        {(viewAs === 'submitter' && (submission.status === \"in_progress\" || submission.status === \"submitted\")) && buttons}\n        {(viewAs !== 'submitter') && summaryButton}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle, result, riskResults} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = dataArr.join(', ');\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    if(typeof riskResults === 'object' && riskResults.length > 0) {\n      let results = [\n        [\n          { text: 'Risk Name', bold: true, alignment: 'center' },\n          { text: 'Weights', bold: true, alignment: 'center' },\n          { text: 'Score', bold: true, alignment: 'center' },\n          { text: 'Rating', bold: true, alignment: 'center' },\n        ]\n      ];\n      riskResults.forEach(function(result, i){\n        let resultObj = { text: result.rating, alignment: 'center', color: '#'+result.colour, bold: true };\n\n        if (result.rating == 'Unknown') {\n          resultObj = { text: 'Unknown', alignment: 'center', color: '#000000', bold: true };\n        }\n\n\n        results.push([\n          { text: result.riskName },\n          result.weights,\n          result.score,\n          resultObj\n        ])\n      })\n      content.push({\n        table: {\n          headerRows: 1,\n          //actual rendered width of footer and header images\n          widths: [237, 75, 75, 75],\n          body: results\n        },\n        width: 500,\n        margin: [0, 0, 0, defaultFontSize]\n      });\n    }\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {\n      title,\n      siteTitle,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n          viewAs={viewAs}\n          submission={submission}\n          secureToken={secureToken}\n          handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n          handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n          handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {RiskResult} from \"../../types/Questionnaire\";\n\ntype Props = {\n  riskResults: RiskResult | null,\n};\n\nclass RiskResultContainer extends Component<Props> {\n  render() {\n    const {riskResults} = {...this.props};\n\n    if (riskResults.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"risks\">\n        <h3>Risk Result</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_table_header\">\n                <th>Risk Name</th>\n                <th>Weights</th>\n                <th>Score</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {riskResults.map((riskResult, index): RiskResult => {\n                return (\n                  <tr key={index+1} style={{backgroundColor:'#' + riskResult.colour}}>\n                    <td>\n                      {riskResult.riskName}\n                    </td>\n                    <td>\n                      {riskResult.weights}\n                    </td>\n                    <td>\n                      {riskResult.score}\n                    </td>\n                    <td>\n                      {riskResult.rating}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskResultContainer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        <RiskResultContainer riskResults={submission.riskResults}/>\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      user,\n      viewAs,\n      token,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    const viewAnswersButton = user ? (\n      <LightButton title=\"VIEW ANSWERS\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireReview(submission.submissionUUID, token)}\n      />\n    ) : '';\n\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {viewAnswersButton}\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {viewAnswersButton}\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Applicable\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Applicable') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionAsBusinessOwner,\n  denyQuestionnaireSubmissionAsBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    // load the Submission data on the summary screen\n    dispatchLoadSubmissionAction(submissionHash: string, secureToken: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash, secureToken));\n    },\n\n    // as a BO approve/ deny the submission\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(approveQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(denyQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n\n    // user can edit answers and submit the questionnaire for approval\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n\n    // as a SA and ciso approve/ deny the submission\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n\n    // As a SA assign the submission to cureent logged in user\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string, secureToken: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction, secureToken} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash, secureToken);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {location, title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an businessOwner approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n                 token={secureToken}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    let riskResults;\n    if(submission && submission.riskResults) {\n      riskResults = submission.riskResults;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n      riskResults: riskResults ? riskResults : [],\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean,\n  secureToken: string\n};\n\nclass TaskSubmission extends Component<Props> {\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs,\n      secureToken\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const riskResult = taskSubmission.riskResults && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <RiskResultContainer riskResults={taskSubmission.riskResults}/>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n        {riskResult}\n        <div className=\"buttons\">\n          {editButton}\n          {pdfButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle,\n      currentUser\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n      riskResults: taskSubmission.riskResults,\n    });\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken:string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteTitle={siteTitle}\n          secureToken={secureToken}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteTitle={siteTitle}\n          currentUser={currentUser}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken:string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      secureToken,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"start\":\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    myProductList: state.questionnaireSubmissionListState.myProductList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteTitle} username={currentUser.name} />\n        {list(myProductList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\nimport {parse} from \"query-string\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n            {({match, location}) => {\n              let secureToken = '';\n              if (location.search) {\n                const queryString = parse(location.search);\n                secureToken = queryString.token;\n              }\n              return (\n                <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";"],"sourceRoot":""}