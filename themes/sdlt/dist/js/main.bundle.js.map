{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnarie.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","1","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","inst","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","submission","questionnaireTitle","submissionID","submissionUUID","submitter","role","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","taskSubmissions","toArray","taskName","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","returnPackage","currentIndex","findIndex","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","taskId","taskJSONObject","loadQuestionnaireSubmissionState","_ref3","questionnarie_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnarie_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee12","indexesToUpdate","_context12","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","redirectToTaskSubmission","handleApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","_this$props$submissio6","dispatchEditSubmissionAction","setState","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref11","_callee9","_ref12","_context9","approveQuestionnaireSubmission","_x14","_x15","_ref13","_callee10","_ref14","_context10","denyQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","editQuestionnaireSubmission","_x18","_x19","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","t9","moveToPreviousQuestionInTaskSubmission","_args7","editCompletedTaskSubmission","_args9","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","isCurrentUserSubmitter","Task_TaskSubmission","siteConfigState","currentUserState","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","QuestionnaireForBusinessOwnerDataService","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","_this2","_this$state","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","_props","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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,IAAAkC,EAAA,CACA+E,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"f211015b81ed26c70072\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([630,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 194,\n\t\"./af.js\": 194,\n\t\"./ar\": 195,\n\t\"./ar-dz\": 196,\n\t\"./ar-dz.js\": 196,\n\t\"./ar-kw\": 197,\n\t\"./ar-kw.js\": 197,\n\t\"./ar-ly\": 198,\n\t\"./ar-ly.js\": 198,\n\t\"./ar-ma\": 199,\n\t\"./ar-ma.js\": 199,\n\t\"./ar-sa\": 200,\n\t\"./ar-sa.js\": 200,\n\t\"./ar-tn\": 201,\n\t\"./ar-tn.js\": 201,\n\t\"./ar.js\": 195,\n\t\"./az\": 202,\n\t\"./az.js\": 202,\n\t\"./be\": 203,\n\t\"./be.js\": 203,\n\t\"./bg\": 204,\n\t\"./bg.js\": 204,\n\t\"./bm\": 205,\n\t\"./bm.js\": 205,\n\t\"./bn\": 206,\n\t\"./bn.js\": 206,\n\t\"./bo\": 207,\n\t\"./bo.js\": 207,\n\t\"./br\": 208,\n\t\"./br.js\": 208,\n\t\"./bs\": 209,\n\t\"./bs.js\": 209,\n\t\"./ca\": 210,\n\t\"./ca.js\": 210,\n\t\"./cs\": 211,\n\t\"./cs.js\": 211,\n\t\"./cv\": 212,\n\t\"./cv.js\": 212,\n\t\"./cy\": 213,\n\t\"./cy.js\": 213,\n\t\"./da\": 214,\n\t\"./da.js\": 214,\n\t\"./de\": 215,\n\t\"./de-at\": 216,\n\t\"./de-at.js\": 216,\n\t\"./de-ch\": 217,\n\t\"./de-ch.js\": 217,\n\t\"./de.js\": 215,\n\t\"./dv\": 218,\n\t\"./dv.js\": 218,\n\t\"./el\": 219,\n\t\"./el.js\": 219,\n\t\"./en-SG\": 220,\n\t\"./en-SG.js\": 220,\n\t\"./en-au\": 221,\n\t\"./en-au.js\": 221,\n\t\"./en-ca\": 222,\n\t\"./en-ca.js\": 222,\n\t\"./en-gb\": 223,\n\t\"./en-gb.js\": 223,\n\t\"./en-ie\": 224,\n\t\"./en-ie.js\": 224,\n\t\"./en-il\": 225,\n\t\"./en-il.js\": 225,\n\t\"./en-nz\": 226,\n\t\"./en-nz.js\": 226,\n\t\"./eo\": 227,\n\t\"./eo.js\": 227,\n\t\"./es\": 228,\n\t\"./es-do\": 229,\n\t\"./es-do.js\": 229,\n\t\"./es-us\": 230,\n\t\"./es-us.js\": 230,\n\t\"./es.js\": 228,\n\t\"./et\": 231,\n\t\"./et.js\": 231,\n\t\"./eu\": 232,\n\t\"./eu.js\": 232,\n\t\"./fa\": 233,\n\t\"./fa.js\": 233,\n\t\"./fi\": 234,\n\t\"./fi.js\": 234,\n\t\"./fo\": 235,\n\t\"./fo.js\": 235,\n\t\"./fr\": 236,\n\t\"./fr-ca\": 237,\n\t\"./fr-ca.js\": 237,\n\t\"./fr-ch\": 238,\n\t\"./fr-ch.js\": 238,\n\t\"./fr.js\": 236,\n\t\"./fy\": 239,\n\t\"./fy.js\": 239,\n\t\"./ga\": 240,\n\t\"./ga.js\": 240,\n\t\"./gd\": 241,\n\t\"./gd.js\": 241,\n\t\"./gl\": 242,\n\t\"./gl.js\": 242,\n\t\"./gom-latn\": 243,\n\t\"./gom-latn.js\": 243,\n\t\"./gu\": 244,\n\t\"./gu.js\": 244,\n\t\"./he\": 245,\n\t\"./he.js\": 245,\n\t\"./hi\": 246,\n\t\"./hi.js\": 246,\n\t\"./hr\": 247,\n\t\"./hr.js\": 247,\n\t\"./hu\": 248,\n\t\"./hu.js\": 248,\n\t\"./hy-am\": 249,\n\t\"./hy-am.js\": 249,\n\t\"./id\": 250,\n\t\"./id.js\": 250,\n\t\"./is\": 251,\n\t\"./is.js\": 251,\n\t\"./it\": 252,\n\t\"./it-ch\": 253,\n\t\"./it-ch.js\": 253,\n\t\"./it.js\": 252,\n\t\"./ja\": 254,\n\t\"./ja.js\": 254,\n\t\"./jv\": 255,\n\t\"./jv.js\": 255,\n\t\"./ka\": 256,\n\t\"./ka.js\": 256,\n\t\"./kk\": 257,\n\t\"./kk.js\": 257,\n\t\"./km\": 258,\n\t\"./km.js\": 258,\n\t\"./kn\": 259,\n\t\"./kn.js\": 259,\n\t\"./ko\": 260,\n\t\"./ko.js\": 260,\n\t\"./ku\": 261,\n\t\"./ku.js\": 261,\n\t\"./ky\": 262,\n\t\"./ky.js\": 262,\n\t\"./lb\": 263,\n\t\"./lb.js\": 263,\n\t\"./lo\": 264,\n\t\"./lo.js\": 264,\n\t\"./lt\": 265,\n\t\"./lt.js\": 265,\n\t\"./lv\": 266,\n\t\"./lv.js\": 266,\n\t\"./me\": 267,\n\t\"./me.js\": 267,\n\t\"./mi\": 268,\n\t\"./mi.js\": 268,\n\t\"./mk\": 269,\n\t\"./mk.js\": 269,\n\t\"./ml\": 270,\n\t\"./ml.js\": 270,\n\t\"./mn\": 271,\n\t\"./mn.js\": 271,\n\t\"./mr\": 272,\n\t\"./mr.js\": 272,\n\t\"./ms\": 273,\n\t\"./ms-my\": 274,\n\t\"./ms-my.js\": 274,\n\t\"./ms.js\": 273,\n\t\"./mt\": 275,\n\t\"./mt.js\": 275,\n\t\"./my\": 276,\n\t\"./my.js\": 276,\n\t\"./nb\": 277,\n\t\"./nb.js\": 277,\n\t\"./ne\": 278,\n\t\"./ne.js\": 278,\n\t\"./nl\": 279,\n\t\"./nl-be\": 280,\n\t\"./nl-be.js\": 280,\n\t\"./nl.js\": 279,\n\t\"./nn\": 281,\n\t\"./nn.js\": 281,\n\t\"./pa-in\": 282,\n\t\"./pa-in.js\": 282,\n\t\"./pl\": 283,\n\t\"./pl.js\": 283,\n\t\"./pt\": 284,\n\t\"./pt-br\": 285,\n\t\"./pt-br.js\": 285,\n\t\"./pt.js\": 284,\n\t\"./ro\": 286,\n\t\"./ro.js\": 286,\n\t\"./ru\": 287,\n\t\"./ru.js\": 287,\n\t\"./sd\": 288,\n\t\"./sd.js\": 288,\n\t\"./se\": 289,\n\t\"./se.js\": 289,\n\t\"./si\": 290,\n\t\"./si.js\": 290,\n\t\"./sk\": 291,\n\t\"./sk.js\": 291,\n\t\"./sl\": 292,\n\t\"./sl.js\": 292,\n\t\"./sq\": 293,\n\t\"./sq.js\": 293,\n\t\"./sr\": 294,\n\t\"./sr-cyrl\": 295,\n\t\"./sr-cyrl.js\": 295,\n\t\"./sr.js\": 294,\n\t\"./ss\": 296,\n\t\"./ss.js\": 296,\n\t\"./sv\": 297,\n\t\"./sv.js\": 297,\n\t\"./sw\": 298,\n\t\"./sw.js\": 298,\n\t\"./ta\": 299,\n\t\"./ta.js\": 299,\n\t\"./te\": 300,\n\t\"./te.js\": 300,\n\t\"./tet\": 301,\n\t\"./tet.js\": 301,\n\t\"./tg\": 302,\n\t\"./tg.js\": 302,\n\t\"./th\": 303,\n\t\"./th.js\": 303,\n\t\"./tl-ph\": 304,\n\t\"./tl-ph.js\": 304,\n\t\"./tlh\": 305,\n\t\"./tlh.js\": 305,\n\t\"./tr\": 306,\n\t\"./tr.js\": 306,\n\t\"./tzl\": 307,\n\t\"./tzl.js\": 307,\n\t\"./tzm\": 308,\n\t\"./tzm-latn\": 309,\n\t\"./tzm-latn.js\": 309,\n\t\"./tzm.js\": 308,\n\t\"./ug-cn\": 310,\n\t\"./ug-cn.js\": 310,\n\t\"./uk\": 311,\n\t\"./uk.js\": 311,\n\t\"./ur\": 312,\n\t\"./ur.js\": 312,\n\t\"./uz\": 313,\n\t\"./uz-latn\": 314,\n\t\"./uz-latn.js\": 314,\n\t\"./uz.js\": 313,\n\t\"./vi\": 315,\n\t\"./vi.js\": 315,\n\t\"./x-pseudo\": 316,\n\t\"./x-pseudo.js\": 316,\n\t\"./yo\": 317,\n\t\"./yo.js\": 317,\n\t\"./zh-cn\": 318,\n\t\"./zh-cn.js\": 318,\n\t\"./zh-hk\": 319,\n\t\"./zh-hk.js\": 319,\n\t\"./zh-tw\": 320,\n\t\"./zh-tw.js\": 320\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 565;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const inst = axios.create({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n\n    const response = await inst.request();\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.get(inputSchema, \"Required\", false)),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n    const inst = axios.create({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const response = await inst.request();\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              return (\n                <TaskButton link={`/tasks/standalone/${task.id}`} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: `${get(jsonObject, \"FirstName\")} ${get(jsonObject, \"Surname\")}`,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const returnPackage = {\n      currentIndex: questions.findIndex((question) => question.id === answeredQuestion.id),\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\") {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: {uuid: string, secureToken?: string}): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\", \n  QuestionID: \"${questionID}\", \n  AnswerData: \"${answerDataStr}\", \n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const  query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: {taskId: string}): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\n\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Commons\n\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-wrapper\">\n        {this.props.showLogoutButton && <LogoutButton/>}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnarie\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} />\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnarie\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} />\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnarie\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\"/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>;\n      </div>\n    )\n      ;\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n  };\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, status}) => {\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskName} ({prettifyStatus(status)})\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.securityArchitect)}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.chiefInformationSecurityOfficer)}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.businessOwner)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n} from \"../../actions/questionnarie\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\"/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchApproveSubmissionAction(submission.submissionID);\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchDenySubmissionAction(submission.submissionID);\n  }\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      if (!bypassNetwork) {\n        try {\n          const csrfToken = await CSRFTokenService.getCSRFToken();\n\n          // Prevent anonymous user to create other task submissions according to the answers\n          if (!secureToken) {\n            await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n              questions: getTaskSubmission().questions,\n              questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n              csrfToken\n            });\n          }\n\n          const {uuid} = await TaskDataService.completeTaskSubmission({\n            uuid: getTaskSubmission().uuid,\n            result: result,\n            secureToken: secureToken,\n            csrfToken\n          });\n\n          await dispatch(loadTaskSubmission({uuid, secureToken}));\n        } catch (error) {\n          ErrorUtil.displayError(error);\n        }\n      } else {\n        await dispatch({\n          type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n          payload: result\n        });\n      }\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\") && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\") &&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n    const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n      uuid: this.props.uuid,\n      secureToken: this.props.token,\n    });\n\n    this.setState({\n      siteTitle: data.siteTitle,\n      submission: data.submission,\n    });\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    // TODO: Render task submission for the vendor using secure token\n\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((<BusinessOwnerApp/>), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}