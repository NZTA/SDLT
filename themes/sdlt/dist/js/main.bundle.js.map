{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","approver","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","QuestionnaireForBusinessOwnerDataService","isBusinessOwnerSummaryPage","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee17","indexesToUpdate","_context17","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderSkipCheckbox","renderButtons","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","dispatchBusinessOwnerApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","dispatchBusinessOwnerDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmission","_x20","_x21","approveQuestionnaireSubmissionFromBusinessOwner","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmission","_x22","_x23","denyQuestionnaireSubmissionFromBusinessOwner","_ref13","_callee10","_ref14","_context10","_x16","_x17","_ref15","_callee11","_ref16","_context11","_x18","_x19","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","productName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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,IAAAkC,EAAA,CACA+E,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"e60bcecb349fa2c97f88\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([369,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 599;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\"\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")),\n            defaultRadioButtonValue : _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")),\n            defaultCheckboxValue : _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\"),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\nimport UserParser from \"../utils/UserParser\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string, isBusinessOwnerSummaryPage: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken, isBusinessOwnerSummaryPage} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\", IsBusinessOwnerSummaryPage: \"${isBusinessOwnerSummaryPage}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport QuestionnaireForBusinessOwnerDataService from \"../services/QuestionnaireForBusinessOwnerDataService\";\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      //set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = JSON.stringify(dataArr);\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = JSON.stringify(dataArr);\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Required\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Required') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionFromBusinessOwner,\n  denyQuestionnaireSubmissionFromBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n\n    try {\n      const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n        uuid: this.props.uuid,\n        secureToken: this.props.token,\n        isBusinessOwnerSummaryPage: '1'\n      });\n      this.setState({\n        siteTitle: data.siteTitle,\n        submission: data.submission,\n      });\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: []\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}