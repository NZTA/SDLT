{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnarie.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/components/App/AnonymousApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/main.js","webpack:///./src/img/Logo.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/icons/pdf.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","1","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","TASK","LOAD_TASK_SUBMISSION_STATE","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","URLUtil","uuid","location","href","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","inst","axios","url","method","response","json","errorMessage","_","redirectToLogin","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","HomeDataService","Array","isArray","dashboard","title","subtitle","pillars","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","loadedHomeState","t0","alert","message","stop","this","_x","arguments","payload","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","CSRFTokenService","x-requested-with","token","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","Home","Button_LogoutButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","role","email","Button_LightButton","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","goto","taskID","question","heading","description","UserParser","userJSON","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","submissionJSON","siteTitle","parseUserFromJSON","isCurrentUserApprover","submission","questionnaireTitle","submissionID","submissionUUID","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","questions","parseQuestionsFromJSON","taskSubmissions","toArray","taskName","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","returnPackage","currentIndex","findIndex","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","TaskDataService","questionnaireSubmission","taskIDList","uniqueTaskIDList","uniq","responseJSONObject","currentMemberJSONObject","submissionJSONObject","currentUser","questionnaireSubmissionUUID","loadQuestionnaireSubmissionState","_ref3","questionnarie_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnarie_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee11","indexesToUpdate","_context11","transformFromFullQuestionToData","Header","Header_objectSpread","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","args","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsForQuestionnaireSubmission","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","getTaskSubmissionURL","handleApproveButtonClick","handleDenyButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","SummaryContainer","SummaryContainer_objectSpread","Questionnaire_Summary","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref11","_callee9","_ref12","_context9","approveQuestionnaireSubmission","_x14","_x15","_ref13","_callee10","_ref14","_context10","denyQuestionnaireSubmission","_x16","_x17","loadTaskSubmissionState","task_asyncToGenerator","fetchTaskSubmissionState","batchUpdateTaskSubmissionData","t1","t2","t3","t4","t5","t6","TaskSubmission","TaskSubmission_objectSpread","editAnswers","body","backButton","editButton","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadTaskSubmissionAction","dispatchEditAnswersAction","_this$props$state","Task_TaskSubmission","taskSubmissionState","task_toConsumableArray","t7","t8","t9","t10","completeTaskSubmission","editTaskSubmission","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","QuestionnaireForBusinessOwnerDataService","secureToken","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","_this2","_this$state","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","setState","AnonymousApp","HashRouter","search","SummaryForBusinessOwner","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","taskSubmissionState_objectSpread","_action$payload","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","mainContainer","getElementById","ReactDOM","es","App_MainApp","anonymousContainer","App_AnonymousApp"],"mappings":"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ACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAIA,SAAAC,EAAAC,GACA,IAAAzX,EAAA0X,EAAAD,GACA,OAAA7a,EAAAoD,GAEA,SAAA0X,EAAAD,GACA,IAAA7a,EAAAgK,EAAAjE,EAAA8U,GAAA,CACA,IAAArW,EAAA,IAAAnB,MAAA,uBAAAwX,EAAA,KAEA,MADArW,EAAAuW,KAAA,mBACAvW,EAEA,OAAAuB,EAAA8U,GAEAD,EAAA9S,KAAA,WACA,OAAA9I,OAAA8I,KAAA/B,IAEA6U,EAAApX,QAAAsX,EACArV,EAAAqD,QAAA8R,EACAA,EAAAxX,GAAA,s9BC7Ne4X,EA3BI,CACjBC,KAAM,CACJC,wBAAyB,0BACzBC,uBAAwB,yBACxBC,yBAA0B,4BAE5BC,cAAe,CACbC,+BAAgC,iCAChCC,oCAAqC,sCACrCC,iCAAkC,mCAClCC,uCAAwC,yCACxCC,2CAA4C,8CAE9CC,KAAM,CACJC,2BAA4B,6BAC5BC,4BAA6B,8BAC7BC,kCAAmC,oCACnCC,8BAA+B,iCAGjCC,GAAI,CACFC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,mBAAoB,oUChDHC,mMAESC,GAC1B,0BAAA7V,OAA2B6V,0DAGSA,GACpClc,OAAOmc,SAASC,KAAhB,+BAAA/V,OAAsD6V,yDAGnBA,GACnClc,OAAOmc,SAASC,KAAhB,2BAAA/V,OAAkD6V,0DAGdA,GACpClc,OAAOmc,SAASC,KAAhB,4BAAA/V,OAAmD6V,8CAInDlc,OAAOmc,SAASC,KAAO,6DAIvBpc,OAAOmc,SAASC,KAAO,0yBCZNC,6OAEEC,wHACuBA,GAAnCC,UAAOC,cAAWC,cACnBC,EAAU,GAEZD,IACFC,EAAQ,gBAAkBD,GAGtBve,EAAO,CACXqe,MAAOI,IAASJ,GAChBC,UAAWA,GAGPI,EAAOC,IAAM1S,OAAO,CACxB2S,IAAK,WACLC,OAAQ,OACR7e,KAAMA,EACNwe,QAASA,aAGYE,EAAKpZ,oBAAtBwZ,SACAC,EAAOD,EAAS9e,OAGhBgf,EAAeC,IAAEjU,IAAI+T,EAAM,mBAAoB,6BAI9B,2BAAjBC,GACFjB,EAAQmB,kBAGJ,IAAIla,MAAMga,oCAGXD,yTChDEI,EAAwB,IAAIna,MAAM,2CAClCoa,EAAsB,IAAIpa,MAAM,6UCUxBqa,8gBAqBElB,EAAqB7Y,QAAQ,CAAC+Y,6LAA3CU,SACA/e,EAAOif,IAAEjU,IAAI+T,EAAM,qBAAsB,IAC3CO,MAAMC,QAAQvf,IAAyB,IAAhBA,EAAKQ,6BACxB2e,YAIFK,EAAYxf,EAAK,GAEjByf,EAAQR,IAAEjU,IAAIwU,EAAW,QAAS,IAClCE,EAAWT,IAAEjU,IAAIwU,EAAW,WAAY,IAC1CG,EAAUV,IAAEjU,IAAIwU,EAAW,UAAW,IACtCF,MAAMC,QAAQI,0BACVR,iBAERQ,EAAUA,EAAQjY,IAAI,SAAAa,GACpB,IAAIqX,EAAO,GACX,OAAQrX,EAAI,MACV,IAAK,mBACHqX,EAAOC,IACP,MACF,IAAK,sBACHD,EAAOE,IACP,MACF,IAAK,8BACHF,EAAOG,IACP,MACF,IAAK,qBACHH,EAAOI,IAIX,MAAO,CACLP,MAAOR,IAAEjU,IAAIzC,EAAM,QAAS,IAC5B0X,SAAUhB,IAAEjU,IAAIzC,EAAM,YAAY,GAClC2X,gBAAiBjB,IAAEjU,IAAIzC,EAAM,qBAAsB,IACnDqX,KAAMA,uBAIH,CACLH,QACAC,WACAC,0bCpEC,SAASQ,IACd,wBAAAC,KAAAC,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAELL,EAgBK,CACLzY,KAAM4U,EAAWC,KAAKC,0BAnBjB8D,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKqBxB,EAAgByB,gBALrC,OAKGL,EALHE,EAAAI,KAMHP,EAASQ,EAAgBP,IANtBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQHH,GAe0BvW,EAfF0W,EAAAM,GAgBrB,CACLlZ,KAAM4U,EAAWC,KAAKE,uBACtB7S,MAAOA,KAfLvB,QAAQuB,MAAR0W,EAAAM,IACAC,MAAMP,EAAAM,GAAME,SAZT,yBAAAR,EAAAS,OAuBF,IAAyBnX,GAvBvBsW,EAAAc,KAAA,wLAAP,gBAAAC,GAAA,OAAAlB,EAAAjf,MAAAkgB,KAAAE,YAAA,GA8BK,SAASP,EAAgBP,GAC9B,MAAO,CACL1Y,KAAM4U,EAAWC,KAAKG,yBACtByE,QAASf,iqCCJEgB,gaA3BMC,uDAEV,IAAAC,EAAAN,KAEDO,EAAO,CAAI,UAAJzZ,OAAA0Z,EAAiBR,KAAKS,MAAMF,UAKzC,OAJIP,KAAKS,MAAMC,OAAO9B,UACpB2B,EAAQlhB,KAAK,YAIbshB,EAAA3Z,EAAA1B,cAACsb,EAAA,EAAD,CAAMC,UAAWN,EAAQ5Y,KAAK,KAAMmZ,GAAId,KAAKS,MAAMM,KAAMC,QAAS,SAACC,GAC9DX,EAAKG,MAAMC,OAAO9B,WACnBqC,EAAMC,iBACNrB,MAAM,qBAGRc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,QACbF,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAKwa,KAAKS,MAAMC,OAAOnC,KAAM4C,IAAKnB,KAAKS,MAAMC,OAAOtC,SAE3DuC,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SACZb,KAAKS,MAAMC,OAAOtC,41BCDdgD,maAnBUf,uDAEd,IAAAC,EAAAN,KACP,OACEW,EAAA3Z,EAAA1B,cAACsb,EAAA,EAAD,CAAMC,UAAS,cAAA/Z,OAAgBkZ,KAAKS,MAAMF,QAAQ5Y,KAAK,MACjDmZ,GAAId,KAAKS,MAAMM,KACfC,QAAS,SAACC,GACLX,EAAKG,MAAM7B,WACZqC,EAAMC,iBACNrB,MAAM,qBAIdc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SAASb,KAAKS,MAAMrC,uWCpBtBiD,uVAGXhE,EAAOC,IAAM1S,OAAO,CACxB2S,IAAK,gBACLC,OAAQ,MACRL,QAAS,CACPmE,mBAAoB,6BAGDjE,EAAKpZ,oBAAtBwZ,SACA9e,EAAO8e,EAAS9e,KAChB4iB,EAAQ3D,IAAEjU,IAAIhL,EAAM,YAAa,4BAE/B,IAAIgF,MAAMhF,mCAEX4iB,k2CCXLC,oaAAqBnB,uDAMhB,IAAAC,EAAAN,KACAO,qUADAkB,CAAA,GACezB,KAAKS,OAApBF,QAEP,OACEI,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAS,gBAAA/Z,OAAkByZ,EAAQ5Y,KAAK,MAC9CqZ,QAAS,WACPV,EAAKoB,WAGPf,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAKmc,OADZ,kMAUoBN,GAAiBO,sBAAnC1E,SACNzc,OAAOmc,SAASC,KAAhB,+BAAA/V,OAAsDoW,0TA1BpDsE,GAEGK,aAAe,CACpBtB,QAAS,IA2BEiB,8zBCWAM,oaAtCIzB,uDAGf,OACEM,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,QACbF,EAAA3Z,EAAA1B,cAACyc,GAAD,CAAcxB,QAAS,CAAC,WAAW,cAAe,OAAQ,UAC1DI,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,UACbF,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAKwc,IAAWnB,UAAU,SAC/BF,EAAA3Z,EAAA1B,cAAA,UACG0a,KAAKS,MAAMrB,UAAUhB,OAExBuC,EAAA3Z,EAAA1B,cAAA,UACG0a,KAAKS,MAAMrB,UAAUf,UAExBsC,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACZb,KAAKS,MAAMrB,UAAUd,QAAQjY,IAAI,SAACqa,EAAQuB,GACzC,OACEtB,EAAA3Z,EAAA1B,cAAC4c,EAAD,CAAQnB,KAAI,wBAAAja,OAA0B4Z,EAAO7B,iBACrC0B,QAAS,CAAC,MAAO,QACjBG,OAAQA,EACR7V,IAAKoX,OAKnBtB,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SACbF,EAAA3Z,EAAA1B,cAAC6c,GAAD,CAAYpB,KAAK,cAAcR,QAAS,CAAC,QAAS3B,UAAU,EAAMR,MAAM,+BACxEuC,EAAA3Z,EAAA1B,cAAC6c,GAAD,CAAYpB,KAAK,cAAcR,QAAS,CAAC,QAAS3B,UAAU,EAAMR,MAAM,+BACxEuC,EAAA3Z,EAAA1B,cAAC6c,GAAD,CAAYpB,KAAK,cAAcR,QAAS,CAAC,QAAS3B,UAAU,EAAMR,MAAM,+BACxEuC,EAAA3Z,EAAA1B,cAAC6c,GAAD,CAAYpB,KAAK,cAAcR,QAAS,CAAC,QAAS3B,UAAU,EAAMR,MAAM,+BACxEuC,EAAA3Z,EAAA1B,cAAC6c,GAAD,CAAYpB,KAAK,cAAcR,QAAS,CAAC,QAAS3B,UAAU,EAAMR,MAAM,63BC1BrEgE,oaAbM/B,uDAGjB,OACEM,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAU,UAChBF,EAAA3Z,EAAA1B,cAAA,w5BCGR,IAmBM+c,oaAAsBhC,kEAGpBL,KAAKS,MAAM6B,4BACbtC,KAAKS,MAAM6B,8DAKb,OAAKtC,KAAKS,MAAMrB,UAKduB,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,gBAAgB0B,MAAO,CACpCC,gBAAe,QAAA1b,OAAU2b,KAAV,MACfC,eAAgB,UAEhB/B,EAAA3Z,EAAA1B,cAACqd,GAAD,CAAMvD,UAAWY,KAAKS,MAAMrB,YAC5BuB,EAAA3Z,EAAA1B,cAACsd,GAAD,OATK,4CAeEC,eA5CS,SAACC,GACvB,MAAO,CACL1D,UAAW0D,EAAM1D,YAIM,SAACD,EAAoBsB,GAC9C,MAAO,CACL6B,2BAA4B,WAC1BnD,EAASL,QAmCA+D,CAGbR,q8BC9CIU,oaAAmB1C,uDASd,IAAA2C,qUAAAC,CAAA,GACoDjD,KAAKS,OAAzDrC,EADA4E,EACA5E,MAAOmC,EADPyC,EACOzC,QAAS3B,EADhBoE,EACgBpE,SAAUoC,EAD1BgC,EAC0BhC,QAASkC,EADnCF,EACmCE,UAEtC3E,EAAO,KAKX,OAJI2E,IACF3E,EAAOoC,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAK0d,KAIjBvC,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAWsC,KAAW,aAAc5C,EAAS,CAAC3B,SAAYA,IAC1DoC,QAAS,SAACC,GACJrC,EACFqC,EAAMC,iBAGRF,EAAQC,KAGf1C,EACAH,0CA5BH2E,GAEGlB,aAAe,CACpBzD,MAAO,GACPQ,UAAU,EACV2B,QAAS,GACTS,QAAS,cA4BE+B,q2CClCTK,oaAAoB/C,uDAUtB,OAAOM,EAAA3Z,EAAA1B,cAAC+d,GAADC,GAAA,GAAgBtD,KAAKS,MAArB,CAA4BF,QAAO,CAAG,eAAHzZ,OAAAyc,GAAqBvD,KAAKS,MAAMF,oDAVxE6C,GAEGvB,aAAe,CACpBzD,MAAO,GACPQ,UAAU,EACV2B,QAAS,GACTS,QAAS,cAQEoC,8zBCwBAI,oaAvCKnD,uDAET,IAAA2C,EAC4ChD,KAAKS,MAAjDgD,EADAT,EACAS,eAAgBC,EADhBV,EACgBU,KAAMC,EADtBX,EACsBW,mBAE7B,OACEhD,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,cACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,YACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,kBAAf,oBACAF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACV+C,wBAAyB,CACvBC,OAAQJ,KAGf9C,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACbF,EAAA3Z,EAAA1B,cAAA,wBACAqb,EAAA3Z,EAAA1B,cAAA,YAAOoe,EAAKla,OAEdmX,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACbF,EAAA3Z,EAAA1B,cAAA,wBACAqb,EAAA3Z,EAAA1B,cAAA,YAAOoe,EAAKI,OAEdnD,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACbF,EAAA3Z,EAAA1B,cAAA,4BACAqb,EAAA3Z,EAAA1B,cAAA,YAAOoe,EAAKK,SAGhBpD,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,QAAQ4C,QAAS2C,mVCA7BM,sMAEWlH,GAGV,IAAAmH,qUAAAC,CAAA,GACoBpH,GAA/BqH,EADWF,EACXE,WAAYC,EADDH,EACCG,YAEbC,EA5BV,SAA6BF,GAC3B,IAAME,EAAS3f,KAAKC,MAAMwf,GAC1B,IAAIE,IAAWrG,MAAMC,QAAQoG,GAC3B,MAAMvG,EAER,OAAOuG,EAuBUC,CAAoBH,GAC7BI,EA5CV,SAA8BH,GAC5B,IAAKA,EACH,MAAO,GAGT,IAAMI,EAAa9f,KAAKC,MAAMyf,GACxBG,EAAU,GAMhB,OALIC,GACF7G,IAAExV,KAAKqc,GAAYpc,QAAQ,SAACwC,GAC1B2Z,EAAQ5G,IAAE8G,SAAS7Z,IAAQ4Z,EAAW5Z,KAGnC2Z,EAgCWG,CAAqBN,GAC/BO,EAtBV,SAA+BJ,GAC7B,IAAII,EAAoB,GAQxB,OAPAhH,IAAExV,KAAKoc,GAASnc,QAAQ,SAACwc,GACvB,IAAMC,EAASN,EAAQK,IAClBD,GAAqBG,QAAQnH,IAAEjU,IAAImb,EAAN,aAA2B,MAC3DF,EAAoBC,KAIjBD,EAaqBI,CAAsBR,GAEhD,OAAOF,EAAOje,IAAI,SAAC4e,EAAgBC,GACjC,IAAML,EAAajH,IAAE8G,SAAS9G,IAAEjU,IAAIsb,EAAgB,KAAM,KACpDE,EAAYJ,QAAQnH,IAAEjU,IAAI6a,EAAN,GAAA1d,OAAkB+d,EAAlB,eAA0C,IAC9DO,EAAeL,QAAQnH,IAAEjU,IAAI6a,EAAN,GAAA1d,OAAkB+d,EAAlB,kBAA6C,IAItEQ,GAAY,EAEdA,EADET,EACWA,IAAsBC,EAEN,IAAhBK,EAGf,IAAII,EAAS,KACTC,EAAU,KAERC,EAAeL,EAAYvH,IAAEjU,IAAI6a,EAAN,GAAA1d,OAAkB+d,EAAlB,WAAuC,IAAM,GACxEY,EAAgBN,EAAYvH,IAAEjU,IAAI6a,EAAN,GAAA1d,OAAkB+d,EAAlB,YAAwC,IAAM,GAE1Ea,EAAe9H,IAAEjU,IAAIsb,EAAgB,oBAAqB,IAC1DU,EAAgB/H,IAAEjU,IAAIsb,EAAgB,qBAAsB,IAE9DS,GAAgBzH,MAAMC,QAAQwH,IAAiBA,EAAavmB,OAAS,IACvEmmB,EAASI,EAAarf,IAAI,SAACuf,GAEzB,IAAIlf,EAAOkX,IAAE8G,SAAS9G,IAAEjU,IAAIic,EAAa,YAAa,KAAKC,cACxC,CAAC,OAAQ,QAAS,WAAY,QACjCC,SAASpf,KACvBA,EAAO,QAGT,IAAMqf,EAAUnI,IAAE8G,SAAS9G,IAAEjU,IAAIic,EAAa,KAAM,KAC9CI,EAAqB,CACzBtiB,GAAIqiB,EACJE,MAAOrI,IAAE8G,SAAS9G,IAAEjU,IAAIic,EAAa,QAAS,KAC9Clf,KAAMA,EACNwf,SAAUnB,QAAQnH,IAAEjU,IAAIic,EAAa,YAAY,IACjDO,UAAWC,OAAOC,SAASzI,IAAE8G,SAAS9G,IAAEjU,IAAIic,EAAa,YAAa,KACtEU,YAAa1I,IAAE8G,SAAS9G,IAAEjU,IAAIic,EAAa,cAAe,KAC1DjnB,KAAM,MAIR,GAAI6mB,GAAgBvH,MAAMC,QAAQsH,IAAiBA,EAAarmB,OAAS,EAAG,CAC1E,IAAM2lB,EAASlH,IAAEnY,KAAK+f,EAAae,OAAO,SAACzB,GAAD,OAAYA,EAAOphB,KAAOqiB,KACpE,GAAIjB,EAAQ,CACV,IAAM0B,EAAY5I,IAAE8G,SAAS9G,IAAEjU,IAAImb,EAAQ,OAAQ,OAC/C0B,IACFR,EAAMrnB,KAAO6nB,IAKnB,OAAOR,KAIPL,GAAiB1H,MAAMC,QAAQyH,IAAkBA,EAAcxmB,OAAS,IAC1EomB,EAAUI,EAActf,IAAI,SAACogB,GAE3B,IAAI/f,EAAOkX,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,aAAc,KAAKZ,cAC1C,CAAC,WAAY,OAAQ,UAAW,UACnCC,SAASpf,KACvBA,EAAO,YAGT,IAAMggB,EAAW9I,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,KAAM,KAChDE,EAAuB,CAC3BjjB,GAAIgjB,EACJT,MAAOrI,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,QAAS,KAC/C/f,KAAMA,EACNkgB,SAAS,GAGE,YAATlgB,IACFigB,EAAO7G,QAAUlC,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,UAAW,MAGhD,SAAT/f,IACFigB,EAAOE,KAAOjJ,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,SAAU,MAG5C,WAAT/f,IACFigB,EAAO3mB,OAAS4d,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,SAAU,MAI3D,IAAMK,EAASlJ,IAAE8G,SAAS9G,IAAEjU,IAAI8c,EAAc,SAAU,KAIxD,GAHAE,EAAOG,OAASA,EAGZrB,GAAiBxH,MAAMC,QAAQuH,IAAkBA,EAActmB,OAAS,EAAG,CAC7E,IAAM2lB,EAASlH,IAAEnY,KAAKggB,EAAcc,OAAO,SAACzB,GAAD,OAAYA,EAAOphB,KAAOgjB,KACrE,GAAI5B,EAAQ,CACV,IAAM8B,EAAU7B,QAAQnH,IAAEjU,IAAImb,EAAQ,WAAW,IACjD6B,EAAOC,QAAUA,GAIrB,OAAOD,KAIX,IAAMI,EAAqB,CACzBrjB,GAAImhB,EACJzG,MAAOR,IAAE8G,SAAS9G,IAAEjU,IAAIsb,EAAgB,QAAS,KACjD+B,QAASpJ,IAAE8G,SAAS9G,IAAEjU,IAAIsb,EAAgB,WAAY,KACtDgC,YAAarJ,IAAE8G,SAAS9G,IAAEjU,IAAIsb,EAAgB,cAAe,KAC7Dve,KAAiF,UAA3EkX,IAAE8G,SAAS9G,IAAEjU,IAAIsb,EAAgB,kBAAmB,KAAKY,cAA4B,QAAU,SACrGR,UAAWA,EACXF,UAAWA,EACXC,aAAcA,GAUhB,OAPIE,IACFyB,EAASzB,OAASA,GAEhBC,IACFwB,EAASxB,QAAUA,GAGdwB,8NC3KQG,iMAEMC,GACvB,IAAM1C,EAAkC,iBAAb0C,EAAwBxiB,KAAKC,MAAMuiB,GAAYA,EAE1E,MAAO,CACLzjB,GAAIka,IAAE8G,SAAS9G,IAAEjU,IAAI8a,EAAY,OACjCjb,KAAI,GAAA1C,OAAK8W,IAAEjU,IAAI8a,EAAY,aAAvB,KAAA3d,OAAuC8W,IAAEjU,IAAI8a,EAAY,YAC7DX,KAAMlG,IAAEjU,IAAI8a,EAAY,YACxBV,MAAOnG,IAAEjU,IAAI8a,EAAY,i+BCHV2C,+PAEqBrK,iHACGA,GAAlC8B,oBAAiB3B,cAClBF,0EAEwC6B,iCAK3B/B,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA2J,EAAiBzJ,IAAEjU,IAAI+T,EAAM,0CAA2C,4BAEtEI,kCAGDuJ,2LAGmBxI,uGACpB7B,wIASgB6B,sGAWH/B,EAAqB7Y,QAAQ,CAAC+Y,oBAA3CU,SACA4J,EAAa1J,IAAEjU,IAAI+T,EAAM,2BAA4B,MACrD6J,EAAoB3J,IAAEjU,IAAI+T,EAAM,yBAA0B,MAC1D8J,EAAW5J,IAAEjU,IAAI+T,EAAM,wBAAyB,MAEjD4J,GAAeC,GAAsBC,wBAClC1J,kCAGD,CACLM,MAAOR,IAAEjU,IAAI4d,EAAmB,OAAQ,IACxClJ,SAAUT,IAAEjU,IAAI6d,EAAU,QAAS,IACnC3I,gBAAiBjB,IAAEjU,IAAI4d,EAAmB,KAAM,IAChD9D,eAAgB7F,IAAEjU,IAAI4d,EAAmB,iBAAkB,IAC3D7D,KAAM,CACJhgB,GAAIka,IAAEjU,IAAI2d,EAAY,MACtB9d,KAAI,GAAA1C,OAAK8W,IAAEjU,IAAI2d,EAAY,aAAvB,KAAAxgB,OAAuC8W,IAAEjU,IAAI2d,EAAY,YAC7DxD,KAAMlG,IAAEjU,IAAI2d,EAAY,YACxBvD,MAAOnG,IAAEjU,IAAI2d,EAAY,0MAKED,uGACzBrK,qJAS6BqK,geA8BhBvK,EAAqB7Y,QAAQ,CAAC+Y,oBAA3CU,SAEA4J,EAAa1J,IAAEjU,IAAI+T,EAAM,2BAA4B,IACrD+J,EAAiB7J,IAAEjU,IAAI+T,EAAM,qCAAsC,IACpE4J,GAAeG,wBACZ3J,gBAGFnf,EAAqC,CACzCyf,MAAOR,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,qBAAsB,KAC9DC,UAAW9J,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,8BAA+B,KACjEgG,KAAMwD,GAAWS,kBAAkBL,GACnCM,sBAAqF,SAA9DhK,IAAEjU,IAAI8d,EAAgB,0BAA2B,SACxEI,WAAY,CACVhJ,gBAAiBjB,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,mBAAoB,KACtEK,mBAAoBlK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,qBAAsB,KAC3EM,aAAcnK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,KAAM,KACrDO,eAAgBpK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,OAAQ,KACzDQ,UAAW,CACTvkB,GAAIka,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,YACrCje,KAAMoU,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,gBAAiB,KACxD3D,KAAMlG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,gBAAiB,KACxD1D,MAAOnG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,iBAAkB,MAE5D3kB,OAAQ8a,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,sBAAuB,KAAK5B,cAAcqC,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiCxK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,qBAAsB,KACxFY,cAAezK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,8BAA+B,KAC/Ea,kBAAmB1K,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,kCAAmC,MAEzFc,UAAWtE,GAAeuE,uBAAuB,CAC/CpE,WAAYxG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,oBAAqB,KAClEpD,YAAazG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,aAAc,OAE9DgB,gBAAiB7K,IACd8K,QAAQ9K,IAAEjU,IAAI8d,EAAgB,kBAAmB,KACjDphB,IAAI,SAACa,GAMJ,MAL8C,CAC5CyV,KAAMiB,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,OAAQ,KACrCyhB,SAAU/K,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ8a,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,SAAU,4BAO5CvI,kMAGyBoe,qHAM8BA,GAAvDgL,iBAAclD,eAAY+D,eAAY1L,cACvC2L,EAAgBpoB,OAAOqoB,KAAKnkB,KAAKokB,UAAUH,IAE3C5L,+DAE6B+K,6BAA+BlD,6BAA6BgE,mDAM5E/L,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACcE,IAAEjU,IAAI+T,EAAM,gDAAiD,4BAEzEI,qMAI6Bf,2HAMiCA,GAA/DgL,iBAAciB,mBAAgBC,mBAAgB/L,cAEjD8L,EAAe7pB,SAAW8pB,EAAe9pB,6BACrC2e,SAIR,IADIoL,EAAY,GACPjH,EAAQ,EAAGA,EAAQ+G,EAAe7pB,OAAQ8iB,IAC3C4C,EAAamE,EAAe/G,GAC5B2G,EAAaK,EAAehH,GAC5B4G,EAAgBpoB,OAAOqoB,KAAKnkB,KAAKokB,UAAUH,IAC3CO,EAJoD,mBAAAriB,OAKhD+d,EALgD,yCAAA/d,OAKEihB,EALF,oBAAAjhB,OAKiC+d,EALjC,oBAAA/d,OAK8D+hB,EAL9D,+BAS1DK,EAAU7pB,KAAK8pB,UAGbnM,4BAEJkM,EAAUvhB,KAAK,wBAIImV,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACcE,IAAEjU,IAAI+T,EAAM,OAAQ,6BAEhCI,gMAIuBf,mHACOA,GAA/BgL,iBAAc7K,cACfF,qEAEmC+K,2DAKtBjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SACf9G,IAAEjU,IAAI+T,EAAM,gEAAiE,OACzEf,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,iDAAkD,OACjF5a,GAAW6Z,wBACRmB,kCAED,CAACnB,kNAGkCI,mHACJA,GAA/BgL,iBAAc7K,cACfF,+FAE6D+K,2DAKhDjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SACf9G,IAAEjU,IAAI+T,EAAM,0FAA2F,OACnGf,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,2EAA4E,OAC3G5a,GAAW6Z,wBACRmB,kCAED,CAACnB,kNAGkCI,mHACJA,GAA/BgL,iBAAc7K,cACfF,0EAEwC+K,2DAK3BjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SACf9G,IAAEjU,IAAI+T,EAAM,qEAAsE,OAC9Ef,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,sDAAuD,OACtF5a,GAAW6Z,wBACRmB,kCAED,CAACnB,+MAG+BI,mHACDA,GAA/BgL,iBAAc7K,cACfF,uEAEqC+K,2DAKxBjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,kEAAmE,OACnGf,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,mDAAoD,OACnF5a,GAAW6Z,wBACRmB,kCAED,CAACnB,+vBCvRSyM,+MAEoBC,GACrC,IAAMT,EAAqC,CACzCvD,UAAWgE,EAAahE,UACxBF,UAAWkE,EAAalE,UACxBC,aAAciE,EAAajE,aAC3BkE,WAAYD,EAAa3iB,MA0B3B,MAvB0B,UAAtB2iB,EAAa3iB,MAAoBuX,MAAMC,QAAQmL,EAAa/D,UAC9DsD,EAAWtD,OAAS+D,EAAa/D,OAAOjf,IAAI,SAAC2f,GAC3C,IAAIrnB,EAAOqnB,EAAMrnB,KAKjB,OAJIA,GAAQif,IAAE2L,SAAS5qB,KACrBA,EAAOA,EAAK6qB,QAGP,CACL9lB,GAAIsiB,EAAMtiB,GACV/E,KAAMA,MAKc,WAAtB0qB,EAAa3iB,MAAqBuX,MAAMC,QAAQmL,EAAa9D,WAC/DqD,EAAWrD,QAAU8D,EAAa9D,QAAQlf,IAAI,SAACsgB,GAC7C,MAAO,CACLjjB,GAAIijB,EAAOjjB,GACXkjB,QAASD,EAAOC,YAKfgC,mDAGuBL,GAC9B,IAAIkB,GAAwB,EAQ5B,OAPAlB,EAAUlgB,QAAQ,SAAC0e,GAAa,IAAA2C,EAAAC,GAAA,GACQ5C,GAA/B5B,EADuBuE,EACvBvE,UAAWC,EADYsE,EACZtE,cAEbD,GAAaC,IAChBqE,GAAwB,KAGrBA,yDAG6BhB,GACpC,IAAImB,GAAS,EAMb,OALAnB,EAAgBpgB,QAAQ,SAACwhB,GACO,gBAA1BA,EAAe/mB,SACjB8mB,GAAS,KAGNA,8CAIP7M,GACuC,IAAAmH,EAAAyF,GAAA,GACG5M,GAAnC+M,EADgC5F,EAChC4F,iBAAkBvB,EADcrE,EACdqE,UAEnBwB,EAAgB,CACpBC,aAAczB,EAAU0B,UAAU,SAAClD,GAAD,OAAcA,EAASrjB,KAAOomB,EAAiBpmB,KACjFwmB,qBAAsB,GACtBC,YAAa,EACbC,UAAU,EACVC,WAAW,EACXrqB,OAAQ,IAIV,GAA8B,UAA1B8pB,EAAiBpjB,KASnB,OARIqjB,EAAcC,eAAiBzB,EAAUppB,OAAS,EAEpD4qB,EAAcK,UAAW,EAGzBL,EAAcI,YAAcJ,EAAcC,aAAe,EAGpDD,EAIT,GAA8B,WAA1BD,EAAiBpjB,KAAmB,CACtC,IAAKojB,EAAiBvE,QACpB,MAAM,IAAI5hB,MAAM,2CAGlB,IAAM2mB,EAAcR,EAAiBvE,QAAQgF,KAAK,SAAC5D,GACjD,OAAOA,EAAOC,UAEhB,IAAK0D,EACH,MAAM,IAAI3mB,MAAM,kDAIlB,GAAyB,WAArB2mB,EAAY5jB,KAAmB,CAEjC,IAAK,IAAIzH,EAAI8qB,EAAcC,aAAe,EAAG/qB,EAAIspB,EAAUppB,OAAQF,IACjE8qB,EAAcG,qBAAqB7qB,KAAKJ,GAG1C8qB,EAAc/pB,OAASsqB,EAAYtqB,QAAU,GAC7C+pB,EAAcK,UAAW,EAW3B,GARyB,YAArBE,EAAY5jB,OACdqjB,EAAcM,WAAY,GAGH,aAArBC,EAAY5jB,OACdqjB,EAAcI,YAAcJ,EAAcC,aAAe,GAGlC,SAArBM,EAAY5jB,KAAiB,CAE/B,IAAM8jB,EAAWF,EAAYzD,KAM7B,GALAkD,EAAcI,YAAc5B,EAAU0B,UAAU,SAAClD,GAC/C,OAAOA,EAASrjB,KAAO8mB,IAIrBT,EAAcI,aAAeJ,EAAcC,aAC7C,MAAM,IAAIrmB,MAAM,2CAIlB,GAAIomB,EAAcI,YAAcJ,EAAcC,aAAe,EAE3D,IADA,IAAIS,EAASV,EAAcC,aAAe,EACnCS,EAASV,EAAcI,aAC5BJ,EAAcG,qBAAqB7qB,KAAKorB,GACxCA,IASN,OAJIV,EAAcC,eAAiBzB,EAAUppB,OAAS,IAEpD4qB,EAAcK,UAAW,GAEpBL,EAGT,MAAM,IAAIpmB,MAAM,++BCrJC+mB,oRAE0C3N,iHAIVA,GAA1C4N,4BAAyBzN,cAG1B0N,EAAa,GACnBD,EAAwBpC,UAAUlgB,QAAQ,SAAC0e,GAEzC,GAAsB,WAAlBA,EAASrgB,KAAb,CAKA,IAAM6e,EAAUwB,EAASxB,QACzB,IAAKA,IAAYtH,MAAMC,QAAQqH,GAC7B,MAAM,IAAI5hB,MAAM,+DAIlB4hB,EAAQld,QAAQ,SAACse,GACf,GAAKA,EAAOC,QAAZ,CAIA,IAAME,EAASH,EAAOG,QACjBA,GAAUV,OAAOC,SAASS,IAAW,GAI1C8D,EAAWvrB,KAAKynB,SAOa,KAH3B+D,EAAmBjN,IAAEkN,KAAKF,IAGXzrB,+DAKf+pB,EAAY,GAClB2B,EAAiBxiB,QAAQ,SAACye,GACxB,IAAM9J,EAAK,yBAAAlW,OACKggB,EADL,oCAAAhgB,OAC8CggB,EAD9C,mCAAAhgB,OACsF6jB,EAAwB5C,aAD9G,yBAKXmB,EAAU7pB,KAAK2d,KAGXA,4BAENkM,EAAUvhB,KAAK,uBAGImV,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,yBAAlDQ,SACcE,IAAEjU,IAAI+T,EAAM,OAAQ,6BAEhCI,qMAI4BnB,uGAC9BK,gLAYoBL,4KAaOG,EAAqB7Y,QAAQ,CAAC+Y,oBAAzD+N,SAEAC,EAA0BpN,IAAEjU,IAAIohB,EAAoB,2BAA4B,IAChFE,EAAuBrN,IAAEjU,IAAIohB,EAAoB,4BAA6B,IAC/EC,GAA4BC,wBACzBnN,gBAGFnf,EAA4B,CAChC+oB,UAAW9J,IAAE8G,SAAS9G,IAAEjU,IAAIohB,EAAoB,8BAA+B,KAC/EG,YAAahE,GAAWS,kBAAkBqD,GAC1CnB,eAAgB,CACdnmB,GAAIka,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,KAAM,KACjDtO,KAAMiB,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,OAAQ,KACrDtC,SAAU/K,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,WAAY,KAC7DnoB,OAAQ8a,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,SAAU,KACzDjrB,OAAQ4d,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,SAAU,KACzDE,4BAA6BvN,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,+BAAgC,KACpG1C,UAAWtE,GAAeuE,uBAAuB,CAC/CpE,WAAYxG,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,oBAAqB,KACxE5G,YAAazG,IAAE8G,SAAS9G,IAAEjU,IAAIshB,EAAsB,aAAc,2BAKjEtsB,2MAGkCoe,2HACqBA,GAAvDJ,SAAMqM,mBAAgBC,mBAAgB/L,cAEzC8L,EAAe7pB,SAAW8pB,EAAe9pB,6BACrC2e,SAIR,IADIoL,EAAY,GACPjH,EAAQ,EAAGA,EAAQ+G,EAAe7pB,OAAQ8iB,IAC3C4C,EAAamE,EAAe/G,GAC5B2G,EAAaK,EAAehH,GAC5B4G,EAAgBpoB,OAAOqoB,KAAKnkB,KAAKokB,UAAUH,IAC3CO,EAJoD,mBAAAriB,OAKhD+d,EALgD,kCAAA/d,OAKL6V,EALK,oBAAA7V,OAKkB+d,EALlB,oBAAA/d,OAK+C+hB,EAL/C,6BAS1DK,EAAU7pB,KAAK8pB,UAGbnM,4BAEJkM,EAAUvhB,KAAK,wBAIImV,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACcE,IAAEjU,IAAI+T,EAAM,OAAQ,6BAEhCI,mMAI0Bf,iHAKIA,GAA/BJ,SAAM3c,WAAQkd,cACjBF,yDAEyBL,yBAAmB3c,8CAM7B8c,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACDE,IAAEjU,IAAI+T,EAAM,mCAAoC,4BAC7CI,kCAED,CAACnB,qMAGsBI,+GACAA,GAAvBJ,SAAMO,cACPF,qDAEmBL,8CAKNG,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACDE,IAAEjU,IAAI+T,EAAM,+BAAgC,4BACzCI,kCAED,CAACnB,wyBC5IL,SAASyO,GAAiC/D,GAC/C,sBAAAgE,EAAAC,GAAAtM,mBAAAC,KAAO,SAAAsM,EAAOpM,GAAP,IAAAxgB,EAAA,OAAAqgB,mBAAAK,KAAA,SAAAmM,GAAA,cAAAA,EAAAjM,KAAAiM,EAAAhM,MAAA,cAAAgM,EAAAjM,KAAA,EAAAiM,EAAAhM,KAAA,EAGgB4H,GAAyBqE,oBAAoBpE,GAH7D,OAGG1oB,EAHH6sB,EAAA9L,KAIHP,GAQmDgB,EARDxhB,EAS/C,CACL+H,KAAM4U,EAAWK,cAAcE,oCAC/BsE,aAfKqL,EAAAhM,KAAA,gBAAAgM,EAAAjM,KAAA,EAAAiM,EAAA5L,GAAA4L,EAAA,SAOH3L,MAAK2L,EAAA5L,IAPF,yBAAA4L,EAAAzL,OAYF,IAAkDI,GAZhDoL,EAAAvL,KAAA,YAAP,gBAAA0L,GAAA,OAAAL,EAAAvrB,MAAAkgB,KAAAE,YAAA,GA0DK,SAASyL,GAA0B7B,GACxC,sBAAA8B,EAAAN,GAAAtM,mBAAAC,KAAO,SAAA4M,EAAO1M,EAAU2M,GAAjB,IAAAC,EAAAlE,EAAAmE,EAAAhC,EAAAG,EAAAD,EAAAE,EAAA,OAAApL,mBAAAK,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,UACCuM,EAAuBD,IACvBjE,EAAakE,EAAUG,mBAAmBC,gBAAgBtE,WAF3D,CAAAoE,EAAAzM,KAAA,eAAAyM,EAAAG,OAAA,wBAAAJ,EAYD5C,GAAmBiD,oBAAoB,CACzCvC,mBACAvB,UAAWV,EAAWU,YANtByB,EARGgC,EAQHhC,aACAG,EATG6B,EASH7B,YACAD,EAVG8B,EAUH9B,qBACAE,EAXG4B,EAWH5B,SAOEF,EAAqB/qB,OAAS,GAChCggB,EAAS,CACPzY,KAAM4U,EAAWK,cAAcK,2CAC/BkO,yBAKAC,EAAcH,GAChB7K,EAAS,CACPzY,KAAM4U,EAAWK,cAAcI,uCAC/BoO,gBA7BC8B,EAAAzM,KAAA,EAkCC8M,GAA0BR,IAAYlO,IAAEkN,KAAF,CAAQd,GAARljB,OAAAylB,GAAyBrC,GAAzB,CAA+CC,MAlCtF,OAoCDC,GACF1N,EAAQ8P,8BAA8B3E,EAAWG,gBArC9C,yBAAAiE,EAAAlM,SAAA8L,EAAA7L,SAAP,gBAAAyM,EAAAC,GAAA,OAAAd,EAAA9rB,MAAAkgB,KAAAE,YAAA,YA+IaoM,2FAAf,SAAAK,EAAyCZ,EAAsBa,GAA/D,IAAA/E,EAAA3K,EAAA,OAAA8B,mBAAAK,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,UACQqI,EAAakE,EAAUG,mBAAmBC,gBAAgBtE,WADlE,CAAAgF,EAAArN,KAAA,eAAAqN,EAAAT,OAAA,wBAAAS,EAAArN,KAAA,EAM0B6B,GAAiBO,eAN3C,cAMQ1E,EANR2P,EAAAnN,KAAAmN,EAAAtN,KAAA,EAAAsN,EAAArN,KAAA,EAQU4H,GAAyBkF,0BAA0B,CACvDvE,aAAcF,EAAWE,aACzBiB,eAAgB4D,EAAgBvmB,IAAI,SAAC4b,GAAD,OAAW4F,EAAWU,UAAUtG,GAAOve,KAC3EulB,eAAgB2D,EAAgBvmB,IAAI,SAAC4b,GAAD,OAAWmH,GAAmB0D,gCAAgCjF,EAAWU,UAAUtG,MACvH/E,cAZN,OAAA2P,EAAArN,KAAA,iBAAAqN,EAAAtN,KAAA,GAAAsN,EAAAjN,GAAAiN,EAAA,SAgBIhN,MAAMgN,EAAAjN,GAAME,SAhBhB,yBAAA+M,EAAA9M,SAAA4M,EAAA3M,KAAA,i9BC7Oe+M,oaApBM1M,uDAEV,IAAA2C,qUAAAgK,CAAA,GACuBhN,KAAKS,OAA5BrC,EADA4E,EACA5E,MAAOC,EADP2E,EACO3E,SAEd,OACEsC,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAU,UAChBF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,cACbF,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAKwc,IAAWnB,UAAU,UAEjCF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,kBACbF,EAAA3Z,EAAA1B,cAACyc,GAAD,OAEFpB,EAAA3Z,EAAA1B,cAAA,UAAK8Y,GACLuC,EAAA3Z,EAAA1B,cAAA,UAAK+Y,0xCCbb,IA6BM4O,oaAAuB5M,kEAEP,IAAA2C,EAAAkK,GAAA,GAC6ClN,KAAKS,OAA7D5B,EADWmE,EACXnE,iBACPsO,EAFkBnK,EACMmK,iCACQtO,oCAGzB,IAAAuO,EAAAF,GAAA,GAC6ClN,KAAKS,MAAM4M,YAAxDjP,EADAgP,EACAhP,MAAOC,EADP+O,EACO/O,SAAUoF,EADjB2J,EACiB3J,eAAgBC,EADjC0J,EACiC1J,KADjC4J,EAAAJ,GAAA,GAEiElN,KAAKS,OAAtE5B,EAFAyO,EAEAzO,gBAAiB0O,EAFjBD,EAEiBC,yCAExB,OAAI7J,EAKF/C,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,kBACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOA,EAAOC,SAAUA,IAEhCsC,EAAA3Z,EAAA1B,cAACmoB,GAAD,CAAOhK,eAAgBA,EAChBC,KAAMA,EACNC,mBAAoB,WAClB4J,EAAyC1O,MAGlD8B,EAAA3Z,EAAA1B,cAACsd,GAAD,OAbK,4CAmBEC,eA5DS,SAACC,GACvB,MAAO,CACLuK,WAAYvK,EAAMoJ,mBAAmBmB,aAId,SAAClO,EAAoBsB,GAC9C,MAAO,CACL0M,gCADK,SAC2BtO,GAC9BM,EFEC,SAAqCN,GAC1C,OAAAE,EAAAuM,GAAAtM,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAxgB,EAAA,OAAAqgB,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgB4H,GAAyBsG,eAAe7O,GAHxD,OAGGlgB,EAHH2gB,EAAAI,KAIHP,GAQ8CgB,EARDxhB,EAS1C,CACL+H,KAAM4U,EAAWK,cAAcC,+BAC/BuE,aAfKb,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOHO,MAAKP,EAAAM,IAPF,yBAAAN,EAAAS,OAYF,IAA6CI,GAZ3CjB,EAAAc,KAAA,YAAP,SAAAC,GAAA,OAAAlB,EAAAjf,MAAAkgB,KAAAE,YAAA,IAAAnB,EEHa4O,CAA4B9O,KAEvC0O,yCAJK,SAIoC1O,GACvCM,EFqBC,SAAoCN,GACzC,OAAA+O,EAAAtC,GAAAtM,mBAAAC,KAAO,SAAA4O,EAAO1O,GAAP,IAAAjC,EAAAP,EAAA,OAAAqC,mBAAAK,KAAA,SAAAyO,GAAA,cAAAA,EAAAvO,KAAAuO,EAAAtO,MAAA,cAAAsO,EAAAvO,KAAA,EAAAuO,EAAAtO,KAAA,EAIqB6B,GAAiBO,eAJtC,cAIG1E,EAJH4Q,EAAApO,KAAAoO,EAAAtO,KAAA,EAOgB4H,GAAyB2G,2BAA2B,CAAClP,kBAAiB3B,cAPtF,OAOGP,EAPHmR,EAAApO,KAUHhD,EAAQsR,+BAA+BrR,GAVpCmR,EAAAtO,KAAA,iBAAAsO,EAAAvO,KAAA,GAAAuO,EAAAlO,GAAAkO,EAAA,SAcHjO,MAAKiO,EAAAlO,IAdF,yBAAAkO,EAAA/N,SAAA8N,EAAA7N,KAAA,aAAP,SAAAiO,GAAA,OAAAL,EAAA9tB,MAAAkgB,KAAAE,YAAA,IAAA0N,EEtBaG,CAA2BlP,OAgD3BgE,CAGboK,qxCChEmBiB,oaAAoB7N,uDAE9B,IAAA2C,EAAAmL,GAAA,GAC6BnO,KAAKS,OAAlCsG,EADA/D,EACA+D,SAAUqH,EADVpL,EACUoL,YAEjB,OACEzN,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,eACZb,KAAKqO,WAAWtH,GACjBpG,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAU,MACVjC,UAAWmI,EAAS3B,aACpBpE,QAAS,SAACC,GACRmN,EAAYrH,KAEnBA,EAAS3I,2CAMP2I,GAAoB,IAAA2C,EAAAyE,GAAA,GACoBpH,GAA1C1B,EADsBqE,EACtBrE,UAAWF,EADWuE,EACXvE,UAAWC,EADAsE,EACAtE,aAE7B,OAAIC,EAEA1E,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAK8oB,OAITlJ,EAMDD,GAAaC,EAEbzE,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,gCAKfF,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,gCAXXF,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,8/BCZN0N,oaAlBOlO,uDAEX,IAAA2C,qUAAAwL,CAAA,GAC8BxO,KAAKS,OAAnC8H,EADAvF,EACAuF,UAAW6F,EADXpL,EACWoL,YAElB,OACEzN,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SAAf,cACAF,EAAA3Z,EAAA1B,cAAA,WACGijB,EAAUliB,IAAI,SAAC0gB,GACd,OAAOpG,EAAA3Z,EAAA1B,cAACmpB,GAAD,CAAa1H,SAAUA,EAAUqH,YAAaA,EAAavjB,IAAKkc,EAASrjB,24CCRtFgrB,oaAAmBrO,uDAUrB,OAAOM,EAAA3Z,EAAA1B,cAAC+d,GAADsL,GAAA,GAAgB3O,KAAKS,MAArB,CAA4BF,QAAO,CAAG,cAAHzZ,OAAA8nB,GAAoB5O,KAAKS,MAAMF,oDAVvEmO,GAEG7M,aAAe,CACpBzD,MAAO,GACPQ,UAAU,EACV2B,QAAS,GACTS,QAAS,cAQE0N,k/CCsOAG,oaAhPYxO,uDAEhB,IACA0G,EADA+H,GAAA,GACgB9O,KAAKS,OAArBsG,SAEP,OACEpG,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,gBACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACZkG,EAASC,SAEZrG,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,eACZkG,EAASE,aAGXjH,KAAK+O,cAAchI,GACnB/G,KAAKgP,iBAAiBjI,0CAKfA,GAAoB,IACzBkI,EADyBH,GAAA,GACA9O,KAAKS,OAA9BwO,kBACP,GAAsB,WAAlBlI,EAASrgB,KAAb,CAIA,IAAM6e,EAA+B3H,IAAEjU,IAAIod,EAAU,UAAW,MAChE,IAAKxB,EACH,OAAO,KAIT,IAAIzF,EAAU,KACRoP,EAAe3J,EAAQgF,KAAK,SAAC5D,GAAD,OAAYA,EAAOC,UAUrD,OATIsI,GAAgBA,EAAapP,UAC/BA,EACEa,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,qBACAqb,EAAA3Z,EAAA1B,cAAA,OAAKse,wBAAyB,CAACC,OAAQqL,EAAapP,aAMxDa,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACZ0E,EAAQlf,IAAI,SAACsgB,EAAQ1E,GACpB,OAAQA,GACN,KAAK,EACH,OAAOtB,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CAAY/Q,MAAOuI,EAAOV,MAAOpb,IAAK8b,EAAOjjB,GAAI6c,QAAS,CAAC,QAASS,QAAS,WAClFiO,EAAkBtI,MAEtB,QACE,OAAOhG,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAOuI,EAAOV,MAAOpb,IAAK8b,EAAOjjB,GAAI6c,QAAS,CAAC,QAASS,QAAS,WACnFiO,EAAkBtI,UAK3B7G,6CAKUiH,GAAoB,IAC5BqI,EAD4BN,GAAA,GACJ9O,KAAKS,OAA7B2O,iBACP,GAAsB,UAAlBrI,EAASrgB,KAAb,CAIA,IAAM4e,EAA6B1H,IAAEjU,IAAIod,EAAU,SAAU,MAC7D,IAAKzB,EACH,OAAO,KAGT,IAAM+J,EAAgB,GAKtB,OAJA/J,EAAOjd,QAAQ,SAAC2d,GACdqJ,EAAcrJ,EAAMtiB,IAAMsiB,EAAMrnB,MAAQ,KAGnCgiB,EAAA3Z,EAAA1B,cAACgqB,GAAA,EAAD,CACLD,cAAeA,EACfE,SAAU,SAAAC,GACR,IAAIC,EAAS,GAiCb,OAhCAnK,EAAOjd,QAAQ,SAAC2d,GAAuB,IAAA0J,EAAAZ,GAAA,GACc9I,GAA5CtiB,EAD8BgsB,EAC9BhsB,GAAIgD,EAD0BgpB,EAC1BhpB,KAAMwf,EADoBwJ,EACpBxJ,SAAUD,EADUyJ,EACVzJ,MAAOE,EADGuJ,EACHvJ,UAC5Btc,EAAQ+T,IAAEjU,IAAI6lB,EAAQ9rB,EAAI,OAG5BwiB,GAAarc,EAMbsc,EAAY,GAAKtc,GAASA,EAAM1K,OAASgnB,EAC3CsJ,EAAO/rB,GAAP,wCAAAoD,OAAqDqf,EAArD,oBAAArf,OAAiFmf,GAKtE,UAATvf,GACD,2CAA2CipB,KAAK9lB,GAMtC,SAATnD,IACWkpB,KAAO/lB,EAAO,cACjBgmB,YACRJ,EAAO/rB,GAAM,mBARf+rB,EAAO/rB,GAAM,0BAbb+rB,EAAO/rB,GAAP,8BAAAoD,OAA2Cmf,KA0BxCwJ,GAETK,SAAU,SAACN,EAAQO,GACjBX,EAAiBW,EAAQP,KAG1B,SAAAzQ,GAAoDA,EAAlDiR,aAAkD,IAApCP,EAAoC1Q,EAApC0Q,OAAQQ,EAA4BlR,EAA5BkR,QAASC,EAAmBnR,EAAnBmR,cAC1BC,EAAiB,GASvB,OARAvS,IAAExV,KAAKqnB,GACJlJ,OAAO,SAAA1b,GACN,OAAOka,QAAQkL,EAAQplB,MAExBxC,QAAQ,SAAAwC,GACPslB,EAAetlB,GAAO4kB,EAAO5kB,KAI/B8V,EAAA3Z,EAAA1B,cAACgqB,GAAA,EAAD,KACE3O,EAAA3Z,EAAA1B,cAAA,aACEqb,EAAA3Z,EAAA1B,cAAA,aACCggB,EAAOjf,IAAI,SAAC2f,GAAU,IAAAoK,EAAAtB,GAAA,GACsB9I,GAApCtiB,EADc0sB,EACd1sB,GAAIgD,EADU0pB,EACV1pB,KAAMuf,EADImK,EACJnK,MAAOK,EADH8J,EACG9J,YAClB+J,EAAWtL,QAAQnH,IAAEjU,IAAIwmB,EAAgBzsB,EAAI,OAC7C6c,EAAU,GAKhB,OAJI8P,GACF9P,EAAQlhB,KAAK,SAGX,CAAC,OAAQ,SAASymB,SAASpf,GAE3Bia,EAAA3Z,EAAA1B,cAAA,MAAIuF,IAAKnH,GACPid,EAAA3Z,EAAA1B,cAAA,MAAIub,UAAU,SAAQF,EAAA3Z,EAAA1B,cAAA,aAAQ2gB,IAC9BtF,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAACgqB,GAAA,EAAD,CAAO5oB,KAAMA,EAAM8C,KAAM9F,EAAImd,UAAWN,EAAQ5Y,KAAK,KAAM2e,YAAaA,IACvE+J,GAAY1P,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,iDAMrB,SAATna,EAEAia,EAAA3Z,EAAA1B,cAAA,MAAIuF,IAAKnH,GACPid,EAAA3Z,EAAA1B,cAAA,MAAIub,UAAU,SAAQF,EAAA3Z,EAAA1B,cAAA,aAAQ2gB,IAC9BtF,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAACgqB,GAAA,EAAD,CAAO9lB,KAAM9F,EAAI4sB,OAAQ,SAAA1C,GAAa,IAChC2C,EAAO,KACLC,EAF8B5C,EAAX6C,MAED5mB,OAAS,KAKjC,OAJI2mB,GAAaA,EAAUhH,OAAOrqB,OAAS,IACzCoxB,EAAOX,KAAOY,GAAWE,UAIzB/P,EAAA3Z,EAAA1B,cAACqrB,GAAA,EAAD,CACYC,WAAW,aACX/P,UAAWN,EAAQ5Y,KAAK,KACxBkpB,SAAUN,EACVO,SAAU,SAACjnB,GACT,GAAKA,EAAL,CAIA,IAAM0mB,EAAOX,KAAO/lB,GAAOknB,OAAO,cAClCb,EAAcxsB,EAAI6sB,QAJhBL,EAAcxsB,EAAI,OAMtBstB,gBAAiB1K,EACjB2K,aAAa,SACbC,YAAU,OAGzBb,GAAY1P,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,iDAMrB,aAATna,EAEAia,EAAA3Z,EAAA1B,cAAA,MAAIuF,IAAKnH,GACPid,EAAA3Z,EAAA1B,cAAA,MAAIub,UAAU,SAAQF,EAAA3Z,EAAA1B,cAAA,aAAQ2gB,IAC9BtF,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAACgqB,GAAA,EAAD,CAAO9lB,KAAM9F,GACV,SAAA2nB,GAAa,IAAXoF,EAAWpF,EAAXoF,MACD,OAAO9P,EAAA3Z,EAAA1B,cAAA,WAAA6rB,GAAA,GAAcV,EAAd,CAAqB5P,UAAWN,EAAQ5Y,KAAK,KAAM2e,YAAaA,OAG1E+J,GAAY1P,EAAA3Z,EAAA1B,cAAA,KAAGub,UAAU,iDAK3B,OAETF,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAAA,WACAqb,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CAAY/Q,MAAM,eAGtBuC,EAAA3Z,EAAA1B,cAAA,UACEqb,EAAA3Z,EAAA1B,cAAA,WACAqb,EAAA3Z,EAAA1B,cAAA,MAAIub,UAAU,eACXsP,GAAkBvS,IAAExV,KAAK+nB,GAAgBhxB,OAAS,GACjDwhB,EAAA3Z,EAAA1B,cAAA,qBAEGsY,IAAExV,KAAK+nB,GACL9pB,IAAI,SAACwE,GACJ,OACE8V,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aAAahW,IAAKA,GAAMslB,EAAetlB,yyCC5JnEumB,oaAtEa/Q,+DAET0P,EAAmBP,GAAgB,IAAAxM,EAAAqO,GAAA,GACJrR,KAAKS,OAA5C8H,EAD2CvF,EAC3CuF,UAAW+I,EADgCtO,EAChCsO,qBAGZC,EAAkBhJ,EAAUgC,KAAK,SAACxD,GACtC,OAA8B,IAAvBA,EAAS1B,YAElB,GAAKkM,EAAL,CAIA,IAAMzH,EAAmBuH,GAAA,GAAIE,GAC7B3T,IAAE4T,MAAMhC,EAAQ,SAAC3lB,EAAOgB,GACtB,IAAMoX,EAAQ6H,EAAiBxE,OAAO2E,UAAU,SAAC/iB,GAAD,OAAUA,EAAKxD,KAAOmH,IACnEoX,GAAS,GACVrE,IAAEhU,IAAIkgB,EAAN,UAAAhjB,OAAkCmb,EAAlC,SAAgDpY,KAGpDigB,EAAiB3E,WAAY,EAC7B2E,EAAiB1E,cAAe,EAEhCkM,EAAqBxH,8CAGLnD,GAAsB,IAAA2G,EAAA+D,GAAA,GACQrR,KAAKS,OAA5C8H,EAD+B+E,EAC/B/E,UAAW+I,EADoBhE,EACpBgE,qBAGZC,EAAkBhJ,EAAUgC,KAAK,SAACxD,GACtC,OAA8B,IAAvBA,EAAS1B,YAElB,GAAKkM,EAAL,CAIA,IAAMzH,EAAmBuH,GAAA,GAAIE,GAC7BzH,EAAiBvE,QAAUuE,EAAiBvE,QAAQlf,IAAI,SAACa,GAEvD,OADAA,EAAK0f,QAAW1f,EAAKxD,KAAOijB,EAAOjjB,GAC5BwD,IAET4iB,EAAiB3E,WAAY,EAC7B2E,EAAiB1E,cAAe,EAEhCkM,EAAqBxH,qCAGd,IAAA2H,EAAAJ,GAAA,GACqCrR,KAAKS,OAA1C8H,EADAkJ,EACAlJ,UAAWmJ,EADXD,EACWC,mBAEZH,EAAkBhJ,EAAUgC,KAAK,SAACxD,GACtC,OAA8B,IAAvBA,EAAS1B,YAGlB,OACE1E,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,sBACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SACbF,EAAA3Z,EAAA1B,cAACqsB,GAAD,CAASpJ,UAAWA,EAAW6F,YAAasD,IAC3CH,GAAmB5Q,EAAA3Z,EAAA1B,cAACssB,GAAD,CAClB/mB,IAAK0mB,EAAgB7tB,GACrBqjB,SAAUwK,EACVnC,iBAAkBpP,KAAKoP,iBAAiBtkB,KAAKkV,MAC7CiP,kBAAmBjP,KAAKiP,kBAAkBnkB,KAAKkV,gyCC7D3D,IAiCM6R,oaAA+BxR,kEAEf,IAAA2C,EAAA8O,GAAA,GACyC9R,KAAKS,OAAzD4G,EADWrE,EACXqE,gBACP0K,EAFkB/O,EACK+O,8BACM1K,oCAGtB,IAAAiG,EAAAwE,GAAA,GACgF9R,KAAKS,OAArFuR,EADA1E,EACA0E,mCAAoCC,EADpC3E,EACoC2E,qCADpCC,EAAAJ,GAAA,GAE0C9R,KAAKS,MAAM0L,iBAArD/N,EAFA8T,EAEA9T,MAAOsJ,EAFPwK,EAEOxK,UAAWhE,EAFlBwO,EAEkBxO,KAAMmE,EAFxBqK,EAEwBrK,WAE/B,OAAKnE,GAASmE,EAIY,gBAAtBA,EAAW/kB,OAEX6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,0BACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOA,EAAOC,SAAUqJ,IAChC/G,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,iBACbF,EAAA3Z,EAAA1B,cAAA,sDAIFqb,EAAA3Z,EAAA1B,cAACsd,GAAD,OAOJjC,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,0BACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOA,EAAOC,SAAUqJ,IAEhC/G,EAAA3Z,EAAA1B,cAAC6sB,GAAD,CACE5J,UAAWV,EAAWU,UACtB+I,qBAAsB,SAACxH,GACrBkI,EAAmClI,IAErC4H,mBAAoB,SAACU,GACnBH,EAAqCG,MAIzCzR,EAAA3Z,EAAA1B,cAACsd,GAAD,OAhCK,4CAsCEC,eAnFS,SAACC,GACvB,MAAO,CACLqJ,gBAAiBrJ,EAAMoJ,mBAAmBC,kBAInB,SAAChN,EAAoBsB,GAC9C,MAAO,CACLsR,6BADK,SACwB1K,GAC3BlI,EAASiM,GAAiC/D,KAE5C2K,mCAJK,SAI8BlI,GR2DhC,IAAsC3J,EAC3CkS,EQ3DIlT,GR0DuCgB,EQ1DD2J,ER2D1CuI,EAAA/G,GAAAtM,mBAAAC,KAAO,SAAAqT,EAAOnT,EAAU2M,GAAjB,IAAAC,EAAAhE,EAAA7K,EAAA2H,EAAA+D,EAAA,OAAA5J,mBAAAK,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UAGLL,EAAS,CACPzY,KAAM4U,EAAWK,cAAcG,iCAC/BqE,YAGI4L,EAAuBD,IACvB/D,EAAenK,IAAEjU,IAAIoiB,EAAW,6DAA8D,MAT/F,CAAAwG,EAAA/S,KAAA,cAWG,IAAI7b,MAAM,8CAXb,cAAA4uB,EAAA/S,KAAA,EAcmB6B,GAAiBO,eAdpC,cAcC1E,EAdDqV,EAAA7S,KAeCmF,EAAa1E,EAAQzc,GACrBklB,EAAqCQ,GAAmB0D,gCAAgC3M,GAhBzFoS,EAAAhT,KAAA,GAAAgT,EAAA/S,KAAA,GAoBG4H,GAAyBoL,qBAAqB,CAClDzK,eACAlD,aACA3H,YACA0L,eAxBC,QA4BHzJ,EAASwM,GAA0BxL,IA5BhCoS,EAAA/S,KAAA,iBAAA+S,EAAAhT,KAAA,GAAAgT,EAAA3S,GAAA2S,EAAA,UA+BH1S,MAAM0S,EAAA3S,GAAME,SA/BT,yBAAAyS,EAAAxS,SAAAuS,EAAAtS,KAAA,cAAP,SAAAyS,EAAAC,GAAA,OAAAL,EAAAvyB,MAAAkgB,KAAAE,eQzDE+R,qCAPK,SAOgCG,GACnCjT,ERuIC,SAAgCiT,GACrC,OAAAO,EAAArH,GAAAtM,mBAAAC,KAAO,SAAA2T,EAAOzT,EAAU2M,GAAjB,IAAAC,EAAAlE,EAAAmC,EAAAG,EAAA,OAAAnL,mBAAAK,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAArT,MAAA,UACCuM,EAAuBD,IACvBjE,EAAakE,EAAUG,mBAAmBC,gBAAgBtE,WAF3D,CAAAgL,EAAArT,KAAA,eAAAqT,EAAAzG,OAAA,uBAOCpC,EAAenC,EAAWU,UAAU0B,UAAU,SAAClD,GAAD,OAAcA,EAAS1B,aACxD,GARd,CAAAwN,EAAArT,KAAA,cASG,IAAI7b,MAAM,gDATb,UAaAyuB,EAAehN,cAAiBgN,EAAejN,UAb/C,CAAA0N,EAAArT,KAAA,eAAAqT,EAAAzG,OAAA,uBAiBCjC,EAActC,EAAWU,UAAU0B,UAAU,SAAClD,GAAD,OAAcA,EAASrjB,KAAO0uB,EAAe1uB,MAC9E,GAlBb,CAAAmvB,EAAArT,KAAA,gBAAAqT,EAAAzG,OAAA,yBAsBLjN,EAAS,CACPzY,KAAM4U,EAAWK,cAAcI,uCAC/BoO,gBAxBG0I,EAAArT,KAAA,GA4BC8M,GAA0BR,IAAY,CAAC9B,EAAcG,IA5BtD,yBAAA0I,EAAA9S,SAAA6S,EAAA5S,SAAP,SAAA8S,EAAAC,GAAA,OAAAJ,EAAA7yB,MAAAkgB,KAAAE,YAAA,IAAAyS,EQxIaK,CAAuBZ,OAoEvBvP,CAGbgP,y9BCMaoB,oaAlGc5S,uDAElB,IAAAC,EAAAN,KACAuI,qUADA2K,CAAA,GACiBlT,KAAKS,OAAtB8H,UAEP,OACE5H,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,kBACbF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACZ0H,EAAUliB,IAAI,SAAC0gB,EAAU9E,EAAOkR,GAC/B,IAAMC,EAAe9S,EAAK+S,WAAWtM,GACrC,OACEpG,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,MAAMhW,IAAKkc,EAASrjB,IACjCid,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,OACbF,EAAA3Z,EAAA1B,cAAA,SAAI2c,EAAQ,EAAZ,KAAiB8E,EAASC,UAE5BrG,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,qBACfF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,OACZuS,2CAUNrM,GAET,IAAKA,EAAS3B,aAAc,CAE1B,OACEzE,EAAA3Z,EAAA1B,cAAA,WAFU,oBAOd,IAAKyhB,EAAS5B,UAAW,CAEvB,OACExE,EAAA3Z,EAAA1B,cAAA,WAFU,mBAOd,GAAsB,UAAlByhB,EAASrgB,MAAoBqgB,EAASzB,QAAUrH,MAAMC,QAAQ6I,EAASzB,SAAWyB,EAASzB,OAAOnmB,OAAS,EAAG,CAChH,IAAMm0B,EAAkB,SAACtN,GACvB,IAAIrnB,EAAeqnB,EAAMrnB,MAAQ,GASjC,MAPmB,SAAfqnB,EAAMtf,OACR/H,EAAOixB,KAAOjxB,GAAMoyB,OAAO,eAGV,aAAf/K,EAAMtf,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAIooB,EAASzB,OAAOnmB,OAAS,EAEzBwhB,EAAA3Z,EAAA1B,cAAA,WACGyhB,EAASzB,OAAOjf,IAAK,SAAA2f,GACpB,IAAMrnB,EAAO20B,EAAgBtN,GAC7B,OACErF,EAAA3Z,EAAA1B,cAAA,OAAKuF,IAAKmb,EAAMtiB,IACdid,EAAA3Z,EAAA1B,cAAA,SAAI0gB,EAAMC,OADZ,IAEEtF,EAAA3Z,EAAA1B,cAAA,iBAFF,IAGEqb,EAAA3Z,EAAA1B,cAAA,YAAO3G,OAUjBgiB,EAAA3Z,EAAA1B,cAAA,WACGguB,EAAgBvM,EAASzB,OAAO,IAAIkE,QAM3C,GAAsB,WAAlBzC,EAASrgB,MAAqBqgB,EAASxB,SAAWtH,MAAMC,QAAQ6I,EAASxB,SAAU,CACrF,IAAIoB,EAAuB/I,IAAEnY,KAAKshB,EAASxB,QAAQgB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAE7E,OACEjG,EAAA3Z,EAAA1B,cAAA,WACGqhB,GAAUhG,EAAA3Z,EAAA1B,cAAA,WAAMqhB,EAAOV,69BCrCnBsN,oaA9CMlT,uDAEV,IAAA2C,qUAAAwQ,CAAA,GAMCxT,KAAKS,OAJXoH,EAFK7E,EAEL6E,WACA4L,EAHKzQ,EAGLyQ,wBACAC,EAJK1Q,EAIL0Q,6BACAC,EALK3Q,EAKL2Q,4BAGF,OAAK9L,EAIqB,gBAAtBA,EAAW/kB,OAEX6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,UACbF,EAAA3Z,EAAA1B,cAAA,sDAQJqb,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,UACbF,EAAA3Z,EAAA1B,cAACsuB,GAAD,CAAgBrL,UAAWV,EAAWU,YACtC5H,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,eACN8E,UAAW2Q,KACXtT,QAAS,CAAC,UACVS,QAAS2S,IACtBhT,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,eACN8E,UAAW4Q,KACXvT,QAAS,CAAC,UACVS,QAAS0S,IACtB/S,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CAAY/Q,MAAM,uBACNmC,QAAS,CAAC,UACV3B,SAAUwK,GAAmB2K,yBAAyBlM,EAAWU,WACjEvH,QAASyS,MA5BlB,iQC5BQO,wLAEHC,GACd,OAAIA,EAGJ,GAAAntB,OAAUmtB,GAFD,ygCCcEC,yFAAf,SAAA3I,EAAkC4I,GAAlC,OAAAnV,mBAAAK,KAAA,SAAAmM,GAAA,cAAAA,EAAAjM,KAAAiM,EAAAhM,MAAA,cAAAgM,EAAAY,OAAA,SACS,IAAIvoB,QAAQ,SAACC,GAClB,IAAMswB,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,SAACrT,GAC/Bnd,EAAQmd,EAAMsT,OAAOv0B,UAEvBo0B,EAAOI,cAAcL,MANzB,wBAAA3I,EAAAzL,SAAAwL,EAAAvL,yCAUeyU,yFAAf,SAAAnC,EAAiCoC,GAAjC,IAAAjX,EAAA0W,EAAAx1B,EAAA,OAAAqgB,mBAAAK,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,cAAA+S,EAAA/S,KAAA,EACyBmV,MAAMD,GAD/B,cACQjX,EADR8U,EAAA7S,KAAA6S,EAAA/S,KAAA,EAEqB/B,EAAS0W,OAF9B,cAEQA,EAFR5B,EAAA7S,KAAA6S,EAAA/S,KAAA,EAGqB0U,GAAmBC,GAHxC,cAGQx1B,EAHR4zB,EAAA7S,KAAA6S,EAAAnG,OAAA,SAISztB,GAJT,yBAAA4zB,EAAAxS,SAAAuS,EAAAtS,oCAOqB4U,gPAEMC,+HAC2CA,GAA3DtM,cAAWN,cAAWH,uBAAoBJ,cAG3CoN,EAAU,GACVC,EAAS,CACbjN,mBAAoB,CAClBkN,MAAM,EACNC,UALEC,EAAkB,IAKQ,EAC5BC,MAAO,UACPC,UAAW,UAEb1N,UAAW,CACTsN,MAAM,EACNC,SAAUC,EACVC,MAAO,UACPC,UAAW,UAEbC,eAAgB,CACdL,MAAM,EACNC,SAAUC,EAAkB,EAC5BC,MAAO,WAETG,gBAAiB,CACfN,MAAM,IAGJO,EAAe,CACnBN,SAAUC,GAENM,EAAO,CACXpX,MAAK,GAAAtX,OAAKghB,EAAL,OAAAhhB,OAA6BmhB,EAAUze,OAGvCisB,EAAOC,KAASC,QAAhBF,IACPE,KAAQF,IAAMA,YAIiBhB,GAAkBmB,qBAA3CC,SAENf,EAAQz1B,KAAK,CACXy2B,MAAOD,EACPE,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpBJ,EAAQz1B,KAAK,CACX42B,KAAMnO,EACNvF,MAAO,qBACPyT,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAItCJ,EAAQz1B,KAAK,CACX42B,KAAMvO,EACNnF,MAAO,YACPyT,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQz1B,KAAK,CACX42B,KAAI,gBACJ1T,MAAO,iBACPyT,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAGpBJ,EAAQz1B,KAAK,CACX42B,KAAI,SAAAnvB,OAAWmhB,EAAUze,MACzB+Y,MAAO,kBACPyT,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAGtCJ,EAAQz1B,KAAK,CACX42B,KAAI,SAAAnvB,OAAWmhB,EAAUnE,MACzBkS,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAGtCJ,EAAQz1B,KAAK,CACX42B,KAAI,UAAAnvB,OAAYmhB,EAAUlE,OAC1BiS,OAAQ,CAAC,EAAG,EAAG,EAAqB,EAAlBd,KAIpBJ,EAAQz1B,KAAK,CACX42B,KAAI,YACJ1T,MAAO,iBACPyT,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAIpB3M,EAAUlgB,QAAQ,SAAC0e,EAAU9E,GAS3B,GAPA6S,EAAQz1B,KAAK,CACX42B,KAAI,GAAAnvB,OAAKmb,EAAQ,EAAb,MAAAnb,OAAmBigB,EAASC,SAChCzE,MAAO,kBACPyT,OAAQ,CAAC,EAAG,EAAG,EAAGd,EAAkB,KAIjCnO,EAAS3B,aASd,GAAK2B,EAAS5B,UAAd,CASA,GAAsB,UAAlB4B,EAASrgB,MAAoBqgB,EAASzB,QAAUrH,MAAMC,QAAQ6I,EAASzB,SAAWyB,EAASzB,OAAOnmB,OAAS,EAAG,CAChH,IAAMm0B,EAAkB,SAACtN,GACvB,IAAIrnB,EAAeqnB,EAAMrnB,MAAQ,GASjC,MAPmB,SAAfqnB,EAAMtf,OACR/H,EAAOixB,KAAOjxB,GAAMoyB,OAAO,eAGV,aAAf/K,EAAMtf,OACR/H,EAAO,KAAOA,GAETA,GAIT,OAAIooB,EAASzB,OAAOnmB,OAAS,OAC3B4nB,EAASzB,OAAOjd,QAAQ,SAAC2d,EAAO/D,EAAOiU,GACrC,IAAMC,EAAUlU,IAAUiU,EAAI/2B,OAAS,EACvC21B,EAAQz1B,KAAK,CACX42B,KAAI,GAAAnvB,OAAKkf,EAAMC,MAAX,MAAAnf,OAAqBktB,GAAWtP,SAAS4O,EAAgBtN,KAC7DgQ,OAAQ,CAAC,EAAG,EAAG,EAAGG,EAASjB,EAAkB7O,SAAQ,GAAAvf,OAAIouB,EAAkB,cAOjFJ,EAAQz1B,KAAK,CACX42B,KAAM3C,EAAgBvM,EAASzB,OAAO,IAAIkE,OAC1CwM,OAAQ,CAAC,EAAG,EAAG,EAAGd,KAMtB,GAAsB,WAAlBnO,EAASrgB,MAAqBqgB,EAASxB,SAAWtH,MAAMC,QAAQ6I,EAASxB,SAAU,CACrF,IAAIoB,EAAuB/I,IAAEnY,KAAKshB,EAASxB,QAAQgB,OAAO,SAACI,GAAD,OAAYA,EAAOC,WAC7EkO,EAAQz1B,KAAK,CACX42B,KAAMtP,EAAOV,MACb+P,OAAQ,CAAC,EAAG,EAAG,EAAGd,WA/CpBJ,EAAQz1B,KAAK,CACX42B,KAAM,kBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,UAXpBJ,EAAQz1B,KAAK,CACX42B,KAAM,mBACND,OAAQ,CAAC,EAAG,EAAG,EAAGd,iBA4DMT,GAAkB2B,qBAA1CC,SAENvB,EAAQz1B,KAAK,CACXy2B,MAAOO,EACPN,MAAO,IACPC,OAAQ,CAAC,EAAG,EAAG,EAAGd,yBAIZS,KAAQW,UAAU,CAACd,OAAMV,UAASC,SAAQQ,iBAAegB,SAASf,EAAKpX,kEAE7EyB,MAAM,iPAKiBsU,2GAClB,IAAItwB,QAAQ,SAACC,GAClB,IAAMswB,EAAS,IAAIC,WACnBD,EAAOoC,OAAS,SAASvV,GACvBnd,EAAQmd,EAAMsT,OAAOv0B,SAEvBo0B,EAAOI,cAAcL,g4CClN3B,IA6BMsC,oaAAwBpW,kEAER,IAAA2C,EAAA0T,GAAA,GACyC1W,KAAKS,OAAzD4G,EADWrE,EACXqE,gBACP0K,EAFkB/O,EACK+O,8BACM1K,oCAGtB,IAAA6K,EAAAwE,GAAA,GAC0C1W,KAAKS,MAAM0L,iBAArD/N,EADA8T,EACA9T,MAAOsJ,EADPwK,EACOxK,UAAWhE,EADlBwO,EACkBxO,KAAMmE,EADxBqK,EACwBrK,WAE/B,OAAKnE,EAKH/C,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,mBACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOA,EAAOC,SAAS,qBAC/BsC,EAAA3Z,EAAA1B,cAACqxB,GAAD,CAAQjP,UAAWA,EACXG,WAAYA,EACZ4L,wBAAyBzT,KAAKyT,wBAAwB3oB,KAAKkV,MAC3D0T,6BAA8B1T,KAAK0T,6BAA6B5oB,KAAKkV,MACrE2T,4BAA6B3T,KAAK2T,4BAA4B7oB,KAAKkV,QAC3EW,EAAA3Z,EAAA1B,cAACsd,GAAD,MAPF,KAJO,uDAkBT5C,KAAKS,MAAMmW,qFAGkB,IAAAC,EAAAH,GAAA,GACO1W,KAAKS,MAAM0L,iBAAxCtE,EADsBgP,EACtBhP,WAAYH,EADUmP,EACVnP,UACdG,GAIL+M,GAAQkC,YAAY,CAClBvO,UAAWV,EAAWU,UACtBN,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BJ,oEAKF,IAAM/K,EAAOiB,IAAEjU,IAAIqW,KAAKS,MAAM0L,gBAAiB,4BAA6B,IACvExP,GAGLD,EAAQsR,+BAA+BrR,0CAI5BkG,eApFS,SAACC,GACvB,MAAO,CACLqJ,gBAAiBrJ,EAAMoJ,mBAAmBC,kBAInB,SAAChN,EAAoBsB,GAC9C,MAAO,CACLsR,6BADK,SACwB1K,GAC3BlI,EAASiM,GAAiC/D,KAE5CuP,4BAJK,WbkLF,IACLG,Ea9KI5X,Gb8KJ4X,EAAAzL,GAAAtM,mBAAAC,KAAO,SAAA+X,EAAO7X,EAAU2M,GAAjB,IAAAC,EAAAI,EAAAtE,EAAA3K,EAAA+Z,EAAAta,EAAA,OAAAqC,mBAAAK,KAAA,SAAA6X,GAAA,cAAAA,EAAA3X,KAAA2X,EAAA1X,MAAA,UAAA0X,EAAA3X,KAAA,EAEGwM,EAAuBD,IACvBK,EAAkBJ,EAAUG,mBAAmBC,gBAC/CtE,EAAasE,EAAgBtE,WAJhC,CAAAqP,EAAA1X,KAAA,eAAA0X,EAAA9K,OAAA,qBAUChD,GAAmB2K,yBAAyBlM,EAAWU,WAVxD,CAAA2O,EAAA1X,KAAA,eAWDK,MAAM,wEAXLqX,EAAA9K,OAAA,wBAAA8K,EAAA1X,KAAA,GAeqB6B,GAAiBO,eAftC,eAeG1E,EAfHga,EAAAxX,KAAAwX,EAAA1X,KAAA,GAgBkB4H,GAAyB+P,oBAAoB,CAACpP,aAAcF,EAAWE,aAAc7K,cAhBvG,eAAA+Z,EAAAC,EAAAxX,KAgBI/C,EAhBJsa,EAgBIta,KAhBJua,EAAA1X,KAAA,GAiBGkL,GAAgB0M,gDAAgD,CAACzM,wBAAyB9C,EAAY3K,cAjBzG,QAkBHR,EAAQ2a,+BAA+B1a,GAlBpCua,EAAA1X,KAAA,iBAAA0X,EAAA3X,KAAA,GAAA2X,EAAAtX,GAAAsX,EAAA,SAqBHrX,MAAKqX,EAAAtX,IArBF,yBAAAsX,EAAAnX,SAAAiX,EAAAhX,KAAA,aAAP,SAAAsX,EAAAC,GAAA,OAAAR,EAAAj3B,MAAAkgB,KAAAE,iBatGa2C,CAGb4T,mvCChFF,IAAMe,GAAiB,SAAC10B,GACtB,OAAOA,EACJ20B,MAAM,KACNpxB,IAAI,SAACqxB,GACJ,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAItxB,MAAM,KAEhDuB,KAAK,MA6NKkwB,oaA1NOxX,uDAEX,IAAA2C,EAAA8U,GAAA,GAC0B9X,KAAKS,OAA/BoH,EADA7E,EACA6E,WAAYkQ,EADZ/U,EACY+U,OAEnB,OAAKlQ,EAIqB,gBAAtBA,EAAW/kB,QAAuC,cAAXi1B,EAEvCpX,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,kDAQJqb,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACZb,KAAKgY,oBAAoBnQ,GACzB7H,KAAKiY,YAAYpQ,GACjB7H,KAAKkY,gBAAgBrQ,GACrB7H,KAAKmY,cAActQ,IAlBf,iDAuBSA,GAClB,IAAMI,EAAYJ,EAAWI,UAE7B,OACEtH,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,gBACbF,EAAA3Z,EAAA1B,cAAA,iCACAqb,EAAA3Z,EAAA1B,cAAA,WAAKqb,EAAA3Z,EAAA1B,cAAA,0BAAL,IAA2B2iB,EAAUze,MACrCmX,EAAA3Z,EAAA1B,cAAA,WAAKqb,EAAA3Z,EAAA1B,cAAA,kBAAL,IAAmB2iB,EAAUnE,MAC7BnD,EAAA3Z,EAAA1B,cAAA,WAAKqb,EAAA3Z,EAAA1B,cAAA,mBAAL,IAAoB2iB,EAAUlE,OAC9BpD,EAAA3Z,EAAA1B,cAAA,WAAKqb,EAAA3Z,EAAA1B,cAAA,oBAAL,IAAqBkyB,GAAe3P,EAAW/kB,8CAKzC+kB,GACV,IAAMY,EAAkBZ,EAAWY,gBACnC,OAA+B,IAA3BA,EAAgBtpB,OACX,KAIPwhB,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,SACbF,EAAA3Z,EAAA1B,cAAA,mBACCmjB,EAAgBpiB,IAAI,SAAA0Y,GAA8B,IAA5BpC,EAA4BoC,EAA5BpC,KAAMgM,EAAsB5J,EAAtB4J,SAAU7lB,EAAYic,EAAZjc,OACrC,OACE6d,EAAA3Z,EAAA1B,cAAA,OAAKuF,IAAK8R,GACRgE,EAAA3Z,EAAA1B,cAACsb,EAAA,EAAD,CAAME,GAAIpE,EAAQ0b,qBAAqBzb,IACpCgM,EADH,KACe6O,GAAe10B,GAD9B,+CAUE+kB,GAAwB,IAAAyF,EAAAwK,GAAA,GAO5B9X,KAAKS,OALXsX,EAFkCzK,EAElCyK,OACAtE,EAHkCnG,EAGlCmG,wBACAC,EAJkCpG,EAIlCoG,6BACA2E,EALkC/K,EAKlC+K,yBACAC,EANkChL,EAMlCgL,sBAGIC,EACJ5X,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,0BACN8E,UAAW4Q,KACXvT,QAAS,CAAC,UACVS,QAAS0S,IAIxB,GAAe,cAAXqE,EAAwB,CAE1B,IAAMS,EACJ7X,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,eACN8E,UAAW2Q,KACXtT,QAAS,CAAC,YAKnBkY,EACJ9X,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CAAY/Q,MAAM,oBACNmC,QAAS,CAAC,UACV3B,SAAUwK,GAAmBsP,+BAA+B7Q,EAAWY,iBACvEzH,QAASyS,IAIvB,MAA0B,cAAtB5L,EAAW/kB,OAEX6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGkzB,EACAD,EACAE,GAEH9X,EAAA3Z,EAAA1B,cAAA,aAKoB,4CAAtBuiB,EAAW/kB,OAEX6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGkzB,EACAD,GAEH5X,EAAA3Z,EAAA1B,cAAA,aAMJqb,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGizB,GAEH5X,EAAA3Z,EAAA1B,cAAA,aAMN,GAAe,aAAXyyB,EAAuB,CACzB,IAAMY,EACJhY,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CAAY/Q,MAAM,UACNmC,QAAS,CAAC,UACVS,QAASqX,IAGjBO,EACJjY,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAM,OACNmC,QAAS,CAAC,UACVS,QAASsX,IAIxB,MAA0B,cAAtBzQ,EAAW/kB,OAEX6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGizB,GAEH5X,EAAA3Z,EAAA1B,cAAA,aAMJqb,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGizB,GAEH5X,EAAA3Z,EAAA1B,cAAA,WACGqzB,EACAC,IAOT,OACEjY,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAA,WACGizB,GAEH5X,EAAA3Z,EAAA1B,cAAA,qDAKUuiB,GAEd,GAA0B,gBAAtBA,EAAW/kB,QACS,cAAtB+kB,EAAW/kB,OAEX,OAAO,KAGT,IAAMqlB,EAAiBN,EAAWM,eAElC,OACExH,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,aACbF,EAAA3Z,EAAA1B,cAAA,uBACAqb,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,+BADF,MAGGkyB,GAAerP,EAAeG,oBAEjC3H,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,+CADF,MAGGkyB,GAAerP,EAAeC,kCAEjCzH,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,2BADF,MAGGkyB,GAAerP,EAAeE,uyCCjOzC,IAqCMwQ,oaAAyBxY,kEAET,IAAA2C,EAAA8V,GAAA,GACyC9Y,KAAKS,OAAzD4G,EADWrE,EACXqE,gBACP0K,EAFkB/O,EACK+O,8BACM1K,oCAGtB,IAAA6K,EAAA4G,GAAA,GACsD9Y,KAAKS,MAAM0L,iBAAjE/N,EADA8T,EACA9T,MAAOsF,EADPwO,EACOxO,KAAMmE,EADbqK,EACarK,WAAYD,EADzBsK,EACyBtK,sBAEhC,IAAKlE,IAASmE,EACZ,OAAO,KAIT,IAAIkQ,EAAS,SAEb,EAAG,CAED,GAAIrU,EAAKhgB,KAAOmkB,EAAWI,UAAUvkB,GAAI,CACvCq0B,EAAS,YACT,MAIF,GAAInQ,EAAuB,CACzBmQ,EAAS,WACT,aAEK,GAET,OACEpX,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,oBACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOA,EAAOC,SAAS,YAC/BsC,EAAA3Z,EAAA1B,cAACyzB,GAAD,CAASlR,WAAYA,EACZ6L,6BAA8B1T,KAAK0T,6BAA6B5oB,KAAKkV,MACrEyT,wBAAyBzT,KAAKyT,wBAAwB3oB,KAAKkV,MAC3DqY,yBAA0BrY,KAAKqY,yBAAyBvtB,KAAKkV,MAC7DsY,sBAAuBtY,KAAKsY,sBAAsBxtB,KAAKkV,MACvD+X,OAAQA,IAEjBpX,EAAA3Z,EAAA1B,cAACsd,GAAD,8DAKyB,IAAAiU,EAAAiC,GAAA,GACO9Y,KAAKS,MAAM0L,iBAAxCtE,EADsBgP,EACtBhP,WAAYH,EADUmP,EACVnP,UACdG,GAIL+M,GAAQkC,YAAY,CAClBvO,UAAWV,EAAWU,UACtBN,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BJ,gEAIsB,IAAAsR,EAAAF,GAAA,GACO9Y,KAAKS,MAAM0L,iBAAnCzI,EADiBsV,EACjBtV,KAAMmE,EADWmR,EACXnR,WAERnE,GAASmE,GAId7H,KAAKS,MAAMwY,gCAAgCpR,EAAWE,iEAG7B,IAAAmR,EAAAJ,GAAA,GACM9Y,KAAKS,MAAM0L,iBAAnCzI,EADkBwV,EAClBxV,KAAMmE,EADYqR,EACZrR,WAERnE,GAASmE,GAId7H,KAAKS,MAAM0Y,gCAAgCtR,EAAWE,8DAGhC,IAAAqR,EAAAN,GAAA,GACS9Y,KAAKS,MAAM0L,iBAAnCzI,EADe0V,EACf1V,KAAMmE,EADSuR,EACTvR,WAERnE,GAASmE,GAId7H,KAAKS,MAAM4Y,6BAA6BxR,EAAWE,qDAIxClF,eAhIS,SAACC,GACvB,MAAO,CACLqJ,gBAAiBrJ,EAAMoJ,mBAAmBC,kBAInB,SAAChN,EAAoBsB,GAC9C,MAAO,CACLsR,6BADK,SACwB1K,GAC3BlI,EAASiM,GAAiC/D,KAE5C4R,gCAJK,SAI2BlR,GAC9B5I,EfsMC,SAAwC4I,GAC7C,OAAAuR,EAAAhO,GAAAtM,mBAAAC,KAAO,SAAAsa,EAAOpa,EAAU2M,GAAjB,IAAA5O,EAAAsc,EAAA7c,EAAA,OAAAqC,mBAAAK,KAAA,SAAAoa,GAAA,cAAAA,EAAAla,KAAAka,EAAAja,MAAA,cAAAia,EAAAla,KAAA,EAAAka,EAAAja,KAAA,EAEqB6B,GAAiBO,eAFtC,cAEG1E,EAFHuc,EAAA/Z,KAAA+Z,EAAAja,KAAA,EAGkB4H,GAAyBsS,+BAA+B,CAAC3R,eAAc7K,cAHzF,OAAAsc,EAAAC,EAAA/Z,KAGI/C,EAHJ6c,EAGI7c,KACPwC,EAASiM,GAAiCzO,IAJvC8c,EAAAja,KAAA,iBAAAia,EAAAla,KAAA,GAAAka,EAAA7Z,GAAA6Z,EAAA,SAOH5Z,MAAK4Z,EAAA7Z,IAPF,yBAAA6Z,EAAA1Z,SAAAwZ,EAAAvZ,KAAA,aAAP,SAAA2Z,EAAAC,GAAA,OAAAN,EAAAx5B,MAAAkgB,KAAAE,YAAA,IAAAoZ,EevMaI,CAA+B3R,KAE1CoR,gCAPK,SAO2BpR,GAC9B5I,EfgNC,SAAwC4I,GAC7C,OAAA8R,EAAAvO,GAAAtM,mBAAAC,KAAO,SAAA6a,EAAO3a,EAAU2M,GAAjB,IAAA5O,EAAA6c,EAAApd,EAAA,OAAAqC,mBAAAK,KAAA,SAAA2a,GAAA,cAAAA,EAAAza,KAAAya,EAAAxa,MAAA,cAAAwa,EAAAza,KAAA,EAAAya,EAAAxa,KAAA,EAEqB6B,GAAiBO,eAFtC,cAEG1E,EAFH8c,EAAAta,KAAAsa,EAAAxa,KAAA,EAGkB4H,GAAyB6S,+BAA+B,CAAClS,eAAc7K,cAHzF,OAAA6c,EAAAC,EAAAta,KAGI/C,EAHJod,EAGIpd,KACPwC,EAASiM,GAAiCzO,IAJvCqd,EAAAxa,KAAA,iBAAAwa,EAAAza,KAAA,GAAAya,EAAApa,GAAAoa,EAAA,SAOHna,MAAKma,EAAApa,IAPF,yBAAAoa,EAAAja,SAAA+Z,EAAA9Z,KAAA,aAAP,SAAAka,EAAAC,GAAA,OAAAN,EAAA/5B,MAAAkgB,KAAAE,YAAA,IAAA2Z,EejNaI,CAA+BlS,KAE1CsR,6BAVK,SAUwBtR,GAC3B5I,Ef0NC,SAAqC4I,GAC1C,OAAAqS,EAAA9O,GAAAtM,mBAAAC,KAAO,SAAAob,EAAOlb,EAAU2M,GAAjB,IAAA5O,EAAAod,EAAA3d,EAAA,OAAAqC,mBAAAK,KAAA,SAAAkb,GAAA,cAAAA,EAAAhb,KAAAgb,EAAA/a,MAAA,cAAA+a,EAAAhb,KAAA,EAAAgb,EAAA/a,KAAA,EAEqB6B,GAAiBO,eAFtC,cAEG1E,EAFHqd,EAAA7a,KAAA6a,EAAA/a,KAAA,EAGkB4H,GAAyBoT,4BAA4B,CAACzS,eAAc7K,cAHtF,OAAAod,EAAAC,EAAA7a,KAGI/C,EAHJ2d,EAGI3d,KACPwC,EAASiM,GAAiCzO,IAJvC4d,EAAA/a,KAAA,iBAAA+a,EAAAhb,KAAA,GAAAgb,EAAA3a,GAAA2a,EAAA,SAOH1a,MAAK0a,EAAA3a,IAPF,yBAAA2a,EAAAxa,SAAAsa,EAAAra,KAAA,aAAP,SAAAya,EAAAC,GAAA,OAAAN,EAAAt6B,MAAAkgB,KAAAE,YAAA,IAAAka,Ee3NaI,CAA4BzS,OA8G5BlF,CAGbgW,wpBCzIK,SAAS8B,GAAwBhe,GACtC,sBAAAoC,EAAA6b,GAAA5b,mBAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAgB,EAAA,OAAAnB,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGmBkL,GAAgBmQ,yBAAyBle,GAH5D,OAGGwD,EAHHb,EAAAI,KAIHP,EAAS,CACPzY,KAAM4U,EAAWW,KAAKC,2BACtBiE,YANCb,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAWHO,MAAKP,EAAAM,IAXF,yBAAAN,EAAAS,SAAAb,EAAAc,KAAA,YAAP,gBAAAC,GAAA,OAAAlB,EAAAjf,MAAAkgB,KAAAE,YAAA,YAuIa4a,2FAAf,SAAAjP,EAA6ChC,EAAgC+C,GAA7E,OAAA5N,mBAAAK,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,cAAAyM,EAAA1M,KAAA,EAAA0M,EAAArM,GAEU8K,GAFVuB,EAAA8O,GAGYlR,EAAelN,KAH3BsP,EAAA+O,GAIsBpO,EAAgBvmB,IAAI,SAAC4b,GAAD,OAAW4H,EAAetB,UAAUtG,GAAOve,KAJrFuoB,EAAAgP,GAKsBrO,EAAgBvmB,IAAI,SAAC4b,GAAD,OAAWmH,GAAmB0D,gCAAgCjD,EAAetB,UAAUtG,MALjIgK,EAAAzM,KAAA,EAMuB6B,GAAiBO,eANxC,cAAAqK,EAAAiP,GAAAjP,EAAAvM,KAAAuM,EAAAkP,GAAA,CAGMxe,KAHNsP,EAAA8O,GAIM/R,eAJNiD,EAAA+O,GAKM/R,eALNgD,EAAAgP,GAMM/d,UANN+O,EAAAiP,IAAAjP,EAAAzM,KAAA,GAAAyM,EAAArM,GAE0Bkb,8BAF1Br7B,KAAAwsB,EAAArM,GAAAqM,EAAAkP,IAAA,QAAAlP,EAAAzM,KAAA,iBAAAyM,EAAA1M,KAAA,GAAA0M,EAAAmP,GAAAnP,EAAA,SAUIpM,MAAMoM,EAAAmP,GAAMtb,SAVhB,yBAAAmM,EAAAlM,SAAA8L,EAAA7L,KAAA,i9BC/Deqb,oaAjEchb,uDAElB,IAAA2C,qUAAAsY,CAAA,GAMCtb,KAAKS,OAJXoJ,EAFK7G,EAEL6G,eACAyH,EAHKtO,EAGLsO,qBACA0B,EAJKhQ,EAILgQ,uBACAuI,EALKvY,EAKLuY,YAGEC,EAAO,KAGmB,gBAA1B3R,EAAe/mB,SACjB04B,EACE7a,EAAA3Z,EAAA1B,cAAC6sB,GAAD,CACE5J,UAAWsB,EAAetB,UAC1B+I,qBAAsBA,EACtBI,mBAAoBsB,KAMI,aAA1BnJ,EAAe/mB,SACjB04B,EACE7a,EAAA3Z,EAAA1B,cAACsuB,GAAD,CAAgBrL,UAAWsB,EAAetB,aAI9C,IAAMkT,EAAa5R,EAAesB,4BAChCxK,EAAA3Z,EAAA1B,cAAC6pB,GAAD,CACE/Q,MAAO,gCACP4C,QAAS,WACPtE,EAAQ2a,+BAA+BxN,EAAesB,gCAGxD,KAEEuQ,EAAuC,aAA1B7R,EAAe/mB,OAChC6d,EAAA3Z,EAAA1B,cAAC0e,GAAD,CAAa5F,MAAO,eAAgB4C,QAASua,EAAarY,UAAW2Q,OACnE,KAEE7zB,EAAS6pB,EAAe7pB,QAAoC,aAA1B6pB,EAAe/mB,OACrD6d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,UACbF,EAAA3Z,EAAA1B,cAAA,qBACAqb,EAAA3Z,EAAA1B,cAAA,WAAMukB,EAAe7pB,SAGrB,KAEJ,OACE2gB,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,kBACZ7gB,EACAw7B,EAED7a,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACZ6a,EACAD,0xCC3DX,IAgCME,oaAAgCtb,kEAEhB,IAAA2C,EAAA4Y,GAAA,GACmC5b,KAAKS,OAAnD9D,EADWqG,EACXrG,MACPkf,EAFkB7Y,EACL6Y,kCACoBlf,oCAG1B,IAAA2Q,EAAAsO,GAAA,GAKC5b,KAAKS,OAHXuR,EAFK1E,EAEL0E,mCACAC,EAHK3E,EAGL2E,qCACA6J,EAJKxO,EAILwO,0BAJKC,EAAAH,GAAA,GAM8C5b,KAAKS,MAAMqC,OAAzD4E,EANAqU,EAMArU,UAAWwD,EANX6Q,EAMW7Q,YAAarB,EANxBkS,EAMwBlS,eAE/B,OAAKqB,GAAgBrB,EAKnBlJ,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,2BACbF,EAAA3Z,EAAA1B,cAACkoB,GAAD,CAAQpP,MAAOyL,EAAelB,SAAUtK,SAAUqJ,IAClD/G,EAAA3Z,EAAA1B,cAAC02B,GAAD,CACEnS,eAAgBA,EAChByH,qBAAsBU,EACtBgB,uBAAwBf,EACxBsJ,YAAaO,IAEfnb,EAAA3Z,EAAA1B,cAACsd,GAAD,OAZK,4CAkBEC,eAlES,SAACC,GACvB,MAAO,CACLA,MAAOA,EAAMmZ,sBAIU,SAAC9c,EAAoBsB,GAC9C,MAAO,CACLob,iCADK,SAC4Blf,GAC/BwC,EAASwb,GAAwBhe,KAEnCqV,mCAJK,SAI8BlI,GACjC3K,EFFC,SAA8B2K,GACnC,OAAA8D,EAAAgN,GAAA5b,mBAAAC,KAAO,SAAA4O,EAAO1O,EAAU2M,GAAjB,IAAAjC,EAAAmC,EAAAhC,EAAAE,EAAAC,EAAAC,EAAApqB,EAAAqrB,EAAA1O,EAAA,OAAAqC,mBAAAK,KAAA,SAAAyO,GAAA,cAAAA,EAAAvO,KAAAuO,EAAAtO,MAAA,UACCqK,EAAiCjM,IAAEjU,IAAImiB,IAAY,sCADpD,CAAAgC,EAAAtO,KAAA,eAAAsO,EAAA1B,OAAA,wBAOLjN,EAAS,CACPzY,KAAM4U,EAAWW,KAAKE,4BACtBgE,QAAS2J,IATNgE,EAAAlO,GAaC8K,GAbDoD,EAAAiN,GAcGlR,EAAelN,KAdlBmR,EAAAkN,GAea,CAAClR,EAAiBpmB,IAf/BoqB,EAAAmN,GAgBa,CAAC7R,GAAmB0D,gCAAgChD,IAhBjEgE,EAAAtO,KAAA,GAiBc6B,GAAiBO,eAjB/B,eAAAkM,EAAAoN,GAAApN,EAAApO,KAAAoO,EAAAqN,GAAA,CAcHxe,KAdGmR,EAAAiN,GAeH/R,eAfG8E,EAAAkN,GAgBH/R,eAhBG6E,EAAAmN,GAiBH/d,UAjBG4Q,EAAAoN,IAAApN,EAAAtO,KAAA,GAAAsO,EAAAlO,GAaiBkb,8BAbjBr7B,KAAAquB,EAAAlO,GAAAkO,EAAAqN,IAAA,eAAAnP,EA4BD5C,GAAmBiD,oBAAoB,CACzCvC,mBACAvB,UAAWsB,EAAetB,YAR1ByB,EAtBGgC,EAsBHhC,aACAE,EAvBG8B,EAuBH9B,qBACAC,EAxBG6B,EAwBH7B,YACAC,EAzBG4B,EAyBH5B,SAzBG4B,EA0BH3B,UACArqB,EA3BGgsB,EA2BHhsB,OAOEkqB,EAAqB/qB,OAAS,GAChCggB,EAAS,CACPzY,KAAM4U,EAAWW,KAAKG,kCACtB+D,QAAS+J,IAKTC,EAAcH,GAChB7K,EAAS,CACPzY,KAAM4U,EAAWW,KAAKI,8BACtB8D,QAAS,CAAC6J,eAAcG,iBA7CvB2D,EAAAtO,KAAA,GAkDCsb,GACJjR,EACAjM,IAAEkN,KAAF,CAAQd,GAARljB,OAAAo1B,GAAyBhS,GAAzB,CAA+CC,MApD5C,YAuDDC,EAvDC,CAAA0D,EAAAtO,KAAA,gBAAAsO,EAAAsN,GAwDkB1Q,GAxDlBoD,EAAAqO,GAyDKtS,EAAelN,KAzDpBmR,EAAAsO,GA0DOp8B,EA1DP8tB,EAAAtO,KAAA,GA2DgB6B,GAAiBO,eA3DjC,eAAAkM,EAAAuO,GAAAvO,EAAApO,KAAAoO,EAAAwO,IAAA,CAyDD3f,KAzDCmR,EAAAqO,GA0DDn8B,OA1DC8tB,EAAAsO,GA2DDlf,UA3DC4Q,EAAAuO,IAAAvO,EAAAtO,KAAA,GAAAsO,EAAAsN,GAwDkCmB,uBAxDlC98B,KAAAquB,EAAAsN,GAAAtN,EAAAwO,KAAA,QAAAjR,EAAAyC,EAAApO,KAwDI/C,EAxDJ0O,EAwDI1O,KAKPwC,EAASwb,GAAwBhe,IA7D9B,yBAAAmR,EAAA/N,SAAA8N,EAAA7N,SAAP,SAAAiO,EAAAvC,GAAA,OAAAkC,EAAA9tB,MAAAkgB,KAAAE,YAAA,IAAA0N,EECa0D,CAAqBxH,KAEhCmI,qCAPK,SAOgCG,GACnCjT,EF8DC,SAAgCiT,GACrC,OAAAC,EAAAuI,GAAA5b,mBAAAC,KAAO,SAAAsM,EAAOpM,EAAU2M,GAAjB,IAAAjC,EAAAtB,EAAAyB,EAAAG,EAAA,OAAAnL,mBAAAK,KAAA,SAAAmM,GAAA,cAAAA,EAAAjM,KAAAiM,EAAAhM,MAAA,UACCqK,EAAiCjM,IAAEjU,IAAImiB,IAAY,qCAAsC,MAD1F,CAAAN,EAAAhM,KAAA,eAAAgM,EAAAY,OAAA,oBAMC7D,EAAYsB,EAAetB,aAC3ByB,EAAezB,EAAU0B,UAAU,SAAClD,GAAD,OAAcA,EAAS1B,aAC7C,GARd,CAAAmG,EAAAhM,KAAA,cASG,IAAI7b,MAAM,uCATb,UAaAyuB,EAAehN,cAAiBgN,EAAejN,UAb/C,CAAAqG,EAAAhM,KAAA,eAAAgM,EAAAY,OAAA,uBAiBCjC,EAAc5B,EAAU0B,UAAU,SAAClD,GAAD,OAAcA,EAASrjB,KAAO0uB,EAAe1uB,MACnE,GAlBb,CAAA8nB,EAAAhM,KAAA,gBAAAgM,EAAAY,OAAA,yBAuBLjN,EAAS,CACPzY,KAAM4U,EAAWW,KAAKI,8BACtB8D,QAAS,CAAC6J,eAAcG,iBAzBrBqB,EAAAhM,KAAA,GA6BCsb,GACJjR,EACAjM,IAAEkN,KAAK,CAACd,EAAcG,KA/BnB,yBAAAqB,EAAAzL,SAAAwL,EAAAvL,SAAP,SAAAyS,EAAAC,GAAA,OAAAL,EAAAvyB,MAAAkgB,KAAAE,YAAA,IAAAmS,EE/DaW,CAAuBZ,KAElC0J,0BAVK,WF2GF,IACLlQ,EEjGIzM,GFiGJyM,EAAAgP,GAAA5b,mBAAAC,KAAO,SAAAqT,EAAOnT,EAAU2M,GAAjB,IAAAjC,EAAA8I,EAAAhW,EAAA,OAAAqC,mBAAAK,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UACCqK,EAAiCjM,IAAEjU,IAAImiB,IAAY,qCAAsC,MAD1F,CAAAyG,EAAA/S,KAAA,eAAA+S,EAAAnG,OAAA,wBAAAmG,EAAA3S,GAMgB8K,GANhB6H,EAAAwI,GAOGlR,EAAelN,KAPlB4V,EAAA/S,KAAA,EAQc6B,GAAiBO,eAR/B,cAAA2Q,EAAAyI,GAAAzI,EAAA7S,KAAA6S,EAAA0I,GAAA,CAOHte,KAPG4V,EAAAwI,GAQH7d,UARGqV,EAAAyI,IAAAzI,EAAA/S,KAAA,GAAA+S,EAAA3S,GAMgC4c,mBANhC/8B,KAAA8yB,EAAA3S,GAAA2S,EAAA0I,IAAA,QAAAtI,EAAAJ,EAAA7S,KAME/C,EANFgW,EAMEhW,KAIPwC,EAASwb,GAAwBhe,IAV5B,yBAAA4V,EAAAxS,SAAAuS,EAAAtS,SAAP,SAAAyM,EAAAC,GAAA,OAAAd,EAAA9rB,MAAAkgB,KAAAE,iBEjDa2C,CAGb8Y,wzBCXac,oaAjEOpc,uDAGlB,OACEM,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,YACEqb,EAAA3Z,EAAA1B,cAACo3B,EAAA,EAAD,KACE/b,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KACf,WACC,OAAOlc,EAAA3Z,EAAA1B,cAACw3B,GAAD,QAGXnc,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,4BACT,SAAA9d,GAAa,IAAXge,EAAWhe,EAAXge,MACD,OACEpc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC03B,GAAD,CAAgBne,gBAAiBke,EAAME,OAAOv5B,QAKtDid,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,mCACT,SAAAjP,GAAa,IAAXmP,EAAWnP,EAAXmP,MACD,OACEpc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC43B,GAAD,CAAwB7V,eAAgB0V,EAAME,OAAOE,UAK7Dxc,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,+BACT,SAAAxR,GAAa,IAAX0R,EAAW1R,EAAX0R,MACD,OACEpc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC83B,GAAD,CAAiB/V,eAAgB0V,EAAME,OAAOE,UAKtDxc,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAAxK,GAAa,IAAX0K,EAAW1K,EAAX0K,MACD,OACEpc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAAC+3B,GAAD,CAAkBhW,eAAgB0V,EAAME,OAAOE,UAKvDxc,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,0BACT,SAAAjR,GAAa,IAAXmR,EAAWnR,EAAXmR,MACD,OACEpc,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAACg4B,GAAD,CAAyB3gB,KAAMogB,EAAME,OAAOtgB,s+BChD3C4gB,wPAEcxgB,qHACCA,GAAzBJ,SAAM6gB,gBACPxgB,4DAE6BL,8BAAwB6gB,geA8BxC1gB,EAAqB7Y,QAAQ,CAAC+Y,oBAA3CU,SAEA4J,EAAa1J,IAAEjU,IAAI+T,EAAM,2BAA4B,IACrD+J,EAAiB7J,IAAEjU,IAAI+T,EAAM,qCAAsC,IACpE4J,GAAeG,wBACZ3J,gBAGFnf,EAAqC,CACzC+oB,UAAW9J,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,8BAA+B,KACjEmK,WAAY,CACVhJ,gBAAiBjB,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,mBAAoB,KACtEK,mBAAoBlK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,qBAAsB,KAC3EM,aAAcnK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,KAAM,KACrDO,eAAgBpK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,OAAQ,KACzDQ,UAAW,CACTvkB,GAAIka,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,YACrCje,KAAMoU,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,gBAAiB,KACxD3D,KAAMlG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,gBAAiB,KACxD1D,MAAOnG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,iBAAkB,MAE5D3kB,OAAQ8a,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,sBAAuB,KAAK5B,cAAcqC,QAAQ,IAAK,KAChGC,eAAgB,CACdC,gCAAiCxK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,qBAAsB,KACxFY,cAAezK,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,8BAA+B,KAC/Ea,kBAAmB1K,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,kCAAmC,MAEzFc,UAAWtE,GAAeuE,uBAAuB,CAC/CpE,WAAYxG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,oBAAqB,KAClEpD,YAAazG,IAAE8G,SAAS9G,IAAEjU,IAAI8d,EAAgB,aAAc,OAE9DgB,gBAAiB7K,IACd8K,QAAQ9K,IAAEjU,IAAI8d,EAAgB,kBAAmB,KACjDphB,IAAI,SAACa,GAMJ,MAL8C,CAC5CyV,KAAMiB,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,OAAQ,KACrCyhB,SAAU/K,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,WAAY,KAC7CpE,OAAQ8a,IAAE8G,SAAS9G,IAAEjU,IAAIzC,EAAM,SAAU,4BAO5CvI,4MAGmCoe,mHACJA,GAA/BgL,iBAAc7K,cACfF,oEAEkC+K,2DAKrBjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SACf9G,IAAEjU,IAAI+T,EAAM,+DAAgE,OACxEf,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,gDAAiD,OAChF5a,GAAW6Z,wBACRmB,kCAED,CAACnB,+MAG+BI,mHACDA,GAA/BgL,iBAAc7K,cACfF,kEAEgC+K,2DAKnBjL,EAAqB7Y,QAAQ,CAAC+Y,QAAOE,wBAAlDQ,SACA5a,EAAS8a,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,6DAA8D,OAC9Ff,EAAOiB,IAAE8G,SAAS9G,IAAEjU,IAAI+T,EAAM,8CAA+C,OAC9E5a,GAAW6Z,wBACRmB,kCAED,CAACnB,g4CCrBG8gB,eAxFb,SAAAA,EAAYhd,GAAU,IAAAH,EAAA,mGAAAod,CAAA1d,KAAAyd,IACpBnd,EAAAqd,GAAA3d,KAAA4d,GAAAH,GAAAh+B,KAAAugB,KAAMS,KAEDqC,MAAQ,CACX4E,UAAW,GACXG,WAAY,MALMvH,yPAFuBD,+MAYrCL,KAAK6d,8IAGJ,IAAAC,EAAA9d,KAAA+d,qUAAAC,CAAA,GAC6Bhe,KAAK8C,OAAlC+E,EADAkW,EACAlW,WAAYH,EADZqW,EACYrW,UAEfuW,EAAU,KACd,GAAIpW,EAAY,CAEd,IAAIkQ,EAC8C,aAAhDlQ,EAAWM,eAAeG,mBACkB,YAA5CT,EAAWM,eAAeE,cACxB,WAAa,SAEjB4V,EACEtd,EAAA3Z,EAAA1B,cAACyzB,GAAD,CAASlR,WAAYA,EACZ6L,6BAA8B,WAAQoK,EAAKI,YAAYrW,EAAYH,IACnE+L,wBAAyB,aACzB4E,yBAA0B,WAAQyF,EAAKK,QAAQtW,IAC/CyQ,sBAAuB,WAAQwF,EAAKM,KAAKvW,IACzCkQ,OAAQA,IAKrB,OACEpX,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,oBACbF,EAAA3Z,EAAA1B,cAAA,UAAQub,UAAU,UAChBF,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,cACbF,EAAA3Z,EAAA1B,cAAA,OAAKE,IAAKwc,IAAWnB,UAAU,UAEjCF,EAAA3Z,EAAA1B,cAAA,kBACAqb,EAAA3Z,EAAA1B,cAAA,sBAED24B,EACDtd,EAAA3Z,EAAA1B,cAACsd,GAAD,yFAKYiF,EAAwBH,kGAClCkN,GAAQkC,YAAY,CACxBvO,UAAWV,EAAWU,UACtBN,UAAWJ,EAAWI,UACtBH,mBAAoBD,EAAWC,mBAC/BJ,iMAIUG,8FACN0V,QACU1V,EAAWE,sBACR1G,GAAiBO,+CADlCmG,kBACA7K,8BAF6C+c,uEAIzCja,KAAK6d,0LAGFhW,8FACH0V,QACU1V,EAAWE,sBACR1G,GAAiBO,+CADlCmG,kBACA7K,8BAF6Csd,oEAIzCxa,KAAK6d,qSAIQN,GAAyC9R,oBAAoB,CAC9E9O,KAAMqD,KAAKS,MAAM9D,KACjB6gB,YAAaxd,KAAKS,MAAMc,eAFpB5iB,SAKNqhB,KAAKqe,SAAS,CACZ3W,UAAW/oB,EAAK+oB,UAChBG,WAAYlpB,EAAKkpB,o9BCvERyW,oaA5BYje,uDAIvB,OACEM,EAAA3Z,EAAA1B,cAAA,WACEqb,EAAA3Z,EAAA1B,cAAA,YACEqb,EAAA3Z,EAAA1B,cAACi5B,GAAA,EAAD,KACE5d,EAAA3Z,EAAA1B,cAACo3B,EAAA,EAAD,KACE/b,EAAA3Z,EAAA1B,cAACq3B,EAAA,EAAD,CAAOE,KAAK,gCACT,SAAA9d,GAAuB,IAArBge,EAAqBhe,EAArBge,MAAOngB,EAAcmC,EAAdnC,SACFI,EAAQpY,iBAAMgY,EAAS4hB,QAC7B,OACE7d,EAAA3Z,EAAA1B,cAAA,OAAKub,UAAU,WACbF,EAAA3Z,EAAA1B,cAACm5B,GAAD,CAAkC9hB,KAAMogB,EAAME,OAAOtgB,KAAM4E,MAAOvE,EAAMuE,OAAS,4DCfjGmd,WAA0B,CAC9BtgB,MAAO,GACPC,SAAU,GACVC,QAAS,ocCIX,IAAMqgB,GAA6C,CACjDvgB,MAAO,GACPC,SAAU,GACVoF,eAAgB,GAChB5E,gBAAiB,GACjB6E,KAAM,MAGFkb,GAAuD,CAC3DxgB,MAAO,GACPsJ,UAAW,GACXhE,KAAM,KACNmE,WAAY,KACZD,uBAAuB,GAoFViX,kCAAoC,CACjDxR,WAlFK,WAA8G,IAA1FvK,EAA0F5C,UAAA/gB,OAAA,QAAAiD,IAAA8d,UAAA,GAAAA,UAAA,GAAzDye,GAAmBhY,EAAsCzG,UAAA/gB,OAAA,EAAA+gB,UAAA,QAAA9d,EACnH,OAAIukB,EAAOjgB,OAAS4U,EAAWK,cAAcC,+BACpC+K,EAAOxG,QAET2C,GA+EPqJ,gBA5EK,WAAkG,IAAzErJ,EAAyE5C,UAAA/gB,OAAA,QAAAiD,IAAA8d,UAAA,GAAAA,UAAA,GAAnC0e,GAAwBjY,EAAWzG,UAAA/gB,OAAA,EAAA+gB,UAAA,QAAA9d,EACvG,GAAIukB,EAAOjgB,OAAS4U,EAAWK,cAAcE,oCAC3C,OAAO8K,EAAOxG,QAGhB,GAAIwG,EAAOjgB,OAAS4U,EAAWK,cAAcG,iCAAkC,CAC7E,IAAKgH,EAAM+E,WACT,OAAO/E,EAIT,IAAMgH,EAA6BnD,EAAOxG,QACpC8B,EAAQa,EAAM+E,WAAWU,UAAU0B,UAAU,SAAClD,GAClD,OAAOA,EAASrjB,KAAOomB,EAAiBpmB,KAE1C,GAAIue,EAAQ,EACV,OAAOa,EAGT,IAAMgc,EAAWC,GAAA,GAAIjc,GAErB,OADAlF,IAAEhU,IAAIk1B,EAAN,wBAAAh4B,OAAwCmb,GAAS6H,GAC1CgV,EAGT,GAAInY,EAAOjgB,OAAS4U,EAAWK,cAAcI,uCAAwC,CACnF,IAAM8L,EAAa/E,EAAM+E,WACzB,IAAKA,EACH,OAAO/E,EAH0E,IAM5EqH,EAN4E4U,GAAA,GAMzDpY,GAAnBwD,YACDH,EAAenC,EAAWU,UAAU0B,UAAU,SAAClD,GACnD,OAAOA,EAAS1B,YAIlB,GAAI8E,EAAc,GAAKA,GAAetC,EAAWU,UAAUppB,OACzD,OAAO2jB,EAGT,IAAMgc,EAAWC,GAAA,GAAIjc,GAQrB,OALAlF,IAAEhU,IAAIk1B,EAAN,wBAAAh4B,OAAwCkjB,EAAxC,eAAkE,GAGlEpM,IAAEhU,IAAIk1B,EAAN,wBAAAh4B,OAAwCqjB,EAAxC,eAAiE,GAE1D2U,EAGT,GAAInY,EAAOjgB,OAAS4U,EAAWK,cAAcK,2CAA4C,CACvF,IAAM6L,EAAa/E,EAAM+E,WACzB,IAAKA,EACH,OAAO/E,EAET,IAAMgc,EAAWC,GAAA,GAAIjc,GAGfoH,EAAuBvD,EAAOuD,qBASpC,OARIA,GAAwBA,EAAqB/qB,OAAS,GACxD+qB,EAAqB7hB,QAAQ,SAAA4Z,GAC3B,IAAM+c,EAAwBnX,EAAWU,UAAUtG,GACnD+c,EAAsB5Z,cAAe,EACrCxH,IAAEhU,IAAIk1B,EAAN,wBAAAh4B,OAAwCmb,GAAS+c,KAI9CF,EAGT,OAAOhc,ocCnGT,IAAM6b,GAAyC,CAC7CjX,UAAW,GACXwD,YAAa,KACbrB,eAAgB,MCHHgV,kCAA2B,CACxCzf,UHGK,WAAiF,IAA9D0D,EAA8D5C,UAAA/gB,OAAA,QAAAiD,IAAA8d,UAAA,GAAAA,UAAA,GAA3Cwe,GAAc/X,EAA6BzG,UAAA/gB,OAAA,EAAA+gB,UAAA,QAAA9d,EACtF,OAAQukB,EAAOjgB,MACb,KAAK4U,EAAWC,KAAKC,wBAErB,KAAKF,EAAWC,KAAKE,uBACnB,OAAOqH,EACT,KAAKxH,EAAWC,KAAKG,yBACnB,OAAOiL,EAAOxG,QAChB,QACE,OAAO2C,IGXXoJ,sBACA+P,oBDGK,WAA6G,IAAhFnZ,EAAgF5C,UAAA/gB,OAAA,QAAAiD,IAAA8d,UAAA,GAAAA,UAAA,GAAnDye,GAAmBhY,EAAgCzG,UAAA/gB,OAAA,EAAA+gB,UAAA,QAAA9d,EAC5GynB,EAAwC/G,EAAM+G,eAEpD,GAAIlD,EAAOjgB,OAAS4U,EAAWW,KAAKC,2BAClC,OAAOyK,EAAOxG,QAGhB,GAAIwG,EAAOjgB,OAAS4U,EAAWW,KAAKE,4BAA6B,CAC/D,IAAK0N,EACH,OAAO/G,EAGT,IAAMgH,EAA6BnD,EAAOxG,QACpC8B,EAAQ4H,EAAetB,UAAU0B,UAAU,SAAClD,GAChD,OAAOA,EAASrjB,KAAOomB,EAAiBpmB,KAE1C,GAAIue,EAAQ,EACV,OAAOa,EAGT,IAAMgc,EAAWG,GAAA,GAAInc,GAErB,OADAlF,IAAEhU,IAAIk1B,EAAN,4BAAAh4B,OAA4Cmb,GAAS6H,GAC9CgV,EAGT,GAAInY,EAAOjgB,OAAS4U,EAAWW,KAAKG,kCAAmC,CACrE,IAAKyN,EACH,OAAO/G,EAET,IAAMgc,EAAWG,GAAA,GAAInc,GAGfoH,EAAuBvD,EAAOxG,QASpC,OARI+J,GAAwBA,EAAqB/qB,OAAS,GACxD+qB,EAAqB7hB,QAAQ,SAAA4Z,GAC3B,IAAM+c,EAAwBnV,EAAetB,UAAUtG,GACvD+c,EAAsB5Z,cAAe,EACrCxH,IAAEhU,IAAIk1B,EAAN,4BAAAh4B,OAA4Cmb,GAAS+c,KAIlDF,EAGT,GAAInY,EAAOjgB,OAAS4U,EAAWW,KAAKI,8BAA+B,CACjE,IAAKwN,EACH,OAAO/G,EAFwD,IAAAoc,EAAAD,GAAA,GAKzBtY,EAAOxG,SAAxC6J,EAL0DkV,EAK1DlV,aAAcG,EAL4C+U,EAK5C/U,YAGrB,GAAIA,EAAc,GAAKA,GAAeN,EAAetB,UAAUppB,OAC7D,OAAO2jB,EAGT,IAAMgc,EAAWG,GAAA,GAAInc,GAOrB,OAJAlF,IAAEhU,IAAIk1B,EAAN,4BAAAh4B,OAA4CkjB,EAA5C,eAAsE,GAEtEpM,IAAEhU,IAAIk1B,EAAN,4BAAAh4B,OAA4CqjB,EAA5C,eAAqE,GAE9D2U,EAGT,OAAOhc,eE1EHqc,GAAa,CAACC,KAMb,IAOQC,GAPMC,uBACnBvT,GACAwT,+BACEC,mBAAe1/B,WAAf,EAAmBq/B,MCNvB1+B,OAAO6zB,iBAAiB,OAAQ,WAC9B,IAAMmL,EAAgBp6B,SAASq6B,eAAe,YAC1CD,GACFE,IAASrP,OACP3P,EAAA3Z,EAAA1B,cAACi5B,GAAA,EAAD,KACE5d,EAAA3Z,EAAA1B,cAACs6B,EAAA,EAAD,CAAUP,MAAOA,IACf1e,EAAA3Z,EAAA1B,cAACu6B,GAAD,QAGHJ,GAGL,IAAMK,EAAqBz6B,SAASq6B,eAAe,iBAC/CI,GACFH,IAASrP,OAAQ3P,EAAA3Z,EAAA1B,cAACy6B,GAAD,MAAkBD,yBCvBvC/5B,EAAAqD,QAAiB9I,EAAA6D,EAAuB,kECAxC4B,EAAAqD,QAAiB9I,EAAA6D,EAAuB,kECAxC4B,EAAAqD,QAAiB9I,EAAA6D,EAAuB","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"a8ec1ea66ffe544e8597\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([482,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 156,\n\t\"./af.js\": 156,\n\t\"./ar\": 157,\n\t\"./ar-dz\": 158,\n\t\"./ar-dz.js\": 158,\n\t\"./ar-kw\": 159,\n\t\"./ar-kw.js\": 159,\n\t\"./ar-ly\": 160,\n\t\"./ar-ly.js\": 160,\n\t\"./ar-ma\": 161,\n\t\"./ar-ma.js\": 161,\n\t\"./ar-sa\": 162,\n\t\"./ar-sa.js\": 162,\n\t\"./ar-tn\": 163,\n\t\"./ar-tn.js\": 163,\n\t\"./ar.js\": 157,\n\t\"./az\": 164,\n\t\"./az.js\": 164,\n\t\"./be\": 165,\n\t\"./be.js\": 165,\n\t\"./bg\": 166,\n\t\"./bg.js\": 166,\n\t\"./bm\": 167,\n\t\"./bm.js\": 167,\n\t\"./bn\": 168,\n\t\"./bn.js\": 168,\n\t\"./bo\": 169,\n\t\"./bo.js\": 169,\n\t\"./br\": 170,\n\t\"./br.js\": 170,\n\t\"./bs\": 171,\n\t\"./bs.js\": 171,\n\t\"./ca\": 172,\n\t\"./ca.js\": 172,\n\t\"./cs\": 173,\n\t\"./cs.js\": 173,\n\t\"./cv\": 174,\n\t\"./cv.js\": 174,\n\t\"./cy\": 175,\n\t\"./cy.js\": 175,\n\t\"./da\": 176,\n\t\"./da.js\": 176,\n\t\"./de\": 177,\n\t\"./de-at\": 178,\n\t\"./de-at.js\": 178,\n\t\"./de-ch\": 179,\n\t\"./de-ch.js\": 179,\n\t\"./de.js\": 177,\n\t\"./dv\": 180,\n\t\"./dv.js\": 180,\n\t\"./el\": 181,\n\t\"./el.js\": 181,\n\t\"./en-SG\": 182,\n\t\"./en-SG.js\": 182,\n\t\"./en-au\": 183,\n\t\"./en-au.js\": 183,\n\t\"./en-ca\": 184,\n\t\"./en-ca.js\": 184,\n\t\"./en-gb\": 185,\n\t\"./en-gb.js\": 185,\n\t\"./en-ie\": 186,\n\t\"./en-ie.js\": 186,\n\t\"./en-il\": 187,\n\t\"./en-il.js\": 187,\n\t\"./en-nz\": 188,\n\t\"./en-nz.js\": 188,\n\t\"./eo\": 189,\n\t\"./eo.js\": 189,\n\t\"./es\": 190,\n\t\"./es-do\": 191,\n\t\"./es-do.js\": 191,\n\t\"./es-us\": 192,\n\t\"./es-us.js\": 192,\n\t\"./es.js\": 190,\n\t\"./et\": 193,\n\t\"./et.js\": 193,\n\t\"./eu\": 194,\n\t\"./eu.js\": 194,\n\t\"./fa\": 195,\n\t\"./fa.js\": 195,\n\t\"./fi\": 196,\n\t\"./fi.js\": 196,\n\t\"./fo\": 197,\n\t\"./fo.js\": 197,\n\t\"./fr\": 198,\n\t\"./fr-ca\": 199,\n\t\"./fr-ca.js\": 199,\n\t\"./fr-ch\": 200,\n\t\"./fr-ch.js\": 200,\n\t\"./fr.js\": 198,\n\t\"./fy\": 201,\n\t\"./fy.js\": 201,\n\t\"./ga\": 202,\n\t\"./ga.js\": 202,\n\t\"./gd\": 203,\n\t\"./gd.js\": 203,\n\t\"./gl\": 204,\n\t\"./gl.js\": 204,\n\t\"./gom-latn\": 205,\n\t\"./gom-latn.js\": 205,\n\t\"./gu\": 206,\n\t\"./gu.js\": 206,\n\t\"./he\": 207,\n\t\"./he.js\": 207,\n\t\"./hi\": 208,\n\t\"./hi.js\": 208,\n\t\"./hr\": 209,\n\t\"./hr.js\": 209,\n\t\"./hu\": 210,\n\t\"./hu.js\": 210,\n\t\"./hy-am\": 211,\n\t\"./hy-am.js\": 211,\n\t\"./id\": 212,\n\t\"./id.js\": 212,\n\t\"./is\": 213,\n\t\"./is.js\": 213,\n\t\"./it\": 214,\n\t\"./it-ch\": 215,\n\t\"./it-ch.js\": 215,\n\t\"./it.js\": 214,\n\t\"./ja\": 216,\n\t\"./ja.js\": 216,\n\t\"./jv\": 217,\n\t\"./jv.js\": 217,\n\t\"./ka\": 218,\n\t\"./ka.js\": 218,\n\t\"./kk\": 219,\n\t\"./kk.js\": 219,\n\t\"./km\": 220,\n\t\"./km.js\": 220,\n\t\"./kn\": 221,\n\t\"./kn.js\": 221,\n\t\"./ko\": 222,\n\t\"./ko.js\": 222,\n\t\"./ku\": 223,\n\t\"./ku.js\": 223,\n\t\"./ky\": 224,\n\t\"./ky.js\": 224,\n\t\"./lb\": 225,\n\t\"./lb.js\": 225,\n\t\"./lo\": 226,\n\t\"./lo.js\": 226,\n\t\"./lt\": 227,\n\t\"./lt.js\": 227,\n\t\"./lv\": 228,\n\t\"./lv.js\": 228,\n\t\"./me\": 229,\n\t\"./me.js\": 229,\n\t\"./mi\": 230,\n\t\"./mi.js\": 230,\n\t\"./mk\": 231,\n\t\"./mk.js\": 231,\n\t\"./ml\": 232,\n\t\"./ml.js\": 232,\n\t\"./mn\": 233,\n\t\"./mn.js\": 233,\n\t\"./mr\": 234,\n\t\"./mr.js\": 234,\n\t\"./ms\": 235,\n\t\"./ms-my\": 236,\n\t\"./ms-my.js\": 236,\n\t\"./ms.js\": 235,\n\t\"./mt\": 237,\n\t\"./mt.js\": 237,\n\t\"./my\": 238,\n\t\"./my.js\": 238,\n\t\"./nb\": 239,\n\t\"./nb.js\": 239,\n\t\"./ne\": 240,\n\t\"./ne.js\": 240,\n\t\"./nl\": 241,\n\t\"./nl-be\": 242,\n\t\"./nl-be.js\": 242,\n\t\"./nl.js\": 241,\n\t\"./nn\": 243,\n\t\"./nn.js\": 243,\n\t\"./pa-in\": 244,\n\t\"./pa-in.js\": 244,\n\t\"./pl\": 245,\n\t\"./pl.js\": 245,\n\t\"./pt\": 246,\n\t\"./pt-br\": 247,\n\t\"./pt-br.js\": 247,\n\t\"./pt.js\": 246,\n\t\"./ro\": 248,\n\t\"./ro.js\": 248,\n\t\"./ru\": 249,\n\t\"./ru.js\": 249,\n\t\"./sd\": 250,\n\t\"./sd.js\": 250,\n\t\"./se\": 251,\n\t\"./se.js\": 251,\n\t\"./si\": 252,\n\t\"./si.js\": 252,\n\t\"./sk\": 253,\n\t\"./sk.js\": 253,\n\t\"./sl\": 254,\n\t\"./sl.js\": 254,\n\t\"./sq\": 255,\n\t\"./sq.js\": 255,\n\t\"./sr\": 256,\n\t\"./sr-cyrl\": 257,\n\t\"./sr-cyrl.js\": 257,\n\t\"./sr.js\": 256,\n\t\"./ss\": 258,\n\t\"./ss.js\": 258,\n\t\"./sv\": 259,\n\t\"./sv.js\": 259,\n\t\"./sw\": 260,\n\t\"./sw.js\": 260,\n\t\"./ta\": 261,\n\t\"./ta.js\": 261,\n\t\"./te\": 262,\n\t\"./te.js\": 262,\n\t\"./tet\": 263,\n\t\"./tet.js\": 263,\n\t\"./tg\": 264,\n\t\"./tg.js\": 264,\n\t\"./th\": 265,\n\t\"./th.js\": 265,\n\t\"./tl-ph\": 266,\n\t\"./tl-ph.js\": 266,\n\t\"./tlh\": 267,\n\t\"./tlh.js\": 267,\n\t\"./tr\": 268,\n\t\"./tr.js\": 268,\n\t\"./tzl\": 269,\n\t\"./tzl.js\": 269,\n\t\"./tzm\": 270,\n\t\"./tzm-latn\": 271,\n\t\"./tzm-latn.js\": 271,\n\t\"./tzm.js\": 270,\n\t\"./ug-cn\": 272,\n\t\"./ug-cn.js\": 272,\n\t\"./uk\": 273,\n\t\"./uk.js\": 273,\n\t\"./ur\": 274,\n\t\"./ur.js\": 274,\n\t\"./uz\": 275,\n\t\"./uz-latn\": 276,\n\t\"./uz-latn.js\": 276,\n\t\"./uz.js\": 275,\n\t\"./vi\": 277,\n\t\"./vi.js\": 277,\n\t\"./x-pseudo\": 278,\n\t\"./x-pseudo.js\": 278,\n\t\"./yo\": 279,\n\t\"./yo.js\": 279,\n\t\"./zh-cn\": 280,\n\t\"./zh-cn.js\": 280,\n\t\"./zh-hk\": 281,\n\t\"./zh-hk.js\": 281,\n\t\"./zh-tw\": 282,\n\t\"./zh-tw.js\": 282\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 469;","// @flow\n\n\nimport type {HomeState} from \"../store/HomeState\";\nimport {Action} from \"redux\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\n\nexport type LoadHomeStateFinishedAction = Action & {\n  payload: HomeState\n}\n\nexport type LoadHomeStateFailedAction = Action & {\n  error: Error\n}\n\nexport type LoadHomeStateAction = Action | LoadHomeStateFinishedAction | LoadHomeStateFailedAction;\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION_STATE: \"LOAD_TASK_SUBMISSION_STATE\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"MOVE_TO_ANOTHER_TASK_QUESTION\",\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\"\n  }\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static getTaskSubmissionURL(uuid: string) {\n    return `/task/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string) {\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const inst = axios.create({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n\n    const response = await inst.request();\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      // Check auth error\n      // TODO: need a better way to identify the auth error (e.g, ERROR_CODE)\n      if (errorMessage === \"Please log in first...\") {\n        URLUtil.redirectToLogin();\n      }\n\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport _ from \"lodash\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = _.get(json, \"data.readDashboard\", []);\n    if(!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboard = data[0];\n\n    const title = _.get(dashboard, \"Title\", \"\");\n    const subtitle = _.get(dashboard, \"Subtitle\", \"\");\n    let pillars = _.get(dashboard, \"Pillars\", []);\n    if(!Array.isArray(pillars)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    pillars = pillars.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: _.get(item, \"Label\", \"\"),\n        disabled: _.get(item, \"Disabled\", true),\n        questionnaireID: _.get(item, \"Questionnaire.0.ID\", \"\"),\n        icon: icon\n      };\n    });\n\n    return {\n      title,\n      subtitle,\n      pillars\n    };\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadHomeStateFailedAction, LoadHomeStateFinishedAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport {Action} from \"redux\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    dispatch(loadingHomeState());\n\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      dispatch(loadedHomeState(homeState));\n    } catch (error) {\n      dispatch(failedHomeState(error));\n      // TODO: maybe dispatch a global error action\n      // TODO: maybe better error alert\n      console.error(error);\n      alert(error.message);\n    }\n  };\n}\n\nexport function loadingHomeState(): Action {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_STARTED\n  };\n}\n\nexport function failedHomeState(error: Error): LoadHomeStateFailedAction {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_FAILED,\n    error: error\n  };\n}\n\nexport function loadedHomeState(homeState: HomeState): LoadHomeStateFinishedAction {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n    payload: homeState\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n  disabled: boolean\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    return (\n      <Link className={`TaskButton ${this.props.classes.join(\" \")}`}\n            to={this.props.link}\n            onClick={(event) => {\n              if(this.props.disabled) {\n                event.preventDefault();\n                alert(\"Coming soon...\");\n              }\n            }}\n      >\n        <div className=\"title\">{this.props.title}</div>\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n    const inst = axios.create({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const response = await inst.request();\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n        <div className=\"layout\">\n          <img src={LogoImage} className=\"logo\"/>\n          <h1>\n            {this.props.homeState.title}\n          </h1>\n          <h2>\n            {this.props.homeState.subtitle}\n          </h2>\n          <div className=\"pillars\">\n            {this.props.homeState.pillars.map((pillar, index) => {\n              return (\n                <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                        classes={[\"col\", \"mx-1\"]}\n                        pillar={pillar}\n                        key={index}\n                />\n              );\n            })}\n          </div>\n          <div className=\"tasks\">\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Your Role: </b>\n                <span>{user.role}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.get(inputSchema, \"Required\", false)),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport _ from \"lodash\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: _.toString(_.get(jsonObject, \"ID\")),\n      name: `${_.get(jsonObject, \"FirstName\")} ${_.get(jsonObject, \"Surname\")}`,\n      role: _.get(jsonObject, \"UserRole\"),\n      email: _.get(jsonObject, \"Email\"),\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: {\n        id: _.get(memberData, \"ID\"),\n        name: `${_.get(memberData, \"FirstName\")} ${_.get(memberData, \"Surname\")}`,\n        role: _.get(memberData, \"UserRole\"),\n        email: _.get(memberData, \"Email\"),\n      },\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const returnPackage = {\n      currentIndex: questions.findIndex((question) => question.id === answeredQuestion.id),\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\") {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsForQuestionnaireSubmission(argument: {\n    questionnaireSubmission: Submission,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questionnaireSubmission, csrfToken} = {...argument};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questionnaireSubmission.questions.forEach((question) => {\n      // Only action question can generate tasks\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = _.uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length  === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmission.submissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmissionState(uuid: string): Promise<TaskSubmissionState> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n  }\n  readTaskSubmission(UUID: \"${uuid}\") {\n    ID\n    UUID\n    TaskName\n    Status\n    Result\n    QuestionnaireSubmission {\n      UUID\n    }\n    QuestionnaireData\n    AnswerData\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", {});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!currentMemberJSONObject || !submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmissionState = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      currentUser: UserParser.parseUserFromJSON(currentMemberJSONObject),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n      },\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(argument: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(UUID: \"${uuid}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(argument: {\n    uuid: string,\n    result: string,\n    csrfToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken} = {...argument};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!_.get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\") {\n   UUID\n   Status\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!_.get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\n\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsForQuestionnaireSubmission({questionnaireSubmission: submission, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Commons\n\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string\n};\n\nclass Header extends Component<Props> {\n\n  render() {\n    const {title, subtitle} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <img src={LogoImage} className=\"logo\"/>\n        </div>\n        <div className=\"logout-wrapper\">\n          <LogoutButton/>\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnarie\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} />\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div>\n          {questions.map((question) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnarie\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} />\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Role: ${submitter.role}`,\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnarie\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\"/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>;\n      </div>\n    )\n      ;\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport {Link} from \"react-router-dom\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\"\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Role:</b> {submitter.role}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, status}) => {\n          return (\n            <div key={uuid}>\n              <Link to={URLUtil.getTaskSubmissionURL(uuid)}>\n                {taskName} ({prettifyStatus(status)})\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.securityArchitect)}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.chiefInformationSecurityOfficer)}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.businessOwner)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission, denyQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n} from \"../../actions/questionnarie\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass SummaryContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\"/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchApproveSubmissionAction(submission.submissionID);\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchDenySubmissionAction(submission.submissionID);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nexport function loadTaskSubmissionState(uuid: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const payload = await TaskDataService.fetchTaskSubmissionState(uuid);\n      dispatch({\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION_STATE,\n        payload,\n      });\n    }\n    catch (error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestion(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = _.get(getState(), \"taskSubmissionState.taskSubmission\");\n    if (!taskSubmission) {\n      return;\n    }\n\n    // Save local state\n    dispatch({\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    });\n\n    // Network request - save answer\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: [answeredQuestion.id],\n      answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n    });\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: taskSubmission.questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      });\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      });\n    }\n\n    // Network request - batch update\n    await batchUpdateTaskSubmissionData(\n      taskSubmission,\n      _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex])\n    );\n\n    if (complete) {\n      const {uuid} = await TaskDataService.completeTaskSubmission({\n        uuid: taskSubmission.uuid,\n        result: result,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      dispatch(loadTaskSubmissionState(uuid));\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = _.get(getState(), \"taskSubmissionState.taskSubmission\", null);\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    dispatch({\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    });\n\n    // Network request - batch update\n    await batchUpdateTaskSubmissionData(\n      taskSubmission,\n      _.uniq([currentIndex, targetIndex])\n    );\n  };\n}\n\nexport function editCompletedTaskSubmission(): ThunkAction {\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = _.get(getState(), \"taskSubmissionState.taskSubmission\", null);\n    if (!taskSubmission) {\n      return;\n    }\n\n    const {uuid} = await TaskDataService.editTaskSubmission({\n      uuid: taskSubmission.uuid,\n      csrfToken: await CSRFTokenService.getCSRFToken()\n    });\n    dispatch(loadTaskSubmissionState(uuid));\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n    } = {...this.props};\n\n    let body = null;\n\n    // Display questionnaire form for in-progress task submission\n    if (taskSubmission.status === \"in_progress\") {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    // Display answers preview for completed task submission\n    if (taskSubmission.status === \"complete\") {\n      body = (\n        <AnswersPreview questions={taskSubmission.questions}/>\n      );\n    }\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = taskSubmission.status === \"complete\" ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmissionState,\n  moveToPreviousQuestion,\n  saveAnsweredQuestion,\n} from \"../../actions/task\";\nimport type {TaskSubmissionState} from \"../../store/TaskSubmissionState\";\nimport TaskSubmission from \"./TaskSubmission\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    state: state.taskSubmissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadTaskSubmissionAction(uuid: string) {\n      dispatch(loadTaskSubmissionState(uuid));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestion(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion))\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission())\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  state?: TaskSubmissionState,\n  dispatchLoadTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadTaskSubmissionAction} = {...this.props};\n    dispatchLoadTaskSubmissionAction(uuid);\n  }\n\n  render() {\n    const {\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction\n    } = {...this.props};\n    const {siteTitle, currentUser, taskSubmission} = {...this.props.state};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: {uuid: string, secureToken: string}): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleSubmitButtonClick={() => {}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <header className=\"Header\">\n          <div className=\"top-banner\">\n            <img src={LogoImage} className=\"logo\"/>\n          </div>\n          <h1>SDLT</h1>\n          <h2>Summary</h2>\n        </header>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n    const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n      uuid: this.props.uuid,\n      secureToken: this.props.token,\n    });\n\n    this.setState({\n      siteTitle: data.siteTitle,\n      submission: data.submission,\n    });\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\n\nclass AnonymousApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default AnonymousApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {LoadHomeStateAction} from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: []\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_STARTED:\n      return state;\n    case ActionType.HOME.LOAD_HOME_STATE_FAILED:\n      return state;\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  siteTitle: \"\",\n  currentUser: null,\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    _.set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport AnonymousApp from \"./components/App/AnonymousApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nwindow.addEventListener(\"load\", () => {\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const anonymousContainer = document.getElementById(\"anonymous-app\");\n  if (anonymousContainer) {\n    ReactDOM.render((<AnonymousApp/>), anonymousContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";"],"sourceRoot":""}