{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnarie.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","1","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","inst","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","HomeDataService","Array","isArray","dashboard","title","subtitle","pillars","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","loadedHomeState","t0","alert","message","stop","this","_x","payload","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","Home","Button_LogoutButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","role","email","Button_LightButton","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","goto","taskID","question","heading","description","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","submission","questionnaireTitle","submissionID","submissionUUID","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","questions","parseQuestionsFromJSON","taskSubmissions","toArray","taskName","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","returnPackage","currentIndex","findIndex","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","loadQuestionnaireSubmissionState","_ref3","questionnarie_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnarie_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee12","indexesToUpdate","_context12","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","redirectToTaskSubmission","handleApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","SummaryContainer","SummaryContainer_objectSpread","Questionnaire_Summary","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","_this$props$submissio6","dispatchEditSubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref11","_callee9","_ref12","_context9","approveQuestionnaireSubmission","_x14","_x15","_ref13","_callee10","_ref14","_context10","denyQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","editQuestionnaireSubmission","_x18","_x19","ErrorUtil","rethrow","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","displayError","saveAnsweredQuestionInTaskSubmission","_args3","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","t9","moveToPreviousQuestionInTaskSubmission","_args5","editCompletedTaskSubmission","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","isCurrentUserSubmitter","Task_TaskSubmission","siteConfigState","currentUserState","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","QuestionnaireForBusinessOwnerDataService","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","_this2","_this$state","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","setState","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","_props","VendorApp","Task_TaskSubmissionForVendorContainer","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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,IAAAkC,EAAA,CACA+E,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"a6fbd537eaaa058ee352\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([618,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 192,\n\t\"./af.js\": 192,\n\t\"./ar\": 193,\n\t\"./ar-dz\": 194,\n\t\"./ar-dz.js\": 194,\n\t\"./ar-kw\": 195,\n\t\"./ar-kw.js\": 195,\n\t\"./ar-ly\": 196,\n\t\"./ar-ly.js\": 196,\n\t\"./ar-ma\": 197,\n\t\"./ar-ma.js\": 197,\n\t\"./ar-sa\": 198,\n\t\"./ar-sa.js\": 198,\n\t\"./ar-tn\": 199,\n\t\"./ar-tn.js\": 199,\n\t\"./ar.js\": 193,\n\t\"./az\": 200,\n\t\"./az.js\": 200,\n\t\"./be\": 201,\n\t\"./be.js\": 201,\n\t\"./bg\": 202,\n\t\"./bg.js\": 202,\n\t\"./bm\": 203,\n\t\"./bm.js\": 203,\n\t\"./bn\": 204,\n\t\"./bn.js\": 204,\n\t\"./bo\": 205,\n\t\"./bo.js\": 205,\n\t\"./br\": 206,\n\t\"./br.js\": 206,\n\t\"./bs\": 207,\n\t\"./bs.js\": 207,\n\t\"./ca\": 208,\n\t\"./ca.js\": 208,\n\t\"./cs\": 209,\n\t\"./cs.js\": 209,\n\t\"./cv\": 210,\n\t\"./cv.js\": 210,\n\t\"./cy\": 211,\n\t\"./cy.js\": 211,\n\t\"./da\": 212,\n\t\"./da.js\": 212,\n\t\"./de\": 213,\n\t\"./de-at\": 214,\n\t\"./de-at.js\": 214,\n\t\"./de-ch\": 215,\n\t\"./de-ch.js\": 215,\n\t\"./de.js\": 213,\n\t\"./dv\": 216,\n\t\"./dv.js\": 216,\n\t\"./el\": 217,\n\t\"./el.js\": 217,\n\t\"./en-SG\": 218,\n\t\"./en-SG.js\": 218,\n\t\"./en-au\": 219,\n\t\"./en-au.js\": 219,\n\t\"./en-ca\": 220,\n\t\"./en-ca.js\": 220,\n\t\"./en-gb\": 221,\n\t\"./en-gb.js\": 221,\n\t\"./en-ie\": 222,\n\t\"./en-ie.js\": 222,\n\t\"./en-il\": 223,\n\t\"./en-il.js\": 223,\n\t\"./en-nz\": 224,\n\t\"./en-nz.js\": 224,\n\t\"./eo\": 225,\n\t\"./eo.js\": 225,\n\t\"./es\": 226,\n\t\"./es-do\": 227,\n\t\"./es-do.js\": 227,\n\t\"./es-us\": 228,\n\t\"./es-us.js\": 228,\n\t\"./es.js\": 226,\n\t\"./et\": 229,\n\t\"./et.js\": 229,\n\t\"./eu\": 230,\n\t\"./eu.js\": 230,\n\t\"./fa\": 231,\n\t\"./fa.js\": 231,\n\t\"./fi\": 232,\n\t\"./fi.js\": 232,\n\t\"./fo\": 233,\n\t\"./fo.js\": 233,\n\t\"./fr\": 234,\n\t\"./fr-ca\": 235,\n\t\"./fr-ca.js\": 235,\n\t\"./fr-ch\": 236,\n\t\"./fr-ch.js\": 236,\n\t\"./fr.js\": 234,\n\t\"./fy\": 237,\n\t\"./fy.js\": 237,\n\t\"./ga\": 238,\n\t\"./ga.js\": 238,\n\t\"./gd\": 239,\n\t\"./gd.js\": 239,\n\t\"./gl\": 240,\n\t\"./gl.js\": 240,\n\t\"./gom-latn\": 241,\n\t\"./gom-latn.js\": 241,\n\t\"./gu\": 242,\n\t\"./gu.js\": 242,\n\t\"./he\": 243,\n\t\"./he.js\": 243,\n\t\"./hi\": 244,\n\t\"./hi.js\": 244,\n\t\"./hr\": 245,\n\t\"./hr.js\": 245,\n\t\"./hu\": 246,\n\t\"./hu.js\": 246,\n\t\"./hy-am\": 247,\n\t\"./hy-am.js\": 247,\n\t\"./id\": 248,\n\t\"./id.js\": 248,\n\t\"./is\": 249,\n\t\"./is.js\": 249,\n\t\"./it\": 250,\n\t\"./it-ch\": 251,\n\t\"./it-ch.js\": 251,\n\t\"./it.js\": 250,\n\t\"./ja\": 252,\n\t\"./ja.js\": 252,\n\t\"./jv\": 253,\n\t\"./jv.js\": 253,\n\t\"./ka\": 254,\n\t\"./ka.js\": 254,\n\t\"./kk\": 255,\n\t\"./kk.js\": 255,\n\t\"./km\": 256,\n\t\"./km.js\": 256,\n\t\"./kn\": 257,\n\t\"./kn.js\": 257,\n\t\"./ko\": 258,\n\t\"./ko.js\": 258,\n\t\"./ku\": 259,\n\t\"./ku.js\": 259,\n\t\"./ky\": 260,\n\t\"./ky.js\": 260,\n\t\"./lb\": 261,\n\t\"./lb.js\": 261,\n\t\"./lo\": 262,\n\t\"./lo.js\": 262,\n\t\"./lt\": 263,\n\t\"./lt.js\": 263,\n\t\"./lv\": 264,\n\t\"./lv.js\": 264,\n\t\"./me\": 265,\n\t\"./me.js\": 265,\n\t\"./mi\": 266,\n\t\"./mi.js\": 266,\n\t\"./mk\": 267,\n\t\"./mk.js\": 267,\n\t\"./ml\": 268,\n\t\"./ml.js\": 268,\n\t\"./mn\": 269,\n\t\"./mn.js\": 269,\n\t\"./mr\": 270,\n\t\"./mr.js\": 270,\n\t\"./ms\": 271,\n\t\"./ms-my\": 272,\n\t\"./ms-my.js\": 272,\n\t\"./ms.js\": 271,\n\t\"./mt\": 273,\n\t\"./mt.js\": 273,\n\t\"./my\": 274,\n\t\"./my.js\": 274,\n\t\"./nb\": 275,\n\t\"./nb.js\": 275,\n\t\"./ne\": 276,\n\t\"./ne.js\": 276,\n\t\"./nl\": 277,\n\t\"./nl-be\": 278,\n\t\"./nl-be.js\": 278,\n\t\"./nl.js\": 277,\n\t\"./nn\": 279,\n\t\"./nn.js\": 279,\n\t\"./pa-in\": 280,\n\t\"./pa-in.js\": 280,\n\t\"./pl\": 281,\n\t\"./pl.js\": 281,\n\t\"./pt\": 282,\n\t\"./pt-br\": 283,\n\t\"./pt-br.js\": 283,\n\t\"./pt.js\": 282,\n\t\"./ro\": 284,\n\t\"./ro.js\": 284,\n\t\"./ru\": 285,\n\t\"./ru.js\": 285,\n\t\"./sd\": 286,\n\t\"./sd.js\": 286,\n\t\"./se\": 287,\n\t\"./se.js\": 287,\n\t\"./si\": 288,\n\t\"./si.js\": 288,\n\t\"./sk\": 289,\n\t\"./sk.js\": 289,\n\t\"./sl\": 290,\n\t\"./sl.js\": 290,\n\t\"./sq\": 291,\n\t\"./sq.js\": 291,\n\t\"./sr\": 292,\n\t\"./sr-cyrl\": 293,\n\t\"./sr-cyrl.js\": 293,\n\t\"./sr.js\": 292,\n\t\"./ss\": 294,\n\t\"./ss.js\": 294,\n\t\"./sv\": 295,\n\t\"./sv.js\": 295,\n\t\"./sw\": 296,\n\t\"./sw.js\": 296,\n\t\"./ta\": 297,\n\t\"./ta.js\": 297,\n\t\"./te\": 298,\n\t\"./te.js\": 298,\n\t\"./tet\": 299,\n\t\"./tet.js\": 299,\n\t\"./tg\": 300,\n\t\"./tg.js\": 300,\n\t\"./th\": 301,\n\t\"./th.js\": 301,\n\t\"./tl-ph\": 302,\n\t\"./tl-ph.js\": 302,\n\t\"./tlh\": 303,\n\t\"./tlh.js\": 303,\n\t\"./tr\": 304,\n\t\"./tr.js\": 304,\n\t\"./tzl\": 305,\n\t\"./tzl.js\": 305,\n\t\"./tzm\": 306,\n\t\"./tzm-latn\": 307,\n\t\"./tzm-latn.js\": 307,\n\t\"./tzm.js\": 306,\n\t\"./ug-cn\": 308,\n\t\"./ug-cn.js\": 308,\n\t\"./uk\": 309,\n\t\"./uk.js\": 309,\n\t\"./ur\": 310,\n\t\"./ur.js\": 310,\n\t\"./uz\": 311,\n\t\"./uz-latn\": 312,\n\t\"./uz-latn.js\": 312,\n\t\"./uz.js\": 311,\n\t\"./vi\": 313,\n\t\"./vi.js\": 313,\n\t\"./x-pseudo\": 314,\n\t\"./x-pseudo.js\": 314,\n\t\"./yo\": 315,\n\t\"./yo.js\": 315,\n\t\"./zh-cn\": 316,\n\t\"./zh-cn.js\": 316,\n\t\"./zh-hk\": 317,\n\t\"./zh-hk.js\": 317,\n\t\"./zh-tw\": 318,\n\t\"./zh-tw.js\": 318\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 561;","// @flow\n\n\nimport type {HomeState} from \"../store/HomeState\";\nimport {Action} from \"redux\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\n\nexport type LoadHomeStateFinishedAction = Action & {\n  payload: HomeState\n}\n\nexport type LoadHomeStateFailedAction = Action & {\n  error: Error\n}\n\nexport type LoadHomeStateAction = Action | LoadHomeStateFinishedAction | LoadHomeStateFailedAction;\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\"\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\"\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\"\n  }\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const inst = axios.create({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n\n    const response = await inst.request();\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport _ from \"lodash\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = _.get(json, \"data.readDashboard\", []);\n    if(!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboard = data[0];\n\n    const title = _.get(dashboard, \"Title\", \"\");\n    const subtitle = _.get(dashboard, \"Subtitle\", \"\");\n    let pillars = _.get(dashboard, \"Pillars\", []);\n    if(!Array.isArray(pillars)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    pillars = pillars.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: _.get(item, \"Label\", \"\"),\n        disabled: _.get(item, \"Disabled\", true),\n        questionnaireID: _.get(item, \"Questionnaire.0.ID\", \"\"),\n        icon: icon\n      };\n    });\n\n    return {\n      title,\n      subtitle,\n      pillars\n    };\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadHomeStateFailedAction, LoadHomeStateFinishedAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport {Action} from \"redux\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    dispatch(loadingHomeState());\n\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      dispatch(loadedHomeState(homeState));\n    } catch (error) {\n      dispatch(failedHomeState(error));\n      // TODO: maybe dispatch a global error action\n      // TODO: maybe better error alert\n      console.error(error);\n      alert(error.message);\n    }\n  };\n}\n\nexport function loadingHomeState(): Action {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_STARTED\n  };\n}\n\nexport function failedHomeState(error: Error): LoadHomeStateFailedAction {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_FAILED,\n    error: error\n  };\n}\n\nexport function loadedHomeState(homeState: HomeState): LoadHomeStateFinishedAction {\n  return {\n    type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n    payload: homeState\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n  disabled: boolean\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    return (\n      <Link className={`TaskButton ${this.props.classes.join(\" \")}`}\n            to={this.props.link}\n            onClick={(event) => {\n              if(this.props.disabled) {\n                event.preventDefault();\n                alert(\"Coming soon...\");\n              }\n            }}\n      >\n        <div className=\"title\">{this.props.title}</div>\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n    const inst = axios.create({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const response = await inst.request();\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {this.props.homeState.title}\n          </h1>\n          <h2>\n            {this.props.homeState.subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {this.props.homeState.pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n            <TaskButton link=\"/tasks/blah\" classes={[\"mx-1\"]} disabled={true} title=\"Information Classification\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Your Role: </b>\n                <span>{user.role}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.get(inputSchema, \"Required\", false)),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: `${get(jsonObject, \"FirstName\")} ${get(jsonObject, \"Surname\")}`,\n      role: get(jsonObject, \"UserRole\"),\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const returnPackage = {\n      currentIndex: questions.findIndex((question) => question.id === answeredQuestion.id),\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\") {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (returnPackage.currentIndex === questions.length - 1) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: {uuid: string, secureToken?: string}): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      UserRole\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\", \n  QuestionID: \"${questionID}\", \n  AnswerData: \"${answerDataStr}\", \n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const  query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\n\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Commons\n\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-wrapper\">\n        {this.props.showLogoutButton && <LogoutButton/>}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnarie\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} />\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnarie\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} />\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Role: ${submitter.role}`,\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnarie\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\"/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>;\n      </div>\n    )\n      ;\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n  };\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Role:</b> {submitter.role}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, status}) => {\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskName} ({prettifyStatus(status)})\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.securityArchitect)}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.chiefInformationSecurityOfficer)}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {prettifyStatus(approvalStatus.businessOwner)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n} from \"../../actions/questionnarie\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass SummaryContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\"/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleEditButtonClick.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchApproveSubmissionAction(submission.submissionID);\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchDenySubmissionAction(submission.submissionID);\n  }\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(args: {answeredQuestion: Question, secureToken?: string}): ThunkAction {\n  const {answeredQuestion, secureToken} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    try {\n      await TaskDataService.batchUpdateTaskSubmissionData({\n        uuid: getTaskSubmission().uuid,\n        questionIDList: [answeredQuestion.id],\n        answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n        csrfToken: await CSRFTokenService.getCSRFToken(),\n        secureToken: secureToken,\n      });\n    } catch (error) {\n      ErrorUtil.displayError(error);\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    try {\n      await batchUpdateTaskSubmissionData(\n        getTaskSubmission(),\n        _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n        secureToken\n      );\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n\n    if (complete) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result,\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(args: {targetQuestion: Question, secureToken?: string}): ThunkAction {\n  const {targetQuestion, secureToken} = {...args};\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    await batchUpdateTaskSubmissionData(\n      taskSubmission,\n      _.uniq([currentIndex, targetIndex]),\n      secureToken\n    );\n  };\n}\n\nexport function editCompletedTaskSubmission(args: {secureToken?: string} = {}): ThunkAction {\n  const {secureToken} = {...args};\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    try {\n      const {uuid} = await TaskDataService.editTaskSubmission({\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken(),\n        secureToken: secureToken,\n      });\n      await dispatch(loadTaskSubmission({uuid, secureToken}));\n    } catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    UserRole\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\") && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\") &&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterRole,\n    SubmitterEmail,\n    QuestionnaireStatus\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          role: _.toString(_.get(submissionJSON, \"SubmitterRole\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n    const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n      uuid: this.props.uuid,\n      secureToken: this.props.token,\n    });\n\n    this.setState({\n      siteTitle: data.siteTitle,\n      submission: data.submission,\n    });\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      UserRole\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {LoadHomeStateAction} from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: []\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_STARTED:\n      return state;\n    case ActionType.HOME.LOAD_HOME_STATE_FAILED:\n      return state;\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    // TODO: Render task submission for the vendor using secure token\n\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\n\nwindow.addEventListener(\"load\", () => {\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((<BusinessOwnerApp/>), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}