{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Logo.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/Home/risk-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./src/img/icons/edit.svg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Common/RiskResultContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/constants/values.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/ComponentSelection/ControlInfo.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/Common/LikelihoodLegendContainer.js","webpack:///./src/js/utils/Comparators.js","webpack:///./src/js/components/Common/RiskAssessmentMatrixTableContainer.js","webpack:///./src/js/services/SecurityRiskAssessmentTaskDataService.js","webpack:///./src/js/actions/securityRiskAssessment.js","webpack:///./src/js/components/SecurityRiskAssessment/SecurityRiskAssessmentContainer.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/securityRiskAssessmentState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/pdf.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","FETCH_MY_PRODUCT_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","LOAD_SELECTED_COMPONENTS","SRA","LOAD_SECURITY_RISK_ASSESSMENT","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","maxLength","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","componentTarget","questions","parseQuestionsFromJSON","likelihoodJSON","jsonArray","toArray","operator","colour","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","RiskIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","secureToken","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","taskName","taskType","approver","riskResults","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","seletcedComponent","productAspect","controls","control","JiraTicketParser","jiraKey","TaskDataService","args","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","productAspects","taskId","taskJSONObject","components","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","maxlength","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","viewAs","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","alreadySubmittedAlert","buttons","editIcon","pdfIcon","existsUnansweredQuestion","summaryButton","redirectToQuestionnaireSummary","Questionnaire_AnswersPreview","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","PDFUtil_typeof","results","resultObj","rating","riskName","weights","score","table","headerRows","widths","body","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","_x10","_x11","RiskResultContainer","RiskResultContainer_objectSpread","riskResult","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","unfinished","isSRA","isRQ","isInProg","Summary_objectSpread","renderSubmitterInfo","renderTasks","renderApprovals","Common_RiskResultContainer","renderSkipCheckbox","renderButtons","_this2","hasUnfinishedTaskSubmissions","unfinishedTasksAlert","taskNameAndStatus","button","redirectToTaskSubmission","redirectToSecurityRiskAssessment","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","viewAnswersButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchBusinessOwnerApproveSubmissionAction","dispatchApproveSubmissionAction","_this$props$submissio5","dispatchBusinessOwnerDenySubmissionAction","dispatchDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmissionAsBusinessOwner","_x20","_x21","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmissionAsBusinessOwner","_x22","_x23","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref13","_callee10","_ref14","_context10","approveQuestionnaireSubmission","_x16","_x17","_ref15","_callee11","_ref16","_context11","denyQuestionnaireSubmission","_x18","_x19","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","SecurityComponentDataService","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","availableComponents","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","loadSelectedComponents","savedComponent","component","isSaved","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","saveSelectedComponents","componentSelectionState","SecurityComponentID","ProductAspect","TaskSubmissionID","updateTaskSubmissionWithSelectedComponents","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","backButton","editButton","pdfButton","downloadPdf","resultStatus","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentSelectionUtil","collection","LeftBar_LeftBar_classCallCheck","LeftBar_LeftBar_possibleConstructorReturn","LeftBar_LeftBar_getPrototypeOf","selectedProductAspect","LeftBar_LeftBar_objectSpread","removeComponent","addComponent","_this$state","isSelected","isSelectedComponentExist","isDisable","isComponentSaved","LeftBar_LeftBarItem_LeftBarItem","ControlInfo","React","ControlInfo_objectSpread","ComponentInfo","ComponentInfo_objectSpread","childControls","ControlInfo_ControlInfo","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","createJIRATickets","finishWithSelection","saveControls","extraButtons","isStandaloneTask","isGroupbyProductAspect","LeftBar_LeftBar_LeftBar","doescomponentExistForProductAspect","ComponentInfo_ComponentInfo","Fragment","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchSaveLocalControlsAction","dispatchFinishAction","_props","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","LikelihoodLegendContainer","likelihoodThresholds","LikelihoodLegendContainer_objectSpread","likelihoodThreshold","backgroundColor","Comparators","leftoperand","rightoperand","RiskAssessmentMatrixTableContainer","sourceArray","weightedImpactScore","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","likelihood","thresholdValue","likelihoodImpactScore","lte","lt","gt","gte","return","arrayOfRiskControls","sumOfLikelihoodWeights","weight","rawScore","baseImpactScore","sumOfLikelihoodWeightsForRisk","lookupLikelihood","impact","RiskAssessmentMatrixTableContainer_objectSpread","combinedResults","SecurityRiskAssessmentTaskDataService","QuestionnaireSubmission","RiskResultData","RiskAssessmentTaskSubmission","likelihoodRatings","parseLikelihoodJSONObject","loadSecurityRiskAssessment","securityRiskAssessment_objectSpread","fetchSecurityRiskAssessmentTasK","SecurityRiskAssessmentContainer","SecurityRiskAssessmentContainer_objectSpread","securityRiskAssessmentData","Common_RiskAssessmentMatrixTableContainer","Common_LikelihoodLegendContainer","securityRiskAssessmentState","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","search","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","SecurityRiskAssessment_SecurityRiskAssessmentContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","savedComponents","isComponentExist","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","availableComponent","seletedComponent","assign","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","HashRouter","es","App_MainApp","vendorContainer","App_VendorApp"],"mappings":"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AA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"c4272acb6b7f40d73282\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([371,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/2d7ab2e275175116af7444a221be9f74.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","var map = {\n\t\"./af\": 211,\n\t\"./af.js\": 211,\n\t\"./ar\": 212,\n\t\"./ar-dz\": 213,\n\t\"./ar-dz.js\": 213,\n\t\"./ar-kw\": 214,\n\t\"./ar-kw.js\": 214,\n\t\"./ar-ly\": 215,\n\t\"./ar-ly.js\": 215,\n\t\"./ar-ma\": 216,\n\t\"./ar-ma.js\": 216,\n\t\"./ar-sa\": 217,\n\t\"./ar-sa.js\": 217,\n\t\"./ar-tn\": 218,\n\t\"./ar-tn.js\": 218,\n\t\"./ar.js\": 212,\n\t\"./az\": 219,\n\t\"./az.js\": 219,\n\t\"./be\": 220,\n\t\"./be.js\": 220,\n\t\"./bg\": 221,\n\t\"./bg.js\": 221,\n\t\"./bm\": 222,\n\t\"./bm.js\": 222,\n\t\"./bn\": 223,\n\t\"./bn.js\": 223,\n\t\"./bo\": 224,\n\t\"./bo.js\": 224,\n\t\"./br\": 225,\n\t\"./br.js\": 225,\n\t\"./bs\": 226,\n\t\"./bs.js\": 226,\n\t\"./ca\": 227,\n\t\"./ca.js\": 227,\n\t\"./cs\": 228,\n\t\"./cs.js\": 228,\n\t\"./cv\": 229,\n\t\"./cv.js\": 229,\n\t\"./cy\": 230,\n\t\"./cy.js\": 230,\n\t\"./da\": 231,\n\t\"./da.js\": 231,\n\t\"./de\": 232,\n\t\"./de-at\": 233,\n\t\"./de-at.js\": 233,\n\t\"./de-ch\": 234,\n\t\"./de-ch.js\": 234,\n\t\"./de.js\": 232,\n\t\"./dv\": 235,\n\t\"./dv.js\": 235,\n\t\"./el\": 236,\n\t\"./el.js\": 236,\n\t\"./en-SG\": 237,\n\t\"./en-SG.js\": 237,\n\t\"./en-au\": 238,\n\t\"./en-au.js\": 238,\n\t\"./en-ca\": 239,\n\t\"./en-ca.js\": 239,\n\t\"./en-gb\": 240,\n\t\"./en-gb.js\": 240,\n\t\"./en-ie\": 241,\n\t\"./en-ie.js\": 241,\n\t\"./en-il\": 242,\n\t\"./en-il.js\": 242,\n\t\"./en-nz\": 243,\n\t\"./en-nz.js\": 243,\n\t\"./eo\": 244,\n\t\"./eo.js\": 244,\n\t\"./es\": 245,\n\t\"./es-do\": 246,\n\t\"./es-do.js\": 246,\n\t\"./es-us\": 247,\n\t\"./es-us.js\": 247,\n\t\"./es.js\": 245,\n\t\"./et\": 248,\n\t\"./et.js\": 248,\n\t\"./eu\": 249,\n\t\"./eu.js\": 249,\n\t\"./fa\": 250,\n\t\"./fa.js\": 250,\n\t\"./fi\": 251,\n\t\"./fi.js\": 251,\n\t\"./fo\": 252,\n\t\"./fo.js\": 252,\n\t\"./fr\": 253,\n\t\"./fr-ca\": 254,\n\t\"./fr-ca.js\": 254,\n\t\"./fr-ch\": 255,\n\t\"./fr-ch.js\": 255,\n\t\"./fr.js\": 253,\n\t\"./fy\": 256,\n\t\"./fy.js\": 256,\n\t\"./ga\": 257,\n\t\"./ga.js\": 257,\n\t\"./gd\": 258,\n\t\"./gd.js\": 258,\n\t\"./gl\": 259,\n\t\"./gl.js\": 259,\n\t\"./gom-latn\": 260,\n\t\"./gom-latn.js\": 260,\n\t\"./gu\": 261,\n\t\"./gu.js\": 261,\n\t\"./he\": 262,\n\t\"./he.js\": 262,\n\t\"./hi\": 263,\n\t\"./hi.js\": 263,\n\t\"./hr\": 264,\n\t\"./hr.js\": 264,\n\t\"./hu\": 265,\n\t\"./hu.js\": 265,\n\t\"./hy-am\": 266,\n\t\"./hy-am.js\": 266,\n\t\"./id\": 267,\n\t\"./id.js\": 267,\n\t\"./is\": 268,\n\t\"./is.js\": 268,\n\t\"./it\": 269,\n\t\"./it-ch\": 270,\n\t\"./it-ch.js\": 270,\n\t\"./it.js\": 269,\n\t\"./ja\": 271,\n\t\"./ja.js\": 271,\n\t\"./jv\": 272,\n\t\"./jv.js\": 272,\n\t\"./ka\": 273,\n\t\"./ka.js\": 273,\n\t\"./kk\": 274,\n\t\"./kk.js\": 274,\n\t\"./km\": 275,\n\t\"./km.js\": 275,\n\t\"./kn\": 276,\n\t\"./kn.js\": 276,\n\t\"./ko\": 277,\n\t\"./ko.js\": 277,\n\t\"./ku\": 278,\n\t\"./ku.js\": 278,\n\t\"./ky\": 279,\n\t\"./ky.js\": 279,\n\t\"./lb\": 280,\n\t\"./lb.js\": 280,\n\t\"./lo\": 281,\n\t\"./lo.js\": 281,\n\t\"./lt\": 282,\n\t\"./lt.js\": 282,\n\t\"./lv\": 283,\n\t\"./lv.js\": 283,\n\t\"./me\": 284,\n\t\"./me.js\": 284,\n\t\"./mi\": 285,\n\t\"./mi.js\": 285,\n\t\"./mk\": 286,\n\t\"./mk.js\": 286,\n\t\"./ml\": 287,\n\t\"./ml.js\": 287,\n\t\"./mn\": 288,\n\t\"./mn.js\": 288,\n\t\"./mr\": 289,\n\t\"./mr.js\": 289,\n\t\"./ms\": 290,\n\t\"./ms-my\": 291,\n\t\"./ms-my.js\": 291,\n\t\"./ms.js\": 290,\n\t\"./mt\": 292,\n\t\"./mt.js\": 292,\n\t\"./my\": 293,\n\t\"./my.js\": 293,\n\t\"./nb\": 294,\n\t\"./nb.js\": 294,\n\t\"./ne\": 295,\n\t\"./ne.js\": 295,\n\t\"./nl\": 296,\n\t\"./nl-be\": 297,\n\t\"./nl-be.js\": 297,\n\t\"./nl.js\": 296,\n\t\"./nn\": 298,\n\t\"./nn.js\": 298,\n\t\"./pa-in\": 299,\n\t\"./pa-in.js\": 299,\n\t\"./pl\": 300,\n\t\"./pl.js\": 300,\n\t\"./pt\": 301,\n\t\"./pt-br\": 302,\n\t\"./pt-br.js\": 302,\n\t\"./pt.js\": 301,\n\t\"./ro\": 303,\n\t\"./ro.js\": 303,\n\t\"./ru\": 304,\n\t\"./ru.js\": 304,\n\t\"./sd\": 305,\n\t\"./sd.js\": 305,\n\t\"./se\": 306,\n\t\"./se.js\": 306,\n\t\"./si\": 307,\n\t\"./si.js\": 307,\n\t\"./sk\": 308,\n\t\"./sk.js\": 308,\n\t\"./sl\": 309,\n\t\"./sl.js\": 309,\n\t\"./sq\": 310,\n\t\"./sq.js\": 310,\n\t\"./sr\": 311,\n\t\"./sr-cyrl\": 312,\n\t\"./sr-cyrl.js\": 312,\n\t\"./sr.js\": 311,\n\t\"./ss\": 313,\n\t\"./ss.js\": 313,\n\t\"./sv\": 314,\n\t\"./sv.js\": 314,\n\t\"./sw\": 315,\n\t\"./sw.js\": 315,\n\t\"./ta\": 316,\n\t\"./ta.js\": 316,\n\t\"./te\": 317,\n\t\"./te.js\": 317,\n\t\"./tet\": 318,\n\t\"./tet.js\": 318,\n\t\"./tg\": 319,\n\t\"./tg.js\": 319,\n\t\"./th\": 320,\n\t\"./th.js\": 320,\n\t\"./tl-ph\": 321,\n\t\"./tl-ph.js\": 321,\n\t\"./tlh\": 322,\n\t\"./tlh.js\": 322,\n\t\"./tr\": 323,\n\t\"./tr.js\": 323,\n\t\"./tzl\": 324,\n\t\"./tzl.js\": 324,\n\t\"./tzm\": 325,\n\t\"./tzm-latn\": 326,\n\t\"./tzm-latn.js\": 326,\n\t\"./tzm.js\": 325,\n\t\"./ug-cn\": 327,\n\t\"./ug-cn.js\": 327,\n\t\"./uk\": 328,\n\t\"./uk.js\": 328,\n\t\"./ur\": 329,\n\t\"./ur.js\": 329,\n\t\"./uz\": 330,\n\t\"./uz-latn\": 331,\n\t\"./uz-latn.js\": 331,\n\t\"./uz.js\": 330,\n\t\"./vi\": 332,\n\t\"./vi.js\": 332,\n\t\"./x-pseudo\": 333,\n\t\"./x-pseudo.js\": 333,\n\t\"./yo\": 334,\n\t\"./yo.js\": 334,\n\t\"./zh-cn\": 335,\n\t\"./zh-cn.js\": 335,\n\t\"./zh-hk\": 336,\n\t\"./zh-hk.js\": 336,\n\t\"./zh-tw\": 337,\n\t\"./zh-tw.js\": 337\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 601;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type LoadSelectedComponentsAction= {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\",\n    FETCH_MY_PRODUCT_LIST:\"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\",\n    LOAD_SELECTED_COMPONENTS: \"COMPONENTSELECTION/LOAD_SELECTED_COMPONENTS\",\n  },\n  SRA: {\n    LOAD_SECURITY_RISK_ASSESSMENT: \"SRA/LOAD_SECURITY_RISK_ASSESSMENT\",\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/review/${uuid}?token=${token}`;\n      return;\n    }\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToSecurityRiskAssessment(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/#/security-risk-assessment/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/security-risk-assessment/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"product aspects\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            maxLength: Number.parseInt(_.toString(_.get(inputSchema, \"MaxLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\nimport type {LikelihoodThreshold} from \"../types/Task\";\nimport toArray from \"lodash/toArray\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n    const componentTarget = toString(get(jsonObject, \"ComponentTarget\", \"\"));\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, componentTarget, questions};\n  }\n\n  static parseLikelihoodJSONObject(likelihoodJSON: string | Object): LikelihoodThreshold {\n    const jsonArray = (typeof likelihoodJSON === \"string\" ? JSON.parse(likelihoodJSON) : likelihoodJSON);\n\n    if (jsonArray) {\n      return toArray(jsonArray).map((jsonObject) => {\n        return {\n          name: toString(get(jsonObject, \"Name\")),\n          value: toString(get(jsonObject, \"Value\")),\n          operator: toString(get(jsonObject, \"Operator\")),\n          colour: toString(get(jsonObject, \"Colour\"))\n        }\n      });\n    }\n\n    return [];\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\nimport RiskIcon from \"../../img/Home/risk-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n      ComponentTarget\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = PocIcon;\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n        case \"risk_questionnaire\":\n          icon = RiskIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={'pillar_'+(index+1)}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task, index) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = `/component-selection/standalone/${task.id}?componentTarget=${task.componentTarget}`;\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name} key={'standalone_task_'+(index+1)}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string, secureToken:string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\", SecureToken: \"${secureToken}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    RiskResultData,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: _.has(submissionJSON, 'RiskResultData') ? JSON.parse(_.get(submissionJSON, \"RiskResultData\", \"[]\")) : \"[]\"\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n\n  static async approveQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmissionAsBusinessOwner(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      let seletcedComponent = SecurityComponentParser.parseFromJSONObject(get(jsonObject, \"SecurityComponent\"));\n      seletcedComponent.productAspect = toString(get(jsonObject, \"ProductAspect\"));\n      return seletcedComponent;\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n      controls: (get(jsonObject, \"Controls\") || []).map((control) => {\n        return {\n          id: toString(get(control, \"ID\")),\n          name: toString(get(control, \"Name\")),\n          description: toString(get(control, \"Description\"))\n        }\n      })\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      ProductAspect\n      SecurityComponent {\n        ID\n        Name\n        Description\n        Controls {\n          ID\n          Name\n          Description\n        }\n      }\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n    RiskResultData\n    ComponentTarget\n    ProductAspects\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n      riskResults: _.has(submissionJSONObject, 'RiskResultData') ? JSON.parse(_.get(submissionJSONObject, \"RiskResultData\", \"[]\")) : \"[]\",\n      productAspects:  _.has(submissionJSONObject, 'ProductAspects') ? JSON.parse(_.get(submissionJSONObject, \"ProductAspects\", [])) : [],\n      componentTarget: toString(get(submissionJSONObject, \"ComponentTarget\", \"\"))\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      components: Array,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, components, jiraKey} = {...args};\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n Components: \"${window.btoa(JSON.stringify(components))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\n// load questionanqire submissions\n// this is same for SA, User, BO, CISO and normal user\nexport function loadQuestionnaireSubmissionState(submissionHash: string, secureToken: string): ThunkAction {\n  if(typeof(secureToken) == \"undefined\") {\n    secureToken = '';\n  }\n\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash, secureToken);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\n// As a User submit the questionnaire\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// As a user submit the  Questionnaire submission for approval\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\n// Assign to SA\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a SA / CISO\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a SA / CISO\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Approve the Questionnaire Submission as a BO\nexport function approveQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Deny the Questionnaire Submission as a BO\nexport function denyQuestionnaireSubmissionAsBusinessOwner(submissionID: string, secureToken: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmissionAsBusinessOwner({submissionID, csrfToken, secureToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid, secureToken));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// Edit answers of the Questionnaire Submission as a User\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\n// load all the Questionnaire Submissions of the logged in user\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list of pending approval list\n// for SA, CISO and Business owner\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\n// Questionnaire Submissions list for the business owner\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      // set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n\n          if (type === \"product aspects\" && value &&\n            !/^[0-9a-zA-Z\\s\\n]+$/i.test(value)) {\n            errors[id] = \"- Please enter alpha-numeric characters only.\";\n            return;\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue,\n                  maxLength\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder} maxlength={maxLength > 0 ? maxLength : 4096}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\" || type === \"product aspects\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea and \"product aspects\"\n        if (input.type === \"textarea\" || input.type === \"product aspects\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = dataArr.join(', ');\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport URLUtil from \"../../utils/URLUtil\";\n\ntype Props = {\n  siteTitle: string,\n  secureToken: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      viewAs,\n      secureToken,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    const alreadySubmittedAlert = (\n      <div className=\"alert alert-success text-center\">\n        This questionnaire has already been submitted.\n      </div>\n    )\n\n    const buttons = (\n      <div className=\"buttons\">\n      <LightButton title=\"EDIT ANSWERS\"\n                   iconImage={editIcon}\n                   classes={[\"button\"]}\n                   onClick={handleEditAnswerButtonClick}/>\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n      <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                  classes={[\"button\"]}\n                  disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                  onClick={handleSubmitButtonClick}/>\n      </div>\n    );\n\n    const summaryButton = (\n      <div className=\"buttons\">\n      <LightButton title=\"BACK TO SUMMARY\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireSummary(submission.submissionUUID, secureToken)}/>\n      </div>\n    );\n\n    return (\n      <div className=\"Review\">\n        {submission.status !== \"in_progress\" && alreadySubmittedAlert}\n        <AnswersPreview questions={submission.questions}/>\n        {(viewAs === 'submitter' && (submission.status === \"in_progress\" || submission.status === \"submitted\")) && buttons}\n        {(viewAs !== 'submitter') && summaryButton}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle, result, riskResults} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea or \"product aspects\"\n          if (input.type === \"textarea\" || input.type === \"product aspects\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = dataArr.join(', ');\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    if(typeof riskResults === 'object' && riskResults.length > 0) {\n      let results = [\n        [\n          { text: 'Risk Name', bold: true, alignment: 'center' },\n          { text: 'Weights', bold: true, alignment: 'center' },\n          { text: 'Score', bold: true, alignment: 'center' },\n          { text: 'Rating', bold: true, alignment: 'center' },\n        ]\n      ];\n      riskResults.forEach(function(result, i){\n        let resultObj = { text: result.rating, alignment: 'center', color: '#'+result.colour, bold: true };\n\n        if (result.rating == 'Unknown') {\n          resultObj = { text: 'Unknown', alignment: 'center', color: '#000000', bold: true };\n        }\n\n\n        results.push([\n          { text: result.riskName },\n          result.weights,\n          result.score,\n          resultObj\n        ])\n      })\n      content.push({\n        table: {\n          headerRows: 1,\n          //actual rendered width of footer and header images\n          widths: [237, 75, 75, 75],\n          body: results\n        },\n        width: 500,\n        margin: [0, 0, 0, defaultFontSize]\n      });\n    }\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {\n      title,\n      siteTitle,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n          viewAs={viewAs}\n          submission={submission}\n          secureToken={secureToken}\n          handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n          handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n          handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {RiskResult} from \"../../types/Questionnaire\";\n\ntype Props = {\n  riskResults: Array<RiskResult> | null,\n};\n\nclass RiskResultContainer extends Component<Props> {\n  render() {\n    const {riskResults} = {...this.props};\n\n    if (!riskResults || riskResults.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"risks\">\n        <h3>Risk Result</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_table_header\">\n                <th>Risk Name</th>\n                <th>Weights</th>\n                <th>Score</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {riskResults.map((riskResult, index): RiskResult => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {riskResult.riskName}\n                    </td>\n                    <td>\n                      {riskResult.weights}\n                    </td>\n                    <td>\n                      {riskResult.score}\n                    </td>\n                    <td style={{color:'#' + riskResult.colour}}>\n                      {riskResult.rating}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskResultContainer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\nimport {DEFAULT_SRA_UNFINISHED_TASKS_MESSAGE} from \"../../constants/values\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  hasUnfinishedTaskSubmissions(submission)\n  {\n    let taskSubmissions = submission.taskSubmissions,\n      unfinished = false;\n\n    taskSubmissions.forEach((submission, index) => {\n      let isSRA = (submission.taskType === 'security risk assessment'),\n        isRQ = (submission.taskType === 'risk questionnaire'),\n        isInProg = (submission.status === 'start' || submission.status === \"in_progress\");\n\n        if(!isSRA && isRQ && isInProg) {\n          unfinished = true;\n        }\n\n    });\n\n    return unfinished;\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        <RiskResultContainer riskResults={submission.riskResults}/>\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    const unfinished = this.hasUnfinishedTaskSubmissions(submission),\n      unfinishedTasksAlert = (\n        <div className=\"alert alert-warning\">\n          {DEFAULT_SRA_UNFINISHED_TASKS_MESSAGE}\n        </div>\n      );\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {unfinished ? unfinishedTasksAlert : null}\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n            if(taskType === 'security risk assessment') {\n              if (unfinished === false) {\n                taskNameAndStatus = taskName;\n              }\n            }\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          const button = (\n            <button className={\"btn btn-link\"} onClick={(event: Event) => {\n              if (taskType === \"selection\") {\n                URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                return;\n              }\n              if (taskType === \"security risk assessment\") {\n                URLUtil.redirectToSecurityRiskAssessment(uuid, token);\n                return;\n              }\n              URLUtil.redirectToTaskSubmission(uuid, token);\n            }}>\n              {taskNameAndStatus}\n            </button>\n          );\n\n          return (\n            <div key={uuid}>\n              {unfinished && taskType === 'security risk assessment' ? null : button}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      user,\n      viewAs,\n      token,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    const viewAnswersButton = user ? (\n      <LightButton title=\"VIEW ANSWERS\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireReview(submission.submissionUUID, token)}\n      />\n    ) : '';\n\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {viewAnswersButton}\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {viewAnswersButton}\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Required\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Required') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\n//this is the highest possible threshold score on the security risk assessment matrix\nexport const DEFAULT_SRA_MATRIX_THRESHOLD_SCORE = 100;\nexport const DEFAULT_SRA_UNFINISHED_TASKS_MESSAGE = 'Please complete all tasks to see the Security Risk Assessment';\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionAsBusinessOwner,\n  denyQuestionnaireSubmissionAsBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    // load the Submission data on the summary screen\n    dispatchLoadSubmissionAction(submissionHash: string, secureToken: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash, secureToken));\n    },\n\n    // as a BO approve/ deny the submission\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(approveQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string, secureToken: string) {\n      dispatch(denyQuestionnaireSubmissionAsBusinessOwner(submissionID, secureToken));\n    },\n\n    // user can edit answers and submit the questionnaire for approval\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n\n    // as a SA and ciso approve/ deny the submission\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n\n    // As a SA assign the submission to cureent logged in user\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string,\n  secureToken: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string, secureToken: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction, secureToken} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash, secureToken);\n  }\n\n  render() {\n    const {secureToken} = {...this.props};\n    const {location, title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an businessOwner approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n                 token={secureToken}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    let riskResults;\n    if(submission && submission.riskResults) {\n      riskResults = submission.riskResults;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n      riskResults: riskResults ? riskResults : [],\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {secureToken} = {...this.props};\n    const {\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID, secureToken);\n    } else if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\"\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n    Controls {\n        ID\n        Name\n        Description\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction,\n  LoadSelectedComponentsAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string, productAspect: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: {\"id\": id, \"productAspect\": productAspect}\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string, productAspect: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: {\"id\": id, \"productAspect\": productAspect}\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}\n\nexport function loadSelectedComponents(taskSubmission): ThunkAction {\n  const selectedComponents = taskSubmission.selectedComponents;\n\n  const savedComponent = selectedComponents.map((component) => {\n    component.isSaved = true;\n    return component;\n  });\n\n  return async (dispatch) => {\n    const action: LoadSelectedComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.LOAD_SELECTED_COMPONENTS,\n      payload: savedComponent\n    };\n    await dispatch(action);\n  };\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction,\n  MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport {loadSelectedComponents} from \"./componentSelection\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string, type?: string}): ThunkAction {\n  const {uuid, secureToken, type} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n\n      await dispatch(action);\n\n      if (type === \"componentSelection\") {\n        await dispatch(loadSelectedComponents(payload));\n      }\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\n/**\n * Deals to both \"JIRA Cloud\" (remote) and SDLT (local) component submissions.\n */\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const components = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return {\n        SecurityComponentID : component.id,\n        ProductAspect: component.productAspect,\n        TaskSubmissionID: taskSubmission.id\n      }\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        components,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean,\n    type?: string,\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork, type} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n\n        if (type === \"componentSelection\") {\n          await dispatch(loadSelectedComponents(taskSubmission));\n        }\n\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport RiskResultContainer from \"../Common/RiskResultContainer\";\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean,\n  secureToken: string\n};\n\nclass TaskSubmission extends Component<Props> {\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs,\n      secureToken\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const riskResult = taskSubmission.riskResults && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <RiskResultContainer riskResults={taskSubmission.riskResults}/>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n        {riskResult}\n        <div className=\"buttons\">\n          {editButton}\n          {pdfButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle,\n      currentUser\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n      riskResults: taskSubmission.riskResults,\n    });\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken:string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteTitle={siteTitle}\n          secureToken={secureToken}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteTitle={siteTitle}\n          currentUser={currentUser}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExist(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n\n  static isSelectedComponentExist (id: string, productAspect: string, collection: Array<SecurityComponent>): boolean {\n      if (productAspect !== \"\") {\n        return collection.filter((component) => component.id === id && component.productAspect === productAspect).length > 0;\n      }\n      return collection.filter((component) => component.id === id).length > 0;\n  }\n\n  static isComponentSaved(id: string, productAspect: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id && component.productAspect === productAspect && component.isSaved).length > 0;\n  }\n\n  static doescomponentExistForProductAspect (productAspect: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.productAspect === productAspect).length > 0;\n\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\nimport toString from \"lodash/toString\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  title: string,\n  componentTarget: string,\n};\n\ntype State = {\n  filter: string,\n  selectedProductAspect: string,\n};\n\nexport default class LeftBar extends Component<Props> {\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      selectedProductAspect: props.productAspects && props.productAspects.length ? props.productAspects[0] : ''\n    };\n  }\n  handleChange(event) {\n    alert(event.target.value);\n  }\n  render() {\n    const {\n      title,\n      availableComponents,\n      selectedComponents,\n      removeComponent,\n      addComponent,\n      productAspects,\n      componentTarget\n    } = {...this.props};\n\n    const {filter, selectedProductAspect} = {...this.state};\n\n    return (\n      <div className=\"LeftBar\">\n        {productAspects && productAspects.length > 0 && (\n          <div className=\"product-aspect\">\n            <label>\n              <span className=\"product-aspect-label\">Please select a Product Aspect:</span>\n              <select\n                className=\"custom-select custom-select-sm\"\n                onChange={(event) => {\n                  const value = toString(event.target.value).trim();\n                  this.setState({selectedProductAspect: value});\n                }}\n                value={selectedProductAspect}>\n                {\n                  productAspects.map((productAspect, index) => {\n                    return <option key={index} value={productAspect}>{productAspect}</option>;\n                  })\n                }\n              </select>\n            </label>\n          </div>\n        )}\n\n        <div className=\"title\">{title}</div>\n        <div className=\"search\">\n          <i className=\"fas fa-search\"/>\n          <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n            const value = toString(event.target.value).trim();\n            this.setState({filter: value});\n          }}/>\n        </div>\n        <div className=\"items\">\n          {availableComponents\n            .filter((component) => {\n              if (!filter) {\n                return true;\n              }\n              return component.name.includes(filter);\n            })\n            .map((component) => {\n              const isSelected = ComponentSelectionUtil.isSelectedComponentExist(component.id, selectedProductAspect, selectedComponents);\n              const isDisable = ComponentSelectionUtil.isComponentSaved(component.id, selectedProductAspect, selectedComponents, componentTarget)\n                && componentTarget == \"JIRA Cloud\";\n\n              return (\n                <LeftBarItem\n                  title={component.name}\n                  iconType={isSelected ? \"success\" : \"pending\"}\n                  disabled={isDisable}\n                  key={component.id}\n                  onItemClick={() => {\n                    // Toggle selection\n                    if (isSelected) {\n                      removeComponent(component.id, selectedProductAspect);\n                    } else {\n                      addComponent(component.id, selectedProductAspect);\n                    }\n                  }}/>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string\n};\n\nexport default class ControlInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description} = {...this.props};\n\n    return (\n      <div className=\"ControlInfo\">\n        <h5>{name}</h5>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from \"react\";\nimport type {SecurityControl} from \"../../types/SecurityControl\";\nimport ControlInfo from \"./ControlInfo\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void,\n  childControls: Array<SecurityControl>,\n  showControls: boolean,\n  isDisable: boolean,\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent, childControls, isDisable} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id+name}>\n        <h3>\n          {!isDisable && (<button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n          <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>)}\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n\n        {childControls && childControls.length > 0 && (<div className=\"control-heading\">Controls</div>)}\n\n        {childControls && childControls.length > 0 && (\n          childControls.map((control, index) => {\n              return (\n                <ControlInfo\n                  key={index}\n                  id={control.id}\n                  name={control.name}\n                  description={control.description}\n                />\n              );\n            })\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  componentTarget: taskSubmission.ComponentTarget,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  saveControls: () => void,\n  extraButtons?: *,\n  isStandaloneTask: boolean,\n  productAspects: Array<*>\n};\n\ntype State = {\n  jiraKey: string\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      saveControls,\n      extraButtons,\n      componentTarget,\n      productAspects,\n      isStandaloneTask\n    } = {...this.props};\n    const {jiraKey} = {...this.state};\n    const isGroupbyProductAspect = productAspects && productAspects.length > 0 && selectedComponents.length > 0;\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n\n          <LeftBar\n            selectedComponents={selectedComponents}\n            availableComponents={availableComponents}\n            title={\"Available Components\"}\n            removeComponent={removeComponent}\n            addComponent={addComponent}\n            productAspects={productAspects}\n            componentTarget={componentTarget}\n          >\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n            <div className=\"selected-components\">\n              {isGroupbyProductAspect > 0 && productAspects.map ((productAspect, index) => {\n                return (\n                  <div key={index}>\n                    {ComponentSelectionUtil.doescomponentExistForProductAspect(productAspect, selectedComponents) &&\n                      <h4 key={index}>{productAspect}</h4>\n                    }\n                    {selectedComponents.map((component, index) => {\n                      const isDisable = component.hasOwnProperty('isSaved') && component.isSaved && componentTarget == \"JIRA Cloud\";\n                      if (component.productAspect === productAspect) {\n                        return (\n                          <ComponentInfo\n                            key={component.id + (component.productAspect ? `_${component.productAspect}`: \"\")}\n                            id={component.id}\n                            name={component.name}\n                            description={component.description}\n                            removeComponent={() => {\n                              removeComponent(component.id, component.productAspect);\n                            }}\n                            childControls={component.controls}\n                            isDisable={isDisable}\n                          />\n                        );\n                      }\n                    })}\n                  </div>\n                );\n              })}\n\n              {(productAspects === undefined || productAspects === '') && selectedComponents.map((component, index) => {\n                const isDisable = component.hasOwnProperty('isSaved') && component.isSaved && componentTarget == \"JIRA Cloud\";\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name }\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id, component.productAspect);\n                    }}\n                    childControls={component.controls}\n                    isDisable={isDisable}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && componentTarget === \"JIRA Cloud\" && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              {componentTarget === \"Local\" && !isStandaloneTask && (\n                <LightButton title=\"SAVE CONTROLS\" classes={[\"mr-3\"]} onClick={() => {\n                  saveControls();\n                }}/>\n              )}\n              <LightButton title=\"COMPLETE WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  buttons?: *,\n  componentTarget: string,\n  productAspects: Array<*>\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, buttons, componentTarget, productAspects} = {...this.props};\n    const isGroupbyProductAspect = productAspects && productAspects.length > 0 && selectedComponents.length > 0;\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          {isGroupbyProductAspect > 0 && productAspects.map ((productAspect, index) => {\n            return (\n              <ul key={index}>\n                {ComponentSelectionUtil.doescomponentExistForProductAspect(productAspect, selectedComponents) &&\n                  <h5 key={index}>{productAspect}</h5>\n                }\n                {selectedComponents.map((component, index) => {\n                  if (component.productAspect === productAspect) {\n                    return (\n                      <li key={component.id + (productAspect ? `_${productAspect}`: \"\")}>\n                        {component.name + (productAspect ? ` - ${productAspect}`: \"\")}\n                      </li>\n                    );\n                  }\n                })}\n              </ul>\n            );\n          })}\n          <ul>\n            {(productAspects === undefined || productAspects === '') && selectedComponents.map((component: SecurityComponent) => {\n              const productAspect = component.productAspect ? `${component.productAspect}`: \"\";\n\n              return (\n                <li key={component.id + (productAspect ? `_${productAspect}`: \"\")}>\n                  {component.name + (productAspect ? ` - ${productAspect}`: \"\")}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        {componentTarget === \"JIRA Cloud\" && (\n          <div className=\"section\">\n            <h4>Created Jira Tickets</h4>\n            <ul>\n              {jiraTickets.map((ticket: JiraTicket) => {\n                return (\n                  <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"buttons\">\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype OwnProps = {\n  taskId: string,\n  componentTarget: string,\n}\n\ntype ReduxProps = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets,\n      componentTarget\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            componentTarget={componentTarget}\n            isStandaloneTask={true}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent,\n  loadSelectedComponents,\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {\n  completeTaskSubmission,\n  loadTaskSubmission,\n  saveSelectedComponents,\n  editCompletedTaskSubmission\n} from \"../../actions/task\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\n\ntype OwnProps = {\n  uuid: string,\n  secureToken:string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchSaveLocalControlsAction?: () => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n  dispatchEditAnswersAction?: () => void,\n  dispatchLoadSelectedComponents?: (selectedComponents: Array<SecurityComponent>) => void\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid, secureToken, type: \"componentSelection\"}));\n    },\n    dispatchAddComponentAction(id: string, productAspect: string) {\n      dispatch(addSelectedComponent(id, productAspect));\n    },\n    dispatchRemoveComponentAction(id: string, productAspect: string) {\n      dispatch(removeSelectedComponent(id, productAspect));\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchSaveLocalControlsAction() {\n      dispatch(saveSelectedComponents(\"\"));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({type: \"componentSelection\"}));\n    }\n  };\n};\n\nclass ComponentSelectionContainer extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      secureToken,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchSaveLocalControlsAction,\n      dispatchFinishAction,\n      dispatchEditAnswersAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"start\":\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            componentTarget={taskSubmission.componentTarget}\n            productAspects={taskSubmission.productAspects}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            saveControls={() => {\n              dispatchSaveLocalControlsAction();\n            }}\n            removeComponent={(id, productAspect) => {\n              dispatchRemoveComponentAction(id, productAspect);\n            }}\n            addComponent={(id, productAspect) => {\n              dispatchAddComponentAction(id, productAspect);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n            componentTarget={taskSubmission.componentTarget}\n            productAspects={taskSubmission.productAspects}\n            buttons={[(\n              <div key=\"component-selection-review-button-container\">\n                <LightButton\n                  title={\"EDIT CONTROLS\"}\n                  onClick={dispatchEditAnswersAction}\n                  classes={[\"button\"]}\n                  iconImage={editIcon}\n                />\n                <DarkButton\n                  title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                  onClick={() => {\n                    URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, secureToken);\n                  }}\n                  classes={[\"button\"]}\n                />\n              </div>\n            )]}\n          />\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle} username={currentUser.name}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    myProductList: state.questionnaireSubmissionListState.myProductList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteTitle} username={currentUser.name} />\n        {list(myProductList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\nimport React, {Component} from \"react\";\nimport type {LikelihoodThreshold} from \"../../types/Task\";\n\ntype Props = {\n  LikelihoodThresholds: Array<LikelihoodThreshold> | null,\n};\n\nclass LikelihoodLegendContainer extends Component<Props> {\n  render() {\n    const {likelihoodThresholds} = {...this.props};\n\n    if (likelihoodThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"LikelihoodLegend\">\n        <h3>Likelihood Legend</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"likelihood_legend_header\">\n                <th>Threshold</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {likelihoodThresholds.map((likelihoodThreshold, index): Array<LikelihoodThreshold> => {\n                return (\n                  <tr key={index+1}>\n                    <td>\n                      {likelihoodThreshold.operator + likelihoodThreshold.value}\n                    </td>\n                    <td style={{backgroundColor:'#' + likelihoodThreshold.colour}}>\n                      {likelihoodThreshold.name}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LikelihoodLegendContainer;\n","// @flow\n\n/**\n * Utility class for comparing two numbers based on an operator\n */\nexport default class Comparators {\n  /**\n   * Comparator for \"greater than > \" operator\n   * @param {*} leftoperand number\n   * @param {*} rightoperand number\n   * @return boolean\n   */\n  static gt(leftoperand, rightoperand) {\n    return leftoperand > rightoperand;\n  }\n\n  /**\n   * Comparator for \"greater than or equal to >= \" operator\n   * @param {*} leftoperand number\n   * @param {*} rightoperand number\n   * @return boolean\n   */\n  static gte(leftoperand, rightoperand) {\n    return leftoperand >= rightoperand;\n  }\n\n  /**\n   * Comparator for \"less than < \" operator\n   * @param {*} leftoperand number\n   * @param {*} rightoperand number\n   * @return boolean\n   */\n  static lt(leftoperand, rightoperand) {\n    return leftoperand < rightoperand;\n  }\n\n  /**\n   * Comparator for \"less than or equal to <= \" operator\n   * @param {*} leftoperand number\n   * @param {*} rightoperand number\n   * @return boolean\n   */\n  static lte(leftoperand, rightoperand) {\n    return leftoperand <= rightoperand;\n  }\n}\n","// @flow\nimport React, {Component} from \"react\";\nimport type {LikelihoodThreshold} from \"../../types/Task\";\nimport {DEFAULT_SRA_MATRIX_THRESHOLD_SCORE} from \"../../constants/values\";\nimport Comparators from \"../../utils/Comparators\";\n\ntype Props = {\n  RiskResults: Array<RiskResult> | null,\n  LikelihoodThresholds: Array<LikelihoodThreshold> | null,\n};\n\nclass RiskAssessmentMatrixTableContainer extends Component<Props> {\n\n  /**\n   * Given an array of likelihoods and a base impact score, return the\n   * nearest corresponding likelihood object that meets the threshold.\n   * This depends entirely on the sorted order of thresholds defined in the CMS\n   * @param {*} sourceArray this is an array of object (likelihoods) obtained\n   * from the CMS. It contains {name: 'xxx', value: '100', colour: 'edaaed'}\n   * @param {*} score depends on usage: it might be the base impact score\n   * obtained directly from the risk results, or it is a sum of weights\n   * obtained from the selected controls.\n   * @return object\n   */\n  lookupLikelihood (sourceArray, weightedImpactScore) {\n    let output = {};\n    // the use of `for ( let i of array)` is intentional. The loop needs to be\n    // exited prematurely when the first threshold condition is met.\n    // JavaScript's native array iterator methods won't do this.\n    for (let likelihood of sourceArray) {\n      let thresholdValue = +likelihood.value,\n        likelihoodImpactScore = parseInt(weightedImpactScore);\n      switch(likelihood.operator) {\n        case '<=':\n          if(Comparators.lte(likelihoodImpactScore, thresholdValue)) {\n            return likelihood;\n          };\n          break;\n        case '<':\n          if(Comparators.lt(likelihoodImpactScore, thresholdValue)) {\n            return likelihood;\n          };\n          break;\n        case '>':\n          if(Comparators.gt(likelihoodImpactScore, thresholdValue)) {\n            return likelihood;\n          };\n          break;\n        case '>=':\n          if(Comparators.gte(likelihoodImpactScore, thresholdValue)) {\n            return likelihood;\n          };\n          break;\n      }\n\n    }\n\n    return output;\n  }\n\n  /**\n   * Sum of Likelihood Weights for this Risk\n   * TODO: sum will be 0 until an array of controls with weights is present\n   * @param {*} arrayOfRiskControls this is expected to be an array of\n   * SecurityControl objects with a value called \"weight\"\n   * @return number\n   */\n  sumOfLikelihoodWeightsForRisk(arrayOfRiskControls) {\n    let sumOfLikelihoodWeights = 0;\n    arrayOfRiskControls.map((control, index) => {\n      sumOfLikelihoodWeights += parseInt(control.weight);\n    });\n\n    return sumOfLikelihoodWeights;\n\n  }\n\n  /**\n   * Normalise calculated risk score from a float to an integer\n   * This truncates the float from the decimal point - it does not do any\n   * rounding.\n   * @param {*} rawScore calculated base impact score, may contain decimals\n   * @return number\n   */\n  baseImpactScore(rawScore) {\n    return parseInt(rawScore);\n  }\n\n  /**\n   * Augment the risk results array with additional values\n   * @param {*} riskResults an array of RiskResults objects\n   * @param {*} likelihoodThresholds an array of LikelihoodThreshold objects\n   * @return array of RiskResult objects, with calculated scores embedded in\n   * each object\n   */\n  combinedResults (riskResults, likelihoodThresholds) {\n    riskResults.map((r, i) => {\n      riskResults[i].baseImpactScore = this.baseImpactScore(r.score);\n      riskResults[i].sumOfLikelihoodWeightsForRisk = this.sumOfLikelihoodWeightsForRisk(\n        [] //TODO: array of controls expected\n      );\n      riskResults[i].likelihood = this.lookupLikelihood(\n        likelihoodThresholds,\n        DEFAULT_SRA_MATRIX_THRESHOLD_SCORE - riskResults[i].sumOfLikelihoodWeightsForRisk\n      );\n      riskResults[i].impact = this.lookupLikelihood(\n        likelihoodThresholds,\n        riskResults[i].baseImpactScore\n      );\n    });\n    return riskResults;\n  }\n\n  /**\n   * Render the security risk assessment matrix as an HTML table\n   */\n  render() {\n    const {riskResults, likelihoodThresholds} = {...this.props};\n    const combinedResults = this.combinedResults(riskResults, likelihoodThresholds);\n\n    if (likelihoodThresholds.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"RiskMatrix\">\n        <h3>Your risk assessment results</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_matrix_legend_header\">\n                <th>Risk</th>\n                <th>Current Controls</th>\n                <th>Current Likelihood</th>\n                <th>Current Impact</th>\n                <th>Current Risk Rating</th>\n                <th>Recommended Treatments</th>\n              </tr>\n            </thead>\n            <tbody>\n              {combinedResults.map((riskResult, index): Array<RiskResult> => {\n                return (\n                  <tr key={index+1}>\n                    <td> {riskResult.riskName} {riskResult.baseImpactScore ? ' (' + riskResult.baseImpactScore + ')' : '' } </td>\n                    <td>  </td>\n                    <td style={{color: '#'+riskResult.likelihood.colour}}>  {riskResult.likelihood.name ? riskResult.likelihood.name + ' (' + riskResult.likelihood.value + ')' : ''} </td>\n                    <td style={{color: '#'+riskResult.impact.colour}}>  {riskResult.impact.name ? riskResult.impact.name + ' (' + riskResult.baseImpactScore + ')' : ''} </td>\n                    <td style={{backgroundColor: '#'+riskResult.colour}}> {riskResult.rating} </td>\n                    <td>  </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RiskAssessmentMatrixTableContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class SecurityRiskAssessmentTaskDataService {\n\n  static async fetchSecurityRiskAssessmentTasK(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    QuestionnaireSubmission {\n      UUID\n      RiskResultData\n    }\n    LikelihoodRatings\n    RiskAssessmentTaskSubmission\n\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let riskResults = submissionJSONObject.QuestionnaireSubmission.RiskResultData\n    if(submissionJSONObject.RiskAssessmentTaskSubmission) {\n      riskResults = submissionJSONObject.RiskAssessmentTaskSubmission;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      likelihoodRatings: TaskParser.parseLikelihoodJSONObject(get(submissionJSONObject, \"LikelihoodRatings\")),\n\n      riskResults: JSON.parse(riskResults)\n    };\n\n    return data;\n  }\n}\n","import {ThunkAction} from \"redux-thunk\";\nimport ActionType from \"./ActionType\";\nimport SecurityRiskAssessmentTaskDataService from \"../services/SecurityRiskAssessmentTaskDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadSecurityRiskAssessment(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await SecurityRiskAssessmentTaskDataService.fetchSecurityRiskAssessmentTasK({\n        uuid,\n        secureToken\n      });\n\n      const action = {\n        type: ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT,\n        payload,\n      };\n\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport LikelihoodLegendContainer from \"../Common/LikelihoodLegendContainer\";\nimport RiskAssessmentMatrixTableContainer from \"../Common/RiskAssessmentMatrixTableContainer\";\nimport type {User} from \"../../types/User\";\nimport {\n  loadSecurityRiskAssessment\n} from \"../../actions/securityRiskAssessment\";\nimport type {SecurityRiskAssessment} from \"../../types/Task\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    securityRiskAssessmentData: state.securityRiskAssessmentState.securityRiskAssessmentData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string, secureToken: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadSecurityRiskAssessment({uuid, secureToken}));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  secureToken: string,\n  siteTitle?: string,\n  currentUser?: User | null,\n  securityRiskAssessmentData?: SecurityRiskAssessment | null,\n  dispatchLoadDataAction?: (uuid: string, secureToken: string) => void,\n};\n\nclass SecurityRiskAssessmentContainer extends Component<Props> {\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction, secureToken} = {...this.props};\n    dispatchLoadDataAction(uuid, secureToken);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      securityRiskAssessmentData,\n      secureToken\n    } = {...this.props};\n\n    if (!currentUser || !siteTitle || !securityRiskAssessmentData) {\n      return null;\n    }\n\n    const backButton = (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(securityRiskAssessmentData.questionnaireSubmissionUUID, secureToken);\n        }}\n      />\n    );\n\n    return (\n      <div className=\"SecurityRiskAssessmentContainer\">\n        <Header title={securityRiskAssessmentData.taskName} subtitle={siteTitle} username={currentUser.name}/>\n\n        <div className=\"SecurityRiskAssessmentResult\">\n          <RiskAssessmentMatrixTableContainer\n            riskResults={securityRiskAssessmentData.riskResults}\n            likelihoodThresholds={securityRiskAssessmentData.likelihoodRatings} />\n\n          <LikelihoodLegendContainer\n            likelihoodThresholds={securityRiskAssessmentData.likelihoodRatings} />\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SecurityRiskAssessmentContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\nimport SecurityRiskAssessmentContainer from \"../SecurityRiskAssessment/SecurityRiskAssessmentContainer.js\"\nimport {parse} from \"query-string\";\n\nclass MainApp extends Component<*> {\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n            {({match, location}) => {\n              let secureToken = '';\n              if (location.search) {\n                const queryString = parse(location.search);\n                secureToken = queryString.token;\n              }\n              return (\n                <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone/:taskId'>\n              {({match, location}) => {\n                let componentTarget = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  componentTarget = queryString.componentTarget;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionStandaloneContainer\n                    taskId={match.params.taskId}\n                    componentTarget={componentTarget}\n                    />\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/security-risk-assessment/submission/:uuid'>\n              {({match, location}) => {\n                let secureToken = '';\n                if (location.search) {\n                  const queryString = parse(location.search);\n                  secureToken = queryString.token;\n                }\n                return (\n                  <div className=\"gray-bg\">\n                    <SecurityRiskAssessmentContainer uuid={match.params.uuid} secureToken={secureToken}/>\n                  </div>\n                );\n              }}\n            </Route>\n\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction,\n  LoadSelectedComponentsAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  savedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExist = ComponentSelectionUtil.isComponentExist;\nconst isSelectedComponentExist = ComponentSelectionUtil.isSelectedComponentExist;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    const id = act.payload.id;\n    const productAspect = act.payload.productAspect;\n\n    if (!isSelectedComponentExist(id, productAspect, state.selectedComponents) &&\n      isComponentExist(id, state.availableComponents)) {\n      const availableComponent = state.availableComponents.filter((component) => component.id === id );\n      const seletedComponent = Object.assign({}, availableComponent[0]);\n      seletedComponent.productAspect = productAspect;\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          seletedComponent\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n\n    const act: RemoveSelectedComponentAction = action;\n    const id = act.payload.id;\n    const productAspect = act.payload.productAspect;\n\n    if (isSelectedComponentExist(id, productAspect, state.selectedComponents) &&\n      isComponentExist(id, state.availableComponents)) {\n\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) =>\n          component.id !== id || component.productAspect !== productAspect\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.LOAD_SELECTED_COMPONENTS) {\n    const act: LoadSelectedComponentsAction = action;\n    return {\n      ...state,\n      selectedComponents: act.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport type {SecurityRiskAssessmentState} from \"../store/SecurityRiskAssessmentState\";\nimport ActionType from \"../actions/ActionType\";\nimport type {SecurityRiskAssessment} from \"../types/Task\";\n\nconst defaultStartState: SecurityRiskAssessmentState = {\n  securityRiskAssessmentData: null,\n};\n\nexport function securityRiskAssessmentState(state: SecurityRiskAssessmentState = defaultStartState, action: *): SecurityRiskAssessmentState {\n  if (action.type === ActionType.SRA.LOAD_SECURITY_RISK_ASSESSMENT) {\n    return {\n      securityRiskAssessmentData: action.payload,\n    };\n  }\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\nimport {securityRiskAssessmentState} from \"./securityRiskAssessmentState\";\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState,\n  securityRiskAssessmentState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";"],"sourceRoot":""}