{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/icons/approval.svg","webpack:///./src/img/icons/my-product.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./src/img/icons/pdf.svg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Button/AwaitingApprovalsButton.js","webpack:///./src/js/components/Button/MyProductButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MySubmissionList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/AwaitingApprovalList.js","webpack:///./src/js/components/QuestionnaireSubmissionList/MyProductList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/questionnaireSubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","FETCH_AWAITING_APPROVAL_LIST","FETCH_MY_PRODUCT_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","has","defaultRadioButtonValue","defaultCheckboxValue","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","AwaitingApprovalsButton","AwaitingApprovalsButton_objectSpread","awaitingApprovals","MyProductButton","MyProductButton_objectSpread","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","Button_AwaitingApprovalsButton","Button_MyProductButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","riskResults","riskName","weights","score","rating","color","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","isApprovalOverrideBySecurityArchitect","questionnaireTitle","submissionID","submissionUUID","submissionToken","productName","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","approver","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","skipBoAndCisoApproval","userID","pageType","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","isCurrentUserAnApprover","isTaskApprovalRequired","taskId","taskJSONObject","componentIDs","QuestionnaireForBusinessOwnerDataService","isBusinessOwnerSummaryPage","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","uniq","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee18","indexesToUpdate","_context18","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","option","checked","groupCheckboxValueArr","onChange","target","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","selectedOptions","dataArr","Review","Review_objectSpread","viewAs","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","alreadySubmittedAlert","buttons","editIcon","pdfIcon","existsUnansweredQuestion","summaryButton","redirectToQuestionnaireSummary","Questionnaire_AnswersPreview","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_classCallCheck","Summary_possibleConstructorReturn","Summary_getPrototypeOf","Summary_objectSpread","renderSubmitterInfo","renderTasks","renderApprovals","renderRiskResults","renderSkipCheckbox","renderButtons","riskResult","backgroundColor","_this2","taskNameAndStatus","redirectToTaskSubmission","redirectToComponentSelectionSubmission","_this3","handleApproveButtonClick","handleAssignToMeButtonClick","handleOptionalApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","viewAnswersButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","assignToMeButton","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","_this4","setState","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","dispatchBusinessOwnerApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","dispatchBusinessOwnerDenySubmissionAction","_this$props$submissio6","dispatchAssignToMeAction","_this$props$submissio7","dispatchEditSubmissionAction","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref17","_callee12","_ref18","_context12","approveQuestionnaireSubmission","_x20","_x21","approveQuestionnaireSubmissionFromBusinessOwner","_ref19","_callee13","_ref20","_context13","denyQuestionnaireSubmission","_x22","_x23","denyQuestionnaireSubmissionFromBusinessOwner","_ref13","_callee10","_ref14","_context10","_x16","_x17","_ref15","_callee11","_ref16","_context11","_x18","_x19","_ref21","_callee14","_ref22","_context14","editQuestionnaireSubmission","_x24","_x25","_ref11","_callee9","_ref12","_context9","assignQuestionnaireSubmissionToSecurityArchitect","_x14","_x15","assignToSecurityArchitectQuestionnaireSubmission","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","pdfButton","downloadPdf","currentUser","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","dispatchEditAnswersAction","dispatchApproveTaskSubmissionAction","dispatchDenyTaskSubmissionAction","isCurrentUserSubmitter","Task_TaskSubmission","_this$props$taskSubmi","_this$props$taskSubmi2","questionnaireSubmission","siteConfigState","currentUserState","approveTaskSubmission","denyTaskSubmission","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","list","questionnaireSubmissionListState","_ref23","_callee15","_context15","fetchQuestionnaireSubmissionList","_x26","_x27","_dispatchLoadDataAction","AwaitingApprovalList","AwaitingApprovalList_objectSpread","awaitingApprovalList","awaitingApproval","submitterName","securityArchitectID","SecurityArchitectApproverID","_ref24","_callee16","_context16","_x28","_x29","MyProductList","MyProductList_objectSpread","myProductList","myProduct","_ref25","_callee17","_context17","_x30","_x31","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","QuestionnaireSubmissionList_MySubmissionList","QuestionnaireSubmissionList_AwaitingApprovalList","QuestionnaireSubmissionList_MyProductList","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","_this$state2","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","questionnaireSubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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C,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"89cc4e5e7d493ff95c01\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([369,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/fb467c695d06bcd18d012bd28ff6f583.svg\";","module.exports = __webpack_public_path__ + \"../img/8b14213bb682c2ce2e8b21f3ce9bb6f0.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 594;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\",\n    FETCH_AWAITING_APPROVAL_LIST: \"QUESTIONNAIRE/FETCH_AWAITING_APPROVAL_LIST\",\n    FETCH_MY_PRODUCT_LIST:\"QUESTIONNAIRE/FETCH_MY_PRODUCT_LIST\",\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          if (type === \"multiple-choice: single selection\") {\n            type = \"radio\"\n          }\n          if (type === \"multiple-choice: multiple selection\") {\n            type = \"checkbox\"\n          }\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\", \"radio\", \"checkbox\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            options: _.has(inputSchema, 'MultiChoiceAnswer') ? JSON.parse(_.get(inputSchema, \"MultiChoiceAnswer\", \"\")) : \"\",\n            defaultRadioButtonValue: _.has(inputSchema, 'MultiChoiceSingleAnswerDefault') ? _.toString(_.get(inputSchema, \"MultiChoiceSingleAnswerDefault\", \"\")) : \"\",\n            defaultCheckboxValue: _.has(inputSchema, 'MultiChoiceMultipleAnswerDefault') ? _.get(inputSchema, \"MultiChoiceMultipleAnswerDefault\", \"\") : \"\",\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n\n\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/approval.svg\";\n\nclass AwaitingApprovalsButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.awaitingApprovals();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n            Awaiting Approvals\n        </div>\n      </button>\n    );\n  }\n\n  async awaitingApprovals() {\n    window.location.href = `#/AwaitingApprovals`;\n  }\n}\n\nexport default AwaitingApprovalsButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/my-product.svg\";\n\nclass MyProductButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`HeaderButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Products\n        </div>\n      </button>\n    );\n  }\n\n  async allSubmission() {\n    window.location.href = `#/MyProducts`;\n  }\n}\n\nexport default MyProductButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport AwaitingApprovalsButton from \"../Button/AwaitingApprovalsButton\";\nimport MyProductButton from \"../Button/MyProductButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-4\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <AwaitingApprovalsButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <MyProductButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n    const name = get(jsonObject, \"FirstName\") ? toString(get(jsonObject, \"FirstName\", \"\")) + ' ' + toString(get(jsonObject, \"Surname\", \"\")) : \"\"\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: name,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    ProductName\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    ApprovalOverrideBySecurityArchitect\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // @todo : change with real value\n    const riskResults = [{riskName:\"Information Disclosure\", weights:\"20, 30, 50, 60, 100\", score:\"160\", rating:\"Critical\", color:\"#0085ff\"}, {riskName:\"Loss of Asset Control\", weights:\"10, 10, 75\", score:\"75\", rating:\"Medium\", color:\"#8B0000\"}];\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        isApprovalOverrideBySecurityArchitect: Boolean(_.get(submissionJSON, \"ApprovalOverrideBySecurityArchitect\", false)),\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        productName: _.toString(_.get(submissionJSON, \"ProductName\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: riskResults\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToAssignToSecurityArchitect(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToAssignToSecurityArchitect.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async assignQuestionnaireSubmissionToSecurityArchitect(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string, skipBoAndCisoApproval: boolean}): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, skipBoAndCisoApproval} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\", SkipBoAndCisoApproval: ${skipBoAndCisoApproval}) {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  // load data for Awaiting Approvals\n  static async fetchQuestionnaireSubmissionList(userID: string, pageType: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\", PageType: \"${pageType}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n        BusinessOwnerApproverName\n        SubmitterName\n        SecurityArchitectApprover {\n          ID\n        }\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      obj['businessOwner'] = _.get(item, 'BusinessOwnerApproverName', '');\n      obj['submitterName'] = _.get(item, 'SubmitterName', '');\n      obj['SecurityArchitectApproverID'] = _.get(item, 'SecurityArchitectApprover.ID', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" || taskSubmission.status=== \"waiting_for_approval\" || taskSubmission.status=== \"denied\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n    IsTaskApprovalRequired\n    IsCurrentUserAnApprover\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", [])),\n      isCurrentUserAnApprover:  _.get(submissionJSONObject, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isTaskApprovalRequired: get(submissionJSONObject, \"IsTaskApprovalRequired\", false) === \"true\",\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToApproved(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToApproved.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n\n  static async denyTaskSubmission(argument: { uuid: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateTaskStatusToDenied(UUID: \"${uuid}\") {\n   Status\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateTaskStatusToDenied.Status\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {status};\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\nimport UserParser from \"../utils/UserParser\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string, isBusinessOwnerSummaryPage: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken, isBusinessOwnerSummaryPage} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\", IsBusinessOwnerSummaryPage: \"${isBusinessOwnerSummaryPage}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n      TaskApprover {\n        ID\n        FirstName\n        Surname\n      }\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // @todo : change with real value\n    const riskResults = [{riskName:\"Information Disclosure\", weights:\"20, 30, 50, 60, 100\", score:\"160\", rating:\"Critical\", color:\"#0085ff\"}, {riskName:\"Loss of Asset Control\", weights:\"10, 10, 75\", score:\"75\", rating:\"Medium\", color:\"#8B0000\"}];\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        taskSubmissions: _.toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n              approver: UserParser.parseUserFromJSON(_.get(item, \"TaskApprover\")),\n            };\n            return taskSubmission;\n          }),\n        riskResults: riskResults\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport QuestionnaireForBusinessOwnerDataService from \"../services/QuestionnaireForBusinessOwnerDataService\";\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function assignToSecurityArchitectQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.assignQuestionnaireSubmissionToSecurityArchitect({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string, skipBoAndCisoApproval: boolean): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken, skipBoAndCisoApproval});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_submission_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\nexport function loadAwaitingApprovalList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'awaiting_approval_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST,\n      payload: data\n    });\n  };\n}\n\nexport function loadMyProductList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchQuestionnaireSubmissionList(user.id, 'my_product_list');\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n\n      // set radio button default value\n      if (input.type == \"radio\" && input.data === null && input.defaultRadioButtonValue) {\n          initialValues[input.id] = input.defaultRadioButtonValue;\n      }\n\n      //set checkbox default value\n      if (input.type == \"checkbox\" && input.data === null && input.defaultCheckboxValue) {\n          initialValues[input.id] = input.defaultCheckboxValue;\n      }\n    });\n\n    return <Formik\n      initialValues={initialValues}\n\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && (!value || value === \"[]\")) {\n            errors[id] = `- Please enter a value for ${label}`;\n\n            if (type === \"radio\" || type === \"checkbox\") {\n                errors[id] = `- Please select an option for ${label}`;\n            }\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue, values}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {\n                  id,\n                  type,\n                  label,\n                  placeholder,\n                  options,\n                  defaultRadioButtonValue,\n                  defaultCheckboxValue\n                } = {...input};\n\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"radio\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let checked = _.toString(option.value) === _.toString(values[id]);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <Field type=\"radio\" name={id} value={option.value} className={\"radio\"} checked={checked} />\n                                  <label>{option.label}</label>\n                                </span>\n\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"checkbox\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        {options.length &&\n                          options.map((option, index) => {\n                            let groupCheckboxValueArr = values[id] ? JSON.parse(values[id]): [];\n                            const checked = groupCheckboxValueArr.includes(option.value);\n\n                            return (\n                              <div key={index}>\n                                <span>\n                                  <input\n                                  type=\"checkbox\"\n                                  name={id}\n                                  className={\"radio\"}\n                                  checked={checked}\n                                  onChange={(event) => {\n                                    if (event.target.checked) {\n                                      groupCheckboxValueArr.push(option.value);\n                                    } else {\n                                      groupCheckboxValueArr.splice(groupCheckboxValueArr.indexOf(option.value), 1 );\n                                    }\n                                    setFieldValue(id, JSON.stringify(groupCheckboxValueArr));\n                                  }}\n                                  />\n                                  <label>{option.label}</label>\n                                </span>\n                              </div>\n                            );\n                          })\n                        }\n                      </td>\n                      <td>{hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}</td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n\n        // Format date\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n\n        // Format radio button data: replace value with label\n        if (input.type === \"radio\" && data) {\n          const option = input.options.find((option => {\n            return option.value === data\n          }));\n          if (option) {\n            data = option.label;\n          }\n        }\n\n        // Format checkbox data: replace value with label\n        if (input.type === \"checkbox\" && data && data !== \"[]\") {\n          const selectedOptions = JSON.parse(data);\n\n          const dataArr = input.options.filter((option) => {\n            return selectedOptions.includes(option.value);\n          }).map((option) => {\n            return option.label;\n          })\n\n          data = JSON.stringify(dataArr);\n        }\n\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport URLUtil from \"../../utils/URLUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    const alreadySubmittedAlert = (\n      <div className=\"alert alert-success text-center\">\n        This questionnaire has already been submitted.\n      </div>\n    )\n\n    const buttons = (\n      <div className=\"buttons\">\n      <LightButton title=\"EDIT ANSWERS\"\n                   iconImage={editIcon}\n                   classes={[\"button\"]}\n                   onClick={handleEditAnswerButtonClick}/>\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n      <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                  classes={[\"button\"]}\n                  disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                  onClick={handleSubmitButtonClick}/>\n      </div>\n    );\n\n    const summaryButton = (\n      <div className=\"buttons\">\n      <LightButton title=\"BACK TO SUMMARY\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireSummary(submission.submissionUUID)}/>\n      </div>\n    );\n\n    return (\n      <div className=\"Review\">\n        {submission.status !== \"in_progress\" && alreadySubmittedAlert}\n        <AnswersPreview questions={submission.questions}/>\n        {(viewAs === 'submitter' && (submission.status === \"in_progress\" || submission.status === \"submitted\")) && buttons}\n        {(viewAs !== 'submitter') && summaryButton}\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle, result} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    if (result) {\n      content.push({\n        text: `Result:`,\n        style: \"sectionHeading\",\n        margin: [0, 0, 0, defaultFontSize],\n      });\n      content.push({\n        text: `${result}`,\n        margin: [0, 0, 0, defaultFontSize * 2],\n      });\n    }\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n\n          // Format radio button data: replace value with label\n          if (input.type === \"radio\" && data) {\n            const option = input.options.find((option => {\n              return option.value === data\n            }));\n            if (option) {\n              data = option.label;\n            }\n          }\n\n          // Format checkbox data: replace value with label\n          if (input.type === \"checkbox\" && data && data !== \"[]\") {\n            const selectedOptions = JSON.parse(data);\n\n            const dataArr = input.options.filter((option) => {\n              return selectedOptions.includes(option.value);\n            }).map((option) => {\n              return option.label;\n            })\n\n            data = JSON.stringify(dataArr);\n          }\n\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {\n      title,\n      siteTitle,\n      user,\n      submission,\n      isCurrentUserApprover,\n      isCurrentUserABusinessOwnerApprover\n    } = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n          viewAs={viewAs}\n          submission={submission}\n          handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n          handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n          handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\nimport type {User} from \"../../types/User\";\nimport type {RiskResult} from \"../../types/Questionnaire\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleAssignToMeButtonClick: () => void,\n  handleApproveButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleDenyButtonClick: (skipBoAndCisoApproval: boolean) => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n  user: User | null\n};\n\nconst prettifyStatus = (status: string) => {\n  if (!status) {\n    return;\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    handleAssignToMeButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n    user: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      skipBoAndCisoApproval: false\n    };\n  }\n\n  render() {\n    const {submission, viewAs, user} = {...this.props};\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderRiskResults(submission)}\n        {this.renderSkipCheckbox(submission, viewAs, user)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderRiskResults(submission: Submission) {\n    const riskResults = submission.riskResults;\n\n    if (riskResults.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Risks</h3>\n\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead className=\"thead-light\">\n              <tr key=\"risk_table_header\">\n                <th>Risk Name</th>\n                <th>Weights</th>\n                <th>Score</th>\n                <th>Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {riskResults.map((riskResult, index): RiskResult => {\n                return (\n                  <tr key={index+1} style={{backgroundColor:riskResult.color}}>\n                    <td>\n                      {riskResult.riskName}\n                    </td>\n                    <td>\n                      {riskResult.weights}\n                    </td>\n                    <td>\n                      {riskResult.score}\n                    </td>\n                    <td>\n                      {riskResult.rating}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Product Name:</b> {submission.productName} </div>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n\n        {taskSubmissions.map(({uuid, taskName, taskType, status, approver}) => {\n          let taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ')';\n\n          if (status === \"start\") {\n            taskNameAndStatus = taskName + ' (Please complete me)';\n          }\n\n          if ((status === \"approved\" || status === \"denied\") && approver.name) {\n            taskNameAndStatus = taskName + ' (' + prettifyStatus(status) + ' by ' + approver.name + ')';\n          }\n\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskNameAndStatus}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      user,\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleOptionalApproveButtonClick,\n      handleAssignToMeButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    const viewAnswersButton = user ? (\n      <LightButton title=\"VIEW ANSWERS\"\n                   classes={[\"button\"]}\n                   onClick={() => URLUtil.redirectToQuestionnaireReview(submission.submissionUUID)}\n      />\n    ) : '';\n\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\" ||\n        submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const assignToMeButton = (\n        <LightButton title=\"Assign to Me\"\n                    classes={[\"button\"]}\n                    onClick={handleAssignToMeButtonClick}\n        />\n      );\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={() => handleApproveButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={() => handleDenyButtonClick(this.state.skipBoAndCisoApproval)}\n        />\n      );\n      \n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"awaiting_security_architect_review\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {viewAnswersButton}\n              {downloadPDFButton}\n              {assignToMeButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {viewAnswersButton}\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {viewAnswersButton}\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n\n    if (securityArchitectApprovalStatus == \"Approved\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (submission.status === \"waiting_for_security_architect_approval\") {\n      securityArchitectApprovalStatus = \"Being Reviewed by \" + securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname;\n    }\n\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n    if (cisoApprovalStatus !== \"Pending\" && cisoApprovalStatus !== \"Not Applicable\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\" && businessOwnerApprovalStatus !== 'Not Applicable') {\n      businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n\n  renderSkipCheckbox(submission: Submission, viewAs: string, user: User) {\n    if ((user && !user.isSA) || !submission.isApprovalOverrideBySecurityArchitect) {\n      return null;\n    }\n    if (viewAs === 'approver' && user.isSA &&\n      submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"approvals\">\n            <h3>Skip Business Owner and CISO approval</h3>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={this.state.skipBoAndCisoApproval}\n              onChange={event => {\n                this.setState({\n                  skipBoAndCisoApproval: event.target.checked\n                });\n              }} />\n              &nbsp; This deliverable does not modify the current risk rating for this\n              project. Business Owner and CISO approval is not required\n            </label>\n          </div>\n        );\n    }\n\n    return null;\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionFromBusinessOwner,\n  denyQuestionnaireSubmissionFromBusinessOwner,\n  assignToSecurityArchitectQuestionnaireSubmission,\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(approveQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchDenySubmissionAction(submissionID: string, skipBoAndCisoApproval: boolean) {\n      dispatch(denyQuestionnaireSubmission(submissionID, skipBoAndCisoApproval));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n    dispatchAssignToMeAction(submissionID: string) {\n      dispatch(assignToSecurityArchitectQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 handleAssignToMeButtonClick={this.handleAssignToMeButtonClick.bind(this)}\n                 viewAs={viewAs}\n                 user={user}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleDenyButtonClick(skipBoAndCisoApproval: boolean = false) {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID, skipBoAndCisoApproval);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleAssignToMeButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchAssignToMeAction(submission.submissionID);\n  }\n\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n\nexport function approveTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.approveTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid, secureToken: ''}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n\nexport function denyTaskSubmission(uuid: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {status} = await TaskDataService.denyTaskSubmission({uuid, csrfToken});\n      await dispatch(loadTaskSubmission({uuid}));\n    } catch(error) {\n      ErrorUtil.displayError(error.message);\n    }\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers,\n      viewAs\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    const resultStatus = [\"complete\", \"waiting_for_approval\", \"approved\", \"denied\"];\n    const result = taskSubmission.result && (resultStatus.indexOf(taskSubmission.status) > -1) ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const approveButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <DarkButton title={\"APPROVE\"} onClick={handleApproveButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    const denyButton = (viewAs === \"approver\" && taskSubmission.status === \"waiting_for_approval\") ? (\n      <LightButton title={\"DENY\"} onClick={handleDenyButtonClick} classes={[\"button\"]}/>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {pdfButton}\n          {backButton}\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle,\n      currentUser\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter.email ? taskSubmission.submitter : currentUser,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n    });\n  }\n}\n\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n  approveTaskSubmission,\n  denyTaskSubmission\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n    dispatchApproveTaskSubmissionAction(uuid: string) {\n      dispatch(approveTaskSubmission(uuid));\n    },\n    dispatchDenyTaskSubmissionAction(uuid: string) {\n      dispatch(denyTaskSubmission(uuid));\n    }\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchApproveTaskSubmissionAction?: (uuid: string) => void,\n  dispatchDenyTaskSubmissionAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n      dispatchApproveTaskSubmissionAction,\n      dispatchDenyTaskSubmissionAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id)) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (taskSubmission.isCurrentUserAnApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n    } while (false);\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\" || taskSubmission.status === \"start\" ) && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\" || taskSubmission.status === \"waiting_for_approval\" ||taskSubmission.status === \"denied\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n          handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n          viewAs={viewAs}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleApproveButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n\n    this.props.dispatchApproveTaskSubmissionAction(uuid);\n  }\n\n  handleDenyButtonClick() {\n    const {user, isCurrentUserAnApprover, uuid} = {...this.props.taskSubmission};\n\n    if (!user && !uuid && !isCurrentUserAnApprover) {\n      return;\n    }\n    this.props.dispatchDenyTaskSubmissionAction(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n          siteTitle={siteTitle}\n          currentUser={currentUser}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    mySubmissionList: state.questionnaireSubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: QuestionnaireSubmissionListItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle={siteTitle} username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadAwaitingApprovalList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    awaitingApprovalList: state.questionnaireSubmissionListState.awaitingApprovalList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadAwaitingApprovalList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  awaitingApprovalList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string,  securityArchitectID: string, currentUser: User) => {\n  if (status === \"waiting_for_security_architect_approval\" &&\n    currentUser.id == securityArchitectID\n  ) {\n    return \"Assigned to me\";\n  }\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass AwaitingApprovalList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      siteTitle,\n      awaitingApprovalList\n    } = {...this.props};\n\n    if (!currentUser || !awaitingApprovalList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"Awaiting Approvals\" subtitle={siteTitle} username={currentUser.name} />\n        {list(awaitingApprovalList, currentUser)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst list = (awaitingApprovalList: QuestionnaireSubmissionListItem, currentUser: User) => {\n  if(!awaitingApprovalList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Business Owner</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {awaitingApprovalList.map((awaitingApproval) => {\n              const url =  \"#/questionnaire/summary/\" + awaitingApproval.uuid;\n              return (\n                <tr key={awaitingApproval.id}>\n                  <td>\n                    {moment(awaitingApproval.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {awaitingApproval.productName}\n                  </td>\n                  <td>\n                    {awaitingApproval.businessOwner}\n                  </td>\n                  <td>\n                    {awaitingApproval.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(\n                      awaitingApproval.status,\n                      awaitingApproval.SecurityArchitectApproverID,\n                      currentUser)\n                    }\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AwaitingApprovalList);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {QuestionnaireSubmissionListItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMyProductList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    siteTitle: state.siteConfigState.siteTitle,\n    myProductList: state.questionnaireSubmissionListState.myProductList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMyProductList());\n      await dispatch(loadSiteTitle());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  myProductList?: Array<QuestionnaireSubmissionListItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (myProductList: QuestionnaireSubmissionListItem) => {\n  if(!myProductList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Submitter</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {myProductList.map((myProduct) => {\n              let url = \"#/questionnaire/summary/\" + myProduct.uuid;\n\n              return (\n                <tr key={myProduct.id}>\n                  <td>\n                    {moment(myProduct.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {myProduct.productName}\n                  </td>\n                  <td>\n                    {myProduct.submitterName}\n                  </td>\n                  <td>\n                    {prettifyStatus(myProduct.status)}\n                  </td>\n                  <td>\n                    <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MyProductList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      myProductList,\n      siteTitle,\n    } = {...this.props};\n\n    if (!currentUser || !myProductList || !siteTitle) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Products\" subtitle={siteTitle} username={currentUser.name} />\n        {list(myProductList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MyProductList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../QuestionnaireSubmissionList/MySubmissionList\";\nimport AwaitingApprovalList from \"../QuestionnaireSubmissionList/AwaitingApprovalList\";\nimport MyProductList from \"../QuestionnaireSubmissionList/MyProductList\";\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/AwaitingApprovals'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <AwaitingApprovalList/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MyProducts'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MyProductList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"businessOwnerApprover\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n\n    try {\n      const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n        uuid: this.props.uuid,\n        secureToken: this.props.token,\n        isBusinessOwnerSummaryPage: '1'\n      });\n      this.setState({\n        siteTitle: data.siteTitle,\n        submission: data.submission,\n      });\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\nimport LightButton from \"../Button/LightButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport PDFUtil from \"../../utils/PDFUtil\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    const pdfButton = (\n      <LightButton title={\"DOWNLOAD PDF\"} iconImage={pdfIcon} onClick={() => this.downloadPdf()}/>\n    );\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {pdfButton}\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n\n  downloadPdf() {\n    const {\n      taskSubmission,\n      siteTitle\n    } = {...this.state};\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: taskSubmission.questions,\n      submitter: taskSubmission.submitter,\n      questionnaireTitle: taskSubmission.taskName,\n      siteTitle: siteTitle,\n      result: taskSubmission.result,\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: QuestionnaireSubmissionListState = {\n  awaitingApprovalList: [],\n  mySubmissionList: [],\n  myProductList: [],\n}\n\nexport function questionnaireSubmissionListState(state: QuestionnaireSubmissionListState = initalState, action: any): QuestionnaireSubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_AWAITING_APPROVAL_LIST) {\n    return {\n      ...state,\n      awaitingApprovalList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_PRODUCT_LIST) {\n    return {\n      ...state,\n      myProductList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {questionnaireSubmissionListState} from \"./questionnaireSubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  questionnaireSubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n          siteTitle={siteTitle}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}