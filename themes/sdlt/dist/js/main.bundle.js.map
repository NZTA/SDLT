{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/icons/pdf.svg","webpack:///./src/img/Home/poc-icon.svg","webpack:///./src/img/Home/saas-icon.svg","webpack:///./src/img/Home/prod-icon.svg","webpack:///./src/img/Home/bug-icon.svg","webpack:///./src/img/icons/user.svg","webpack:///./src/img/Home/background.jpg","webpack:///./src/img/PDF/heading.jpg","webpack:///./src/img/PDF/footer.jpg","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/js/actions/ActionType.js","webpack:///./src/js/utils/URLUtil.js","webpack:///./src/js/utils/GraphQLRequestHelper.js","webpack:///./src/js/constants/errors.js","webpack:///./src/js/utils/QuestionParser.js","webpack:///./src/js/utils/TaskParser.js","webpack:///./src/js/services/HomeDataService.js","webpack:///./src/js/utils/ErrorUtil.js","webpack:///./src/js/actions/home.js","webpack:///./src/js/components/Home/Pillar.js","webpack:///./src/js/components/Home/TaskButton.js","webpack:///./src/js/services/CSRFTokenService.js","webpack:///./src/js/components/Button/LogoutButton.js","webpack:///./src/js/components/Button/MySubmissionButton.js","webpack:///./src/js/components/Home/Home.js","webpack:///./src/js/components/Footer/Footer.js","webpack:///./src/js/components/Home/HomeContainer.js","webpack:///./src/js/components/Button/BaseButton.js","webpack:///./src/js/components/Button/LightButton.js","webpack:///./src/js/components/Questionnaire/Start.js","webpack:///./src/js/utils/UserParser.js","webpack:///./src/js/services/QuestionnaireDataService.js","webpack:///./src/js/utils/SubmissionDataUtil.js","webpack:///./src/js/utils/SecurityComponentParser.js","webpack:///./src/js/utils/JiraTicketParser.js","webpack:///./src/js/services/TaskDataService.js","webpack:///./src/js/services/QuestionnaireForBusinessOwnerDataService.js","webpack:///./src/js/actions/questionnaire.js","webpack:///./src/js/components/Header/Header.js","webpack:///./src/js/components/Questionnaire/StartContainer.js","webpack:///./src/js/components/Questionnaire/LeftBarItem.js","webpack:///./src/js/components/Questionnaire/LeftBar.js","webpack:///./src/js/components/Button/DarkButton.js","webpack:///./src/js/components/Questionnaire/QuestionForm.js","webpack:///./src/js/components/Questionnaire/Questionnaire.js","webpack:///./src/js/components/Questionnaire/QuestionnaireContainer.js","webpack:///./src/js/components/Questionnaire/AnswersPreview.js","webpack:///./src/js/components/Questionnaire/Review.js","webpack:///./src/js/utils/StringUtil.js","webpack:///./src/js/utils/PDFUtil.js","webpack:///./src/js/components/Questionnaire/ReviewContainer.js","webpack:///./src/js/components/Questionnaire/Summary.js","webpack:///./src/js/components/Questionnaire/SummaryContainer.js","webpack:///./src/js/actions/task.js","webpack:///./src/js/components/Task/TaskSubmission.js","webpack:///./src/js/services/UserDataService.js","webpack:///./src/js/actions/user.js","webpack:///./src/js/services/SiteConfigDataService.js","webpack:///./src/js/actions/siteConfig.js","webpack:///./src/js/components/Task/TaskSubmissionContainer.js","webpack:///./src/js/components/Task/TaskStandaloneContainer.js","webpack:///./src/js/components/LeftBar/LeftBar.js","webpack:///./src/js/components/LeftBar/LeftBarItem.js","webpack:///./src/js/components/ComponentSelection/ComponentInfo.js","webpack:///./src/js/utils/ComponentSelectionUtil.js","webpack:///./src/js/components/ComponentSelection/ComponentSelection.js","webpack:///./src/js/services/SecurityComponentDataService.js","webpack:///./src/js/actions/componentSelection.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionReview.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionStandaloneContainer.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionContainer.js","webpack:///./src/js/components/MySubmission/MySubmissionList.js","webpack:///./src/js/components/App/MainApp.js","webpack:///./src/js/components/Questionnaire/SummaryForBusinessOwner.js","webpack:///./src/js/services/TaskForBusinessOwnerDataService.js","webpack:///./src/js/components/Task/TaskSubmissionForBusinessOwner.js","webpack:///./src/js/components/ComponentSelection/ComponentSelectionForBusinessOwnerContainer.js","webpack:///./src/js/components/App/BusinessOwnerApp.js","webpack:///./src/js/reducers/homeState.js","webpack:///./src/js/reducers/questionnaireState.js","webpack:///./src/js/reducers/taskSubmissionState.js","webpack:///./src/js/reducers/currentUserState.js","webpack:///./src/js/reducers/siteConfigState.js","webpack:///./src/js/reducers/componentSelectionState.js","webpack:///./src/js/reducers/mySubmissionListState.js","webpack:///./src/js/reducers/rootState.js","webpack:///./src/js/store/store.js","webpack:///./src/js/components/Task/TaskSubmissionForVendorContainer.js","webpack:///./src/js/components/App/VendorApp.js","webpack:///./src/js/main.js","webpack:///./src/img/icons/question-editing.svg","webpack:///./src/img/icons/edit.svg","webpack:///./src/img/Logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","2","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","ActionType","HOME","LOAD_HOME_STATE_STARTED","LOAD_HOME_STATE_FAILED","LOAD_HOME_STATE_FINISHED","QUESTIONNAIRE","LOAD_QUESTIONNAIRE_START_STATE","LOAD_QUESTIONNAIRE_SUBMISSION_STATE","PUT_DATA_IN_QUESTIONNAIRE_ANSWER","MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION","MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE","FETCH_MY_SUBMISSION_LIST","TASK","LOAD_TASK_SUBMISSION","PUT_DATA_IN_TASK_SUBMISSION","MARK_TASK_QUESTION_NOT_APPLICABLE","MOVE_TO_ANOTHER_TASK_QUESTION","COMPLETE_TASK_SUBMISSION","EDIT_TASK_SUBMISSION","COMPONENT_SELECTION","SET_AVAILABLE_COMPONENTS","ADD_SELECTED_COMPONENT","REMOVE_SELECTED_COMPONENT","SET_JIRA_TICKETS","SET_VIEW_MODE","UI","LOAD_DATA_STARTED","LOAD_DATA_FAILED","LOAD_DATA_FINISHED","USER","SET_CURRENT_USER","SITE_CONFIG","SET_SITE_TITLE","URLUtil","uuid","location","href","token","arguments","GraphQLRequestHelper","argument","query","variables","csrfToken","headers","compress","axios","url","method","response","json","errorMessage","_","DEFAULT_NETWORK_ERROR","DEFAULT_PARSE_ERROR","QuestionParser","_argument","QuestionParser_objectSpread","schemaJSON","answersJSON","schema","Array","isArray","parseSchemaFromJSON","answers","jsonObject","toString","parseAnswersFromJSON","currentQuestionID","questionID","answer","Boolean","findCurrentQuestionID","questionSchema","schemaIndex","hasAnswer","isApplicable","isCurrent","inputs","actions","inputAnswers","actionAnswers","inputSchemas","actionSchemas","inputSchema","toLowerCase","includes","inputID","input","label","required","toInteger","minLength","Number","parseInt","placeholder","filter","inputData","actionSchema","actionID","action","isChose","message","goto","taskID","question","title","heading","description","TaskParser","questions","parseQuestionsFromJSON","HomeDataService","dashboardJSON","subtitle","pillarsJSONArray","pillars","this","parsePillars","taskJSONArray","tasks","parseTasks","icon","PocIcon","SaasIcon","ProdIcon","BugIcon","disabled","questionnaireID","tasksJSONArray","taskJSON","task","parseFromJSONObject","ErrorUtil","rethrow","alert","loadHomeState","_ref","regeneratorRuntime","mark","_callee","dispatch","homeState","wrap","_context","prev","next","fetchHomeData","sent","payload","t0","displayError","stop","_x","Pillar","Component","_this","classes","_toConsumableArray","props","pillar","react_default","Link","className","to","link","onClick","event","preventDefault","alt","TaskButton","TaskButton_toConsumableArray","CSRFTokenService","x-requested-with","LogoutButton","LogoutButton_objectSpread","logout","Icon","getCSRFToken","defaultProps","MySubmissionButton","MySubmissionButton_objectSpread","allSubmission","Home","_this$props$homeState","Home_objectSpread","Button_LogoutButton","Button_MySubmissionButton","LogoImage","index","Home_Pillar","Home_TaskButton","Footer","HomeContainer","dispatchLoadHomeDataAction","style","backgroundImage","BackgroundImage","backgroundSize","components_Home_Home","components_Footer_Footer","connect","state","BaseButton","_this$props","BaseButton_objectSpread","iconImage","classNames","LightButton","Button_BaseButton","_extends","LightButton_toConsumableArray","Start","keyInformation","user","onStartButtonClick","dangerouslySetInnerHTML","__html","email","Button_LightButton","UserParser","userJSON","isSA","isCISO","QuestionnaireDataService","submissionHash","memberData","questionnaireData","siteData","parseUserFromJSON","submissionJSON","siteTitle","isCurrentUserApprover","isCurrentUserABusinessOwnerApprover","submission","questionnaireTitle","submissionID","submissionUUID","submissionToken","submitter","replace","approvalStatus","chiefInformationSecurityOfficer","businessOwner","securityArchitect","securityArchitectApprover","FirstName","Surname","cisoApprover","businessOwnerApproverName","taskSubmissions","toArray","taskName","taskType","answerData","answerDataStr","btoa","stringify","questionIDList","answerDataList","mutations","singleQuery","userID","obj","SubmissionDataUtil","fullQuestion","answerType","isString","trim","hasUnansweredQuestion","_question","SubmissionDataUtil_objectSpread","exists","taskSubmission","answeredQuestion","currentIndex","findIndex","isLastQuestion","returnPackage","nonApplicableIndexes","targetIndex","complete","terminate","choseAction","find","targetID","cursor","SecurityComponentParser","jsonArray","JiraTicketParser","jiraKey","TaskDataService","args","questionnaireSubmissionID","taskIDList","uniqueTaskIDList","uniq","secureToken","responseJSONObject","submissionJSONObject","lockWhenComplete","questionnaireSubmissionUUID","questionnaireSubmissionStatus","selectedComponents","parseFromJSONOArray","jiraTickets","parseFromJSONArray","taskId","taskJSONObject","componentIDs","QuestionnaireForBusinessOwnerDataService","isBusinessOwnerSummaryPage","loadQuestionnaireSubmissionState","_ref3","questionnaire_asyncToGenerator","_callee3","_context3","fetchSubmissionData","_x3","moveAfterQuestionAnswered","_ref5","_callee5","getState","rootState","_SubmissionDataUtil$g","_context5","questionnaireState","submissionState","abrupt","getDataUpdateIntent","batchUpdateSubmissionData","questionnaire_toConsumableArray","redirectToQuestionnaireReview","_x6","_x7","_callee15","indexesToUpdate","_context15","transformFromFullQuestionToData","Header","Header_objectSpread","showLogoutButton","username","StartContainer","StartContainer_objectSpread","dispatchLoadQuestionnaireAction","_this$props$startStat","startState","_this$props2","dispatchCreateInProgressSubmissionAction","components_Header_Header","Questionnaire_Start","fetchStartData","loadQuestionnaireStartState","_ref2","_callee2","_context2","createInProgressSubmission","redirectToQuestionnaireEditing","_x2","LeftBarItem","LeftBarItem_objectSpread","onItemClick","renderIcon","QuesiontEditingIcon","LeftBar","LeftBar_objectSpread","LeftBarItem_LeftBarItem","DarkButton","DarkButton_extends","DarkButton_toConsumableArray","QuestionForm","QuestionForm_objectSpread","renderActions","renderInputsForm","handleActionClick","chosenAction","Button_DarkButton","handleFormSubmit","initialValues","formik_esm","validate","values","errors","_input","test","moment","isValid","onSubmit","formik","isSubmitting","touched","setFieldValue","filteredErrors","_input2","hasError","render","date","dateValue","field","toDate","react_datepicker_es","dateFormat","selected","onChange","format","placeholderText","dropdownMode","withPortal","QuestionForm_extends","Questionnaire","Questionnaire_objectSpread","saveAnsweredQuestion","currentQuestion","forIn","_this$props3","onLeftBarItemClick","currentQuestionIndex","Questionnaire_LeftBar","Questionnaire_QuestionForm","QuestionnaireContainer","QuestionnaireContainer_objectSpread","dispatchLoadSubmissionAction","dispatchSaveAnsweredQuestionAction","dispatchMoveToPreviousQuestionAction","_this$props$submissio","components_Questionnaire_Questionnaire","targetQuestion","_ref4","_callee4","_context4","updateSubmissionData","_x4","_x5","_ref6","_callee6","_context6","_x8","_x9","moveToPreviousQuestion","AnswersPreview","AnswersPreview_objectSpread","all","renderedData","renderData","renderInputData","Review","Review_objectSpread","handleSubmitButtonClick","handlePDFDownloadButtonClick","handleEditAnswerButtonClick","Questionnaire_AnswersPreview","editIcon","pdfIcon","existsUnansweredQuestion","StringUtil","any","getImageDataByBlob","blob","reader","FileReader","addEventListener","target","readAsDataURL","getImageDataByURL","imageURL","fetch","PDFUtil","content","styles","bold","fontSize","defaultFontSize","color","alignment","sectionHeading","questionHeading","defaultStyle","info","vfs","vfsFonts","pdfMake","headingImage","headingImageData","image","width","margin","text","arr","isLast","footerImage","footerImageData","createPdf","download","onload","ReviewContainer","ReviewContainer_objectSpread","Questionnaire_Review","dispatchSubmitQuestionnaire","_this$props$submissio2","generatePDF","_ref7","_callee7","_ref8","_context7","submitQuestionnaire","createTaskSubmissionsAccordingToQuestions","redirectToQuestionnaireSummary","_x10","_x11","prettifyStatus","split","str","charAt","toUpperCase","Summary","Summary_objectSpread","viewAs","renderSubmitterInfo","renderTasks","renderApprovals","renderButtons","redirectToTaskSubmission","redirectToComponentSelectionSubmission","handleApproveButtonClick","handleDenyButtonClick","handleEditButtonClick","downloadPDFButton","editAnswersButton","sendForApprovalButton","existsIncompleteTaskSubmission","approveButton","denyButton","securityArchitectApprovalStatus","cisoApprovalStatus","businessOwnerApprovalStatus","SummaryContainer","SummaryContainer_classCallCheck","SummaryContainer_possibleConstructorReturn","SummaryContainer_getPrototypeOf","showModal","SummaryContainer_objectSpread","Questionnaire_Summary","handleOpenModal","lib_default","isOpen","parentSelector","querySelector","handleCloseModal","_this$props$submissio3","dispatchSubmitForApprovalAction","_this$props$submissio4","dispatchApproveSubmissionAction","dispatchBusinessOwnerApproveSubmissionAction","_this$props$submissio5","dispatchDenySubmissionAction","dispatchBusinessOwnerDenySubmissionAction","_this$props$submissio6","dispatchEditSubmissionAction","setState","_ref9","_callee8","_ref10","_context8","submitQuestionnaireForApproval","_x12","_x13","_ref15","_callee11","_ref16","_context11","approveQuestionnaireSubmission","_x18","_x19","approveQuestionnaireSubmissionFromBusinessOwner","_ref11","_callee9","_ref12","_context9","_x14","_x15","_ref17","_callee12","_ref18","_context12","denyQuestionnaireSubmission","_x20","_x21","denyQuestionnaireSubmissionFromBusinessOwner","_ref13","_callee10","_ref14","_context10","_x16","_x17","_ref19","_callee13","_ref20","_context13","editQuestionnaireSubmission","_x22","_x23","loadTaskSubmission","_args","task_objectSpread","task_asyncToGenerator","fetchTaskSubmission","saveAnsweredQuestionInTaskSubmission","_args5","bypassNetwork","getTaskSubmission","putDataAction","markNotApplicableAction","moveAction","taskSubmissionState","t1","t2","t3","t4","t5","t6","batchUpdateTaskSubmissionData","t7","task_toConsumableArray","t8","completeTaskSubmission","_args8","moveToPreviousQuestionInTaskSubmission","_args10","editCompletedTaskSubmission","_args12","editTaskSubmission","TaskSubmission","TaskSubmission_objectSpread","editAnswers","showBackButton","showEditButton","canUpdateAnswers","body","backButton","editButton","UserDataService","currentMemberJSONObject","loadCurrentUser","fetchCurrentUser","SiteConfigDataService","loadSiteTitle","siteConfig","fetchSiteConfig","TaskSubmissionContainer","TaskSubmissionContainer_objectSpread","dispatchLoadDataAction","currentUser","dispatchEditAnswersAction","isCurrentUserSubmitter","Task_TaskSubmission","questionnaireSubmission","siteConfigState","currentUserState","TaskStandaloneContainer","TaskStandaloneContainer_objectSpread","fetchStandaloneTask","loadStandaloneTaskSubmission","LeftBar_LeftBar_objectSpread","LeftBar_LeftBarItem_objectSpread","iconType","EditingIcon","ComponentInfo","React","ComponentInfo_objectSpread","removeComponent","ComponentSelectionUtil","collection","component","ComponentSelection","ComponentSelection_classCallCheck","ComponentSelection_possibleConstructorReturn","ComponentSelection_getPrototypeOf","_this2","ComponentSelection_objectSpread","availableComponents","createJIRATickets","addComponent","finishWithSelection","extraButtons","_this$state","LeftBar_LeftBar_LeftBar","isSelected","isComponentExists","LeftBar_LeftBarItem_LeftBarItem","ComponentInfo_ComponentInfo","Fragment","SecurityComponentDataService","components","componentIDList","updatedData","compact","loadAvailableComponents","componentSelection_asyncToGenerator","addSelectedComponent","removeSelectedComponent","setViewMode","viewMode","setJiraTickets","tickets","ComponentSelectionReview","ComponentSelectionReview_objectSpread","ticket","ComponentSelectionStandaloneContainer","ComponentSelectionStandaloneContainer_objectSpread","dispatchAddComponentAction","dispatchRemoveComponentAction","dispatchCreateJIRATicketsAction","ComponentSelection_ComponentSelection","redirectToHome","ComponentSelectionReview_ComponentSelectionReview","componentSelectionState","createJiraTickets","ComponentSelectionContainer","ComponentSelectionContainer_objectSpread","dispatchFinishAction","updateTaskSubmissionWithSelectedComponents","saveSelectedComponents","MySubmissionList","MySubmissionList_objectSpread","mySubmissionList","mySubmission","created","questionnaireName","productName","class","list","mySubmissionListState","_ref21","_callee14","_context14","fetchUserSubmissionList","_x24","_x25","_dispatchLoadDataAction","MainApp","Switch","Route","exact","path","Home_HomeContainer","match","Questionnaire_StartContainer","params","Questionnaire_QuestionnaireContainer","hash","Questionnaire_ReviewContainer","Questionnaire_SummaryContainer","Task_TaskSubmissionContainer","Task_TaskStandaloneContainer","ComponentSelection_ComponentSelectionStandaloneContainer","ComponentSelection_ComponentSelectionContainer","MySubmission_MySubmissionList","SummaryForBusinessOwnerContainer","SummaryForBusinessOwner_classCallCheck","SummaryForBusinessOwner_possibleConstructorReturn","SummaryForBusinessOwner_getPrototypeOf","loadData","SummaryForBusinessOwner_objectSpread","summary","downloadPDF","approve","deny","TaskForBusinessOwnerDataService","TaskSubmissionForBusinessOwner","TaskSubmissionForBusinessOwner_classCallCheck","TaskSubmissionForBusinessOwner_possibleConstructorReturn","TaskSubmissionForBusinessOwner_getPrototypeOf","TaskSubmissionForBusinessOwner_objectSpread","fetchTaskSubmissionData","ComponentSelectionForBusinessOwnerContainer","ComponentSelectionForBusinessOwnerContainer_objectSpread","_props","BusinessOwnerApp","HashRouter","search","SummaryForBusinessOwner","TaskSubmissionForBusinessOwner_TaskSubmissionForBusinessOwner","ComponentSelection_ComponentSelectionForBusinessOwnerContainer","defaultState","defaultStartState","defaultSubmissionState","combineReducers","newState","questionnaireState_objectSpread","nonApplicableQuestion","initalState","submissionList","cloneDeep","_action$payload","taskSubmissionState_objectSpread","currentUserState_objectSpread","siteConfigState_objectSpread","componentSelectionState_objectSpread","act","mySubmissionListState_objectSpread","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskSubmissionForVendorContainer","TaskSubmissionForVendorContainer_objectSpread","VendorApp","Task_TaskSubmissionForVendorContainer","ReactModal","defaultStyles","overlay","position","top","left","right","bottom","backgroundColor","display","flexDirection","justifyContent","alignItems","background","overflow","WebkitOverflowScrolling","padding","mainContainer","getElementById","ReactDOM","es","App_MainApp","businessOwnerContainer","App_BusinessOwnerApp","vendorContainer","App_VendorApp"],"mappings":"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ACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"hot/hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"hot/hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"a7f4fc94e57fdc019ced\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/themes/sdlt/dist/img/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([368,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"../img/64544011f835a0bcc13b668a98a70f78.svg\";","module.exports = __webpack_public_path__ + \"../img/b2ce59ecfcc515cb33d81013163089b9.svg\";","module.exports = __webpack_public_path__ + \"../img/41e304962a77cf734f9bfe9772ab12b9.svg\";","module.exports = __webpack_public_path__ + \"../img/0e61629440d7a6d860ba88aad4af303a.svg\";","module.exports = __webpack_public_path__ + \"../img/442b4a253c2be23661dc12e64f264053.svg\";","module.exports = __webpack_public_path__ + \"../img/44cca0ef5b0830924492e8a8413b854e.svg\";","module.exports = __webpack_public_path__ + \"../img/f0545538d29150bca803dd2e1d422c11.jpg\";","module.exports = __webpack_public_path__ + \"../img/4b4872cec3cb197b21f4d3ac1b8ee472.jpg\";","module.exports = __webpack_public_path__ + \"../img/d1029db2ceff54ee06b8dafcf9f6a671.jpg\";","var map = {\n\t\"./af\": 210,\n\t\"./af.js\": 210,\n\t\"./ar\": 211,\n\t\"./ar-dz\": 212,\n\t\"./ar-dz.js\": 212,\n\t\"./ar-kw\": 213,\n\t\"./ar-kw.js\": 213,\n\t\"./ar-ly\": 214,\n\t\"./ar-ly.js\": 214,\n\t\"./ar-ma\": 215,\n\t\"./ar-ma.js\": 215,\n\t\"./ar-sa\": 216,\n\t\"./ar-sa.js\": 216,\n\t\"./ar-tn\": 217,\n\t\"./ar-tn.js\": 217,\n\t\"./ar.js\": 211,\n\t\"./az\": 218,\n\t\"./az.js\": 218,\n\t\"./be\": 219,\n\t\"./be.js\": 219,\n\t\"./bg\": 220,\n\t\"./bg.js\": 220,\n\t\"./bm\": 221,\n\t\"./bm.js\": 221,\n\t\"./bn\": 222,\n\t\"./bn.js\": 222,\n\t\"./bo\": 223,\n\t\"./bo.js\": 223,\n\t\"./br\": 224,\n\t\"./br.js\": 224,\n\t\"./bs\": 225,\n\t\"./bs.js\": 225,\n\t\"./ca\": 226,\n\t\"./ca.js\": 226,\n\t\"./cs\": 227,\n\t\"./cs.js\": 227,\n\t\"./cv\": 228,\n\t\"./cv.js\": 228,\n\t\"./cy\": 229,\n\t\"./cy.js\": 229,\n\t\"./da\": 230,\n\t\"./da.js\": 230,\n\t\"./de\": 231,\n\t\"./de-at\": 232,\n\t\"./de-at.js\": 232,\n\t\"./de-ch\": 233,\n\t\"./de-ch.js\": 233,\n\t\"./de.js\": 231,\n\t\"./dv\": 234,\n\t\"./dv.js\": 234,\n\t\"./el\": 235,\n\t\"./el.js\": 235,\n\t\"./en-SG\": 236,\n\t\"./en-SG.js\": 236,\n\t\"./en-au\": 237,\n\t\"./en-au.js\": 237,\n\t\"./en-ca\": 238,\n\t\"./en-ca.js\": 238,\n\t\"./en-gb\": 239,\n\t\"./en-gb.js\": 239,\n\t\"./en-ie\": 240,\n\t\"./en-ie.js\": 240,\n\t\"./en-il\": 241,\n\t\"./en-il.js\": 241,\n\t\"./en-nz\": 242,\n\t\"./en-nz.js\": 242,\n\t\"./eo\": 243,\n\t\"./eo.js\": 243,\n\t\"./es\": 244,\n\t\"./es-do\": 245,\n\t\"./es-do.js\": 245,\n\t\"./es-us\": 246,\n\t\"./es-us.js\": 246,\n\t\"./es.js\": 244,\n\t\"./et\": 247,\n\t\"./et.js\": 247,\n\t\"./eu\": 248,\n\t\"./eu.js\": 248,\n\t\"./fa\": 249,\n\t\"./fa.js\": 249,\n\t\"./fi\": 250,\n\t\"./fi.js\": 250,\n\t\"./fo\": 251,\n\t\"./fo.js\": 251,\n\t\"./fr\": 252,\n\t\"./fr-ca\": 253,\n\t\"./fr-ca.js\": 253,\n\t\"./fr-ch\": 254,\n\t\"./fr-ch.js\": 254,\n\t\"./fr.js\": 252,\n\t\"./fy\": 255,\n\t\"./fy.js\": 255,\n\t\"./ga\": 256,\n\t\"./ga.js\": 256,\n\t\"./gd\": 257,\n\t\"./gd.js\": 257,\n\t\"./gl\": 258,\n\t\"./gl.js\": 258,\n\t\"./gom-latn\": 259,\n\t\"./gom-latn.js\": 259,\n\t\"./gu\": 260,\n\t\"./gu.js\": 260,\n\t\"./he\": 261,\n\t\"./he.js\": 261,\n\t\"./hi\": 262,\n\t\"./hi.js\": 262,\n\t\"./hr\": 263,\n\t\"./hr.js\": 263,\n\t\"./hu\": 264,\n\t\"./hu.js\": 264,\n\t\"./hy-am\": 265,\n\t\"./hy-am.js\": 265,\n\t\"./id\": 266,\n\t\"./id.js\": 266,\n\t\"./is\": 267,\n\t\"./is.js\": 267,\n\t\"./it\": 268,\n\t\"./it-ch\": 269,\n\t\"./it-ch.js\": 269,\n\t\"./it.js\": 268,\n\t\"./ja\": 270,\n\t\"./ja.js\": 270,\n\t\"./jv\": 271,\n\t\"./jv.js\": 271,\n\t\"./ka\": 272,\n\t\"./ka.js\": 272,\n\t\"./kk\": 273,\n\t\"./kk.js\": 273,\n\t\"./km\": 274,\n\t\"./km.js\": 274,\n\t\"./kn\": 275,\n\t\"./kn.js\": 275,\n\t\"./ko\": 276,\n\t\"./ko.js\": 276,\n\t\"./ku\": 277,\n\t\"./ku.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 289,\n\t\"./ms-my\": 290,\n\t\"./ms-my.js\": 290,\n\t\"./ms.js\": 289,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 295,\n\t\"./nl-be\": 296,\n\t\"./nl-be.js\": 296,\n\t\"./nl.js\": 295,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 300,\n\t\"./pt-br\": 301,\n\t\"./pt-br.js\": 301,\n\t\"./pt.js\": 300,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 310,\n\t\"./sr-cyrl\": 311,\n\t\"./sr-cyrl.js\": 311,\n\t\"./sr.js\": 310,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 324,\n\t\"./tzm-latn\": 325,\n\t\"./tzm-latn.js\": 325,\n\t\"./tzm.js\": 324,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 329,\n\t\"./uz-latn\": 330,\n\t\"./uz-latn.js\": 330,\n\t\"./uz.js\": 329,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 598;","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport type {User} from \"../types/User\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport type {Question} from \"../types/Questionnaire\";\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\n\nexport type LoadHomeStateFinishedAction = {\n  type: string,\n  payload: HomeState\n}\n\nexport type LoadQuestionnaireStartAction = {\n  type: string,\n  payload: QuestionnaireStartState\n}\n\nexport type LoadQuestionnaireSubmissionAction = {\n  type: string,\n  payload: QuestionnaireSubmissionState\n}\n\nexport type LoadTaskSubmissionAction = {\n  type: string,\n  payload: TaskSubmission\n};\n\nexport type PutDataInTaskSubmissionAction = {\n  type: string,\n  payload: Question\n};\n\nexport type MarkQuestionsNotApplicableInTaskSubmissionAction = {\n  type: string,\n  payload: Array<number>\n};\n\nexport type MoveToQuestionInTaskSubmissionAction = {\n  type: string,\n  payload: {\n    currentIndex: number,\n    targetIndex: number,\n  }\n};\n\nexport type SetCurrentUserAction = {\n  type: string,\n  payload: User | null\n};\n\nexport type SetSiteTitleAction = {\n  type: string,\n  payload: string\n};\n\nexport type LoadAvailableComponentsAction = {\n  type: string,\n  payload: Array<SecurityComponent>\n}\n\nexport type AddSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nexport type RemoveSelectedComponentAction = {\n  type: string,\n  payload: string,\n};\n\nconst ActionType = {\n  HOME: {\n    LOAD_HOME_STATE_STARTED: \"LOAD_HOME_STATE_STARTED\",\n    LOAD_HOME_STATE_FAILED: \"LOAD_HOME_STATE_FAILED\",\n    LOAD_HOME_STATE_FINISHED: \"LOAD_HOME_STATE_FINISHED\",\n  },\n  QUESTIONNAIRE: {\n    LOAD_QUESTIONNAIRE_START_STATE: \"LOAD_QUESTIONNAIRE_START_STATE\",\n    LOAD_QUESTIONNAIRE_SUBMISSION_STATE: \"LOAD_QUESTIONNAIRE_SUBMISSION_STATE\",\n    PUT_DATA_IN_QUESTIONNAIRE_ANSWER: \"PUT_DATA_IN_QUESTIONNAIRE_ANSWER\",\n    MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION: \"MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION\",\n    MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE: \"MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE\",\n    FETCH_MY_SUBMISSION_LIST: \"QUESTIONNAIRE/FETCH_MY_SUBMISSION_LIST\"\n  },\n  TASK: {\n    LOAD_TASK_SUBMISSION: \"ACTION_TASK_LOAD_TASK_SUBMISSION\",\n    PUT_DATA_IN_TASK_SUBMISSION: \"ACTION_TASK_PUT_DATA_IN_TASK_SUBMISSION\",\n    MARK_TASK_QUESTION_NOT_APPLICABLE: \"ACTION_TASK_MARK_TASK_QUESTION_NOT_APPLICABLE\",\n    MOVE_TO_ANOTHER_TASK_QUESTION: \"ACTION_TASK_MOVE_TO_ANOTHER_TASK_QUESTION\",\n    COMPLETE_TASK_SUBMISSION: \"ACTION_TASK_COMPLETE_TASK_SUBMISSION\",\n    EDIT_TASK_SUBMISSION: \"ACTION_TASK_EDIT_TASK_SUBMISSION\",\n  },\n  COMPONENT_SELECTION: {\n    SET_AVAILABLE_COMPONENTS: \"ACTION_COMPONENT_SELECTION_SET_AVAILABLE_COMPONENTS\",\n    ADD_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_ADD_SELECTED_COMPONENT\",\n    REMOVE_SELECTED_COMPONENT: \"ACTION_COMPONENT_SELECTION_REMOVE_SELECTED_COMPONENT\",\n    SET_JIRA_TICKETS: \"ACTION_COMPONENT_SELECTION_SET_JIRA_TICKETS\",\n    SET_VIEW_MODE: \"ACTION_COMPONENT_SELECTION_SET_VIEW_MODE\"\n  },\n  // TODO: add a global UI state to reflect loading and error\n  UI: {\n    LOAD_DATA_STARTED: \"LOAD_DATA_STARTED\",\n    LOAD_DATA_FAILED: \"LOAD_DATA_FAILED\",\n    LOAD_DATA_FINISHED: \"LOAD_DATA_FINISHED\",\n  },\n  USER: {\n    SET_CURRENT_USER: \"ACTION_USER_SET_CURRENT_USER\",\n  },\n  SITE_CONFIG: {\n    SET_SITE_TITLE: \"ACTION_SITE_CONFIG_SET_SITE_TITLE\",\n  },\n};\n\nexport default ActionType;\n","// @flow\n\nexport default class URLUtil {\n\n  static redirectToQuestionnaireEditing(uuid: string) {\n    window.location.href = `/#/questionnaire/submission/${uuid}`;\n  }\n\n  static redirectToQuestionnaireReview(uuid: string) {\n    window.location.href = `/#/questionnaire/review/${uuid}`;\n  }\n\n  static redirectToQuestionnaireSummary(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/questionnaire/summary/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/questionnaire/summary/${uuid}`;\n  }\n\n  static redirectToTaskSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/task/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/task/submission/${uuid}`;\n  }\n\n  static redirectToComponentSelectionSubmission(uuid: string, token: string = \"\") {\n    if (token) {\n      window.location.href = `/businessOwnerApproval/#/component-selection/submission/${uuid}?token=${token}`;\n      return;\n    }\n\n    window.location.href = `/#/component-selection/submission/${uuid}`;\n  }\n\n  static redirectToLogout() {\n    window.location.href = \"/Security/Logout\";\n  }\n\n  static redirectToLogin() {\n    window.location.href = \"/Security/login?BackURL=%2F\";\n  }\n\n  static redirectToHome() {\n    window.location.href = \"/\";\n  }\n}\n","// @flow\n\nimport compress from \"graphql-query-compress\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport URLUtil from \"./URLUtil\";\n\nexport type GraphQLRequestArgument = {\n  query: string,\n  variables?: Object,\n  csrfToken?: string\n};\n\nexport default class GraphQLRequestHelper {\n\n  static async request(argument: GraphQLRequestArgument): Promise<Object> {\n    const {query, variables, csrfToken} = {...argument};\n    const headers = {};\n\n    if (csrfToken) {\n      headers[\"X-CSRF-TOKEN\"] = csrfToken;\n    }\n\n    const data = {\n      query: compress(query),\n      variables: variables,\n    };\n\n    const response = await axios.request({\n      url: \"/graphql\",\n      method: \"post\",\n      data: data,\n      headers: headers,\n    });\n    const json = response.data;\n\n    // Deal with common error\n    const errorMessage = _.get(json, \"errors.0.message\", null);\n    if (errorMessage) {\n      throw new Error(errorMessage);\n    }\n\n    return json;\n  }\n}\n","// @flow\n\nexport const DEFAULT_NETWORK_ERROR = new Error(\"There is an error when fetching data...\");\nexport const DEFAULT_PARSE_ERROR = new Error(\"There is an error when parsing data...\");\n","// @flow\n\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {DEFAULT_PARSE_ERROR} from \"../constants/errors\";\n\n\nfunction parseAnswersFromJSON(answersJSON: string): Object {\n  if (!answersJSON) {\n    return {};\n  }\n\n  const jsonObject = JSON.parse(answersJSON);\n  const answers = {};\n  if (jsonObject) {\n    _.keys(jsonObject).forEach((key) => {\n      answers[_.toString(key)] = jsonObject[key];\n    });\n  }\n  return answers;\n}\n\nfunction parseSchemaFromJSON(schemaJSON: string): Array<*> {\n  const schema = JSON.parse(schemaJSON);\n  if(!schema || !Array.isArray(schema)) {\n    throw DEFAULT_PARSE_ERROR;\n  }\n  return schema;\n}\n\nfunction findCurrentQuestionID(answers: Object): string {\n  let currentQuestionID = \"\";\n  _.keys(answers).forEach((questionID) => {\n    const answer = answers[questionID];\n    if (!currentQuestionID && Boolean(_.get(answer, `isCurrent`, false))) {\n      currentQuestionID = questionID;\n    }\n  });\n\n  return currentQuestionID;\n}\n\nexport default class QuestionParser {\n\n  static parseQuestionsFromJSON(argument: {\n    schemaJSON: string,\n    answersJSON: string\n  }): Array<Question> {\n    const {schemaJSON, answersJSON} = {...argument};\n\n    const schema = parseSchemaFromJSON(schemaJSON);\n    const answers = parseAnswersFromJSON(answersJSON);\n    const currentQuestionID = findCurrentQuestionID(answers);\n\n    return schema.map((questionSchema, schemaIndex) => {\n      const questionID = _.toString(_.get(questionSchema, \"ID\", \"\"));\n      const hasAnswer = Boolean(_.get(answers, `${questionID}.hasAnswer`, false));\n      const isApplicable = Boolean(_.get(answers, `${questionID}.isApplicable`, true));\n\n      // Mark the question as the current one if it is\n      // Otherwise the first question will be the current one by default\n      let isCurrent = false;\n      if (currentQuestionID) {\n        isCurrent = (currentQuestionID === questionID);\n      } else {\n        isCurrent = (schemaIndex === 0);\n      }\n\n      let inputs = null;\n      let actions = null;\n\n      const inputAnswers = hasAnswer ? _.get(answers, `${questionID}.inputs`, []) : [];\n      const actionAnswers = hasAnswer ? _.get(answers, `${questionID}.actions`, []) : [];\n\n      const inputSchemas = _.get(questionSchema, \"AnswerInputFields\", []);\n      const actionSchemas = _.get(questionSchema, \"AnswerActionFields\", []);\n\n      if (inputSchemas && Array.isArray(inputSchemas) && inputSchemas.length > 0) {\n        inputs = inputSchemas.map((inputSchema) => {\n          // Schema of input\n          let type = _.toString(_.get(inputSchema, \"InputType\", \"\")).toLowerCase();\n          const validTypes = [\"text\", \"email\", \"textarea\", \"date\", \"url\"];\n          if (!validTypes.includes(type)) {\n            type = \"text\";\n          }\n\n          const inputID = _.toString(_.get(inputSchema, \"ID\", \"\"));\n          const input: AnswerInput = {\n            id: inputID,\n            label: _.toString(_.get(inputSchema, \"Label\", \"\")),\n            type: type,\n            required: Boolean(_.toInteger(_.get(inputSchema, \"Required\", false))),\n            minLength: Number.parseInt(_.toString(_.get(inputSchema, \"MinLength\", 0))),\n            placeholder: _.toString(_.get(inputSchema, \"PlaceHolder\", \"\")),\n            data: null,\n          };\n\n          // Data of input\n          if (inputAnswers && Array.isArray(inputAnswers) && inputAnswers.length > 0) {\n            const answer = _.head(inputAnswers.filter((answer) => answer.id === inputID));\n            if (answer) {\n              const inputData = _.toString(_.get(answer, \"data\", null));\n              if (inputData) {\n                input.data = inputData;\n              }\n            }\n          }\n\n          return input;\n        });\n      }\n\n      if (actionSchemas && Array.isArray(actionSchemas) && actionSchemas.length > 0) {\n        actions = actionSchemas.map((actionSchema) => {\n          // Schema of action\n          let type = _.toString(_.get(actionSchema, \"ActionType\", \"\")).toLowerCase();\n          const validTypes = [\"continue\", \"goto\", \"message\", \"finish\"];\n          if (!validTypes.includes(type)) {\n            type = \"continue\";\n          }\n\n          const actionID = _.toString(_.get(actionSchema, \"ID\", \"\"));\n          const action: AnswerAction = {\n            id: actionID,\n            label: _.toString(_.get(actionSchema, \"Label\", \"\")),\n            type: type,\n            isChose: false,\n          };\n\n          if (type === \"message\") {\n            action.message = _.toString(_.get(actionSchema, \"Message\", \"\"));\n          }\n\n          if (type === \"goto\") {\n            action.goto = _.toString(_.get(actionSchema, \"GotoID\", \"\"));\n          }\n\n          if (type === \"finish\") {\n            action.result = _.toString(_.get(actionSchema, \"Result\", \"\"));\n          }\n\n          // Task of action\n          const taskID = _.toString(_.get(actionSchema, \"TaskID\", \"\"));\n          action.taskID = taskID;\n\n          // Data of action\n          if (actionAnswers && Array.isArray(actionAnswers) && actionAnswers.length > 0) {\n            const answer = _.head(actionAnswers.filter((answer) => answer.id === actionID));\n            if (answer) {\n              const isChose = Boolean(_.get(answer, \"isChose\", false));\n              action.isChose = isChose;\n            }\n          }\n\n          return action;\n        });\n      }\n\n      const question: Question = {\n        id: questionID,\n        title: _.toString(_.get(questionSchema, \"Title\", \"\")),\n        heading: _.toString(_.get(questionSchema, \"Question\", \"\")),\n        description: _.toString(_.get(questionSchema, \"Description\", \"\")),\n        type: _.toString(_.get(questionSchema, \"AnswerFieldType\", \"\")).toLowerCase() === \"input\" ? \"input\" : \"action\",\n        isCurrent: isCurrent,\n        hasAnswer: hasAnswer,\n        isApplicable: isApplicable,\n      };\n\n      if (inputs) {\n        question.inputs = inputs;\n      }\n      if (actions) {\n        question.actions = actions;\n      }\n\n      return question;\n    });\n  }\n}\n","// @flow\n\nimport toString from \"lodash/toString\";\nimport get from \"lodash/get\";\nimport type {Task} from \"../types/Task\";\nimport QuestionParser from \"./QuestionParser\";\n\nexport default class TaskParser {\n\n  static parseFromJSONObject(jsonObject: *): Task {\n    const id = toString(get(jsonObject, \"ID\", \"\"));\n    const name = toString(get(jsonObject, \"Name\", \"\"));\n\n    let type = toString(get(jsonObject, \"TaskType\", \"\"));\n    switch (type) {\n      case \"questionnaire\":\n      case \"selection\":\n        break;\n      default:\n        type = \"questionnaire\";\n    }\n\n    let questions = [];\n    const schemaJSON = toString(get(jsonObject, \"QuestionsDataJSON\", \"\"));\n    if (schemaJSON) {\n      questions = QuestionParser.parseQuestionsFromJSON({\n        schemaJSON,\n        answersJSON: \"{}\"\n      });\n    }\n\n    return {id, name, type, questions};\n  }\n}\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\n\nimport PocIcon from \"../../img/Home/poc-icon.svg\";\nimport SaasIcon from \"../../img/Home/saas-icon.svg\";\nimport ProdIcon from \"../../img/Home/prod-icon.svg\";\nimport BugIcon from \"../../img/Home/bug-icon.svg\";\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Pillar} from \"../types/Pillar\";\nimport type {Task} from \"../types/Task\";\nimport TaskParser from \"../utils/TaskParser\";\n\nexport default class HomeDataService {\n\n  static async fetchHomeData(): Promise<HomeState> {\n    // GraphQL\n    const query = `\nquery {\n  readDashboard {\n    Title\n    Subtitle\n    Pillars {\n      Label\n      Type\n      Disabled\n      Questionnaire {\n        ID\n      }\n    }\n    Tasks {\n      ID\n      Name\n      TaskType\n    }\n  }\n}`;\n\n    // Send request\n    const json = await GraphQLRequestHelper.request({query});\n    const data = get(json, \"data.readDashboard\", []);\n    if (!Array.isArray(data) || data.length === 0) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    // Parse data for use in frontend\n    const dashboardJSON = data[0];\n\n    const title = toString(get(dashboardJSON, \"Title\", \"\"));\n    const subtitle = toString(get(dashboardJSON, \"Subtitle\", \"\"));\n\n    const pillarsJSONArray = get(dashboardJSON, \"Pillars\", []);\n    const pillars = this.parsePillars(pillarsJSONArray);\n\n    const taskJSONArray = get(dashboardJSON, \"Tasks\", []);\n    const tasks = this.parseTasks(taskJSONArray);\n\n    return {\n      title,\n      subtitle,\n      pillars,\n      tasks,\n    };\n  }\n\n  static parsePillars(pillarsJSONArray: Array<*>): Array<Pillar> {\n    if (!Array.isArray(pillarsJSONArray)) {\n      return [];\n    }\n    const pillars = pillarsJSONArray.map(item => {\n      let icon = \"\";\n      switch (item[\"Type\"]) {\n        case \"proof_of_concept\":\n          icon = PocIcon;\n          break;\n        case \"software_as_service\":\n          icon = SaasIcon;\n          break;\n        case \"product_project_or_solution\":\n          icon = ProdIcon;\n          break;\n        case \"feature_or_bug_fix\":\n          icon = BugIcon;\n          break;\n      }\n\n      return {\n        title: toString(get(item, \"Label\", \"\")),\n        disabled: Boolean(get(item, \"Disabled\", true)),\n        questionnaireID: toString(get(item, \"Questionnaire.0.ID\", \"\")),\n        icon: icon,\n      };\n    });\n    return pillars;\n  }\n\n  static parseTasks(tasksJSONArray: Array<*>): Array<Task> {\n    if (!Array.isArray(tasksJSONArray)) {\n      return [];\n    }\n\n    const tasks = [];\n    tasksJSONArray.forEach((taskJSON) => {\n      const task = TaskParser.parseFromJSONObject(taskJSON);\n      tasks.push(task);\n    });\n    return tasks;\n  }\n}\n","// @flow\n\nexport default class ErrorUtil {\n\n  static displayError(error: Error, rethrow: boolean = true) {\n    alert(error);\n    if (rethrow) {\n      throw error;\n    }\n  }\n}\n","// @flow\n\nimport type {LoadHomeStateFinishedAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport HomeDataService from \"../services/HomeDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadHomeState(): ThunkAction {\n  return async (dispatch) => {\n    try {\n      const homeState = await HomeDataService.fetchHomeData();\n      const action: LoadHomeStateFinishedAction = {\n        type: ActionType.HOME.LOAD_HOME_STATE_FINISHED,\n        payload: homeState,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport type {Pillar as PillarType} from \"../../types/Pillar\";\n\ntype Props = {\n  link: string,\n  classes: Array<string>,\n  pillar: PillarType\n};\n\nclass Pillar extends Component<Props> {\n\n  render() {\n\n    const classes = [\"Pillar\", ...this.props.classes];\n    if (this.props.pillar.disabled) {\n      classes.push(\"disabled\")\n    }\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link} onClick={(event) => {\n        if(this.props.pillar.disabled) {\n          event.preventDefault();\n          alert(\"Coming soon...\");\n        }\n      }}>\n        <div className=\"icon\">\n          <img src={this.props.pillar.icon} alt={this.props.pillar.title}/>\n        </div>\n        <div className=\"title\">\n          {this.props.pillar.title}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pillar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\ntype Props = {\n  link: string,\n  title: string,\n  classes: Array<string>,\n};\n\nclass TaskButton extends Component<Props> {\n\n  render() {\n    const classes = [\"TaskButton\", ...this.props.classes];\n\n    return (\n      <Link className={classes.join(\" \")} to={this.props.link}>\n        {this.props.title}\n      </Link>\n    );\n  }\n}\n\nexport default TaskButton;\n","// @flow\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default class CSRFTokenService {\n\n  static async getCSRFToken() {\n\n    const response = await axios.request({\n      url: \"/getCSRFToken\",\n      method: \"get\",\n      headers: {\n        \"x-requested-with\": \"XMLHttpRequest\"\n      }\n    });\n    const data = response.data;\n    const token = _.get(data, \"CSRFToken\", null);\n    if (!token) {\n      throw new Error(data);\n    }\n    return token;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/user.svg\";\nimport CSRFTokenService from '../../services/CSRFTokenService';\n\ntype Props = {\n  classes: Array<string>\n};\n\nclass LogoutButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.logout();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          Log Out\n        </div>\n      </button>\n    );\n  }\n\n\n  async logout() {\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    window.location.href = `/Security/Logout?SecurityID=${csrfToken}`;\n  }\n}\n\nexport default LogoutButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport Icon from \"../../../img/icons/question-editing.svg\";\n\n\nclass MySubmissionButton extends Component<Props> {\n\n  static defaultProps = {\n    classes: []\n  };\n\n  render() {\n    const {classes} = {...this.props};\n\n    return (\n      <button className={`LogoutButton ${classes.join(\" \")}`}\n        onClick={() => {\n          this.allSubmission();\n        }}\n      >\n        <div>\n          <img src={Icon} />\n          My Submissions\n        </div>\n      </button>\n    );\n  }\n\n\n  async allSubmission() {\n    window.location.href = `#/MySubmissions`;\n  }\n}\n\nexport default MySubmissionButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Pillar from \"./Pillar\";\nimport TaskButton from \"./TaskButton\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport LogoutButton from \"../Button/LogoutButton\";\nimport MySubmissionButton from \"../Button/MySubmissionButton\";\nimport type {Task} from \"../../types/Task\";\n\ntype Props = {\n  homeState: HomeState\n};\n\nclass Home extends Component<Props> {\n\n  render() {\n    const {title, subtitle, pillars, tasks} = {...this.props.homeState};\n\n    return (\n      <div className=\"Home\">\n        <LogoutButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-5\"]}/>\n\n        <MySubmissionButton classes={[\"clearfix\",\"float-right\", \"mt-5\", \"mr-1\"]}/>\n\n        <div className=\"layout\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n          <h1>\n            {title}\n          </h1>\n          <h2>\n            {subtitle}\n          </h2>\n          <div className=\"pillars\">\n            <div className=\"row\">\n              {pillars.map((pillar, index) => {\n                return (\n                  <Pillar link={`/questionnaire/start/${pillar.questionnaireID}`}\n                          classes={[\"col\", \"mx-1\"]}\n                          pillar={pillar}\n                          key={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"tasks\">\n            {tasks.map((task: Task) => {\n              let link = `/tasks/standalone/${task.id}`;\n              if (task.type === \"selection\") {\n                link = \"/component-selection/standalone\";\n              }\n              return (\n                <TaskButton link={link} classes={[\"mx-1\"]} title={task.name}/>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// @flow\n\nimport React, {Component} from \"react\";\n\nclass Footer extends Component<*> {\n\n  render() {\n    return (\n      <footer className=\"Footer\">\n        <div>\n          © 2019 | NZ Transport Agency\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {loadHomeState} from \"../../actions/home\";\nimport {Dispatch} from \"redux\";\nimport Home from \"./Home\";\nimport type {HomeState} from \"../../store/HomeState\";\nimport Footer from \"../Footer/Footer\";\nimport BackgroundImage from \"../../../img/Home/background.jpg\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    homeState: state.homeState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadHomeDataAction: () => {\n      dispatch(loadHomeState());\n    },\n  };\n};\n\ntype Props = {\n  homeState?: HomeState,\n  dispatchLoadHomeDataAction?: () => void\n};\n\nclass HomeContainer extends Component<Props> {\n\n  componentDidMount() {\n    if (this.props.dispatchLoadHomeDataAction) {\n      this.props.dispatchLoadHomeDataAction();\n    }\n  }\n\n  render() {\n    if (!this.props.homeState) {\n      return null;\n    }\n\n    return (\n      <div className=\"HomeContainer\" style={{\n        backgroundImage: `url(\"${BackgroundImage}\")`,\n        backgroundSize: \"cover\"\n      }}>\n        <Home homeState={this.props.homeState}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass BaseButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    const {title, classes, disabled, onClick, iconImage} = {...this.props};\n\n    let icon = null;\n    if (iconImage) {\n      icon = <img src={iconImage}/>;\n    }\n\n    return (\n      <button className={classNames(\"BaseButton\", classes, {\"disabled\": disabled})}\n              onClick={(event) => {\n                if (disabled) {\n                  event.preventDefault();\n                  return;\n                }\n                onClick(event);\n              }}\n      >\n        {icon}\n        {title}\n      </button>\n    );\n  }\n}\n\nexport default BaseButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass LightButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {},\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"LightButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default LightButton;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {User} from \"../../types/User\";\nimport LightButton from \"../Button/LightButton\";\n\ntype Props = {\n  keyInformation: string,\n  user: User,\n  onStartButtonClick:() => void\n};\n\nclass Start extends Component<Props> {\n\n  render() {\n    const {keyInformation, user, onStartButtonClick} = this.props;\n\n    return (\n      <div className=\"Start\">\n        <div className=\"start-form\">\n          <div className=\"info-box\">\n            <div className=\"key-info-title\">Key Information:</div>\n            <div className=\"key-info\"\n                 dangerouslySetInnerHTML={{\n                   __html: keyInformation\n                 }}\n            />\n            <div className='user-info'>\n              <div className=\"info-line\">\n                <b>Your Name: </b>\n                <span>{user.name}</span>\n              </div>\n              <div className=\"info-line\">\n                <b>Email Address: </b>\n                <span>{user.email}</span>\n              </div>\n            </div>\n            <div className=\"actions\">\n              <LightButton title=\"START\" onClick={onStartButtonClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\n\nexport default class UserParser {\n\n  static parseUserFromJSON(userJSON: string | Object): User {\n    const jsonObject = (typeof userJSON === \"string\" ? JSON.parse(userJSON) : userJSON);\n\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: `${get(jsonObject, \"FirstName\")} ${get(jsonObject, \"Surname\")}`,\n      email: get(jsonObject, \"Email\"),\n      isSA: toString(get(jsonObject, \"IsSA\")) === \"true\",\n      isCISO: toString(get(jsonObject, \"IsCISO\")) === \"true\",\n    }\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {SubmissionQuestionData, MyQuestionnaireItem} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class QuestionnaireDataService {\n\n  static async createInProgressSubmission(argument: { questionnaireID: string, csrfToken: string }): Promise<string> {\n    const {questionnaireID, csrfToken} = {...argument};\n    const query = `\nmutation {\n createQuestionnaireSubmission(QuestionnaireID: ${questionnaireID}){\n   UUID\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const submissionHash = _.get(json, \"data.createQuestionnaireSubmission.UUID\", null);\n    if (!submissionHash) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return submissionHash;\n  }\n\n  static async fetchStartData(questionnaireID: string): Promise<QuestionnaireStartState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaire(ID: ${questionnaireID}) {\n    ID\n    Name\n    KeyInformation\n  }\n  readSiteConfig {\n    Title\n  }\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query});\n    const memberData = _.get(json, \"data.readCurrentMember.0\", null);\n    const questionnaireData = _.get(json, \"data.readQuestionnaire\", null);\n    const siteData = _.get(json, \"data.readSiteConfig.0\", null);\n\n    if (!memberData || !questionnaireData || !siteData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    return {\n      title: _.get(questionnaireData, \"Name\", \"\"),\n      subtitle: _.get(siteData, \"Title\", \"\"),\n      questionnaireID: _.get(questionnaireData, \"ID\", \"\"),\n      keyInformation: _.get(questionnaireData, \"KeyInformation\", \"\"),\n      user: UserParser.parseUserFromJSON(memberData),\n    };\n  }\n\n  static async fetchSubmissionData(submissionHash: string): Promise<QuestionnaireSubmissionState> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n  readQuestionnaireSubmission(UUID: \"${submissionHash}\") {\n    ID\n    UUID\n    ApprovalLinkToken\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    IsCurrentUserABusinessOwnerApprover\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const memberData = _.get(json, \"data.readCurrentMember.0\", {});\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!memberData || !submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      title: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n\n      user: UserParser.parseUserFromJSON(memberData),\n      isCurrentUserApprover: _.get(submissionJSON, \"IsCurrentUserAnApprover\", \"false\") === \"true\",\n      isCurrentUserABusinessOwnerApprover: _.get(submissionJSON, \"IsCurrentUserABusinessOwnerApprover\", \"false\") === \"true\",\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submissionToken: _.toString(_.get(submissionJSON, \"ApprovalLinkToken\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false,\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async updateSubmissionData(argument: {\n    submissionID: string,\n    questionID: string,\n    answerData: SubmissionQuestionData,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionID, answerData, csrfToken} = {...argument};\n    const answerDataStr = window.btoa(JSON.stringify(answerData));\n\n    const query = `\nmutation {\n  updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n    ID\n    AnswerData\n  }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data.updateQuestionnaireSubmission.AnswerData\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async batchUpdateSubmissionData(argument: {\n    submissionID: string,\n    questionIDList: Array<string>,\n    answerDataList: Array<SubmissionQuestionData>,\n    csrfToken: string\n  }): Promise<void> {\n    const {submissionID, questionIDList, answerDataList, csrfToken} = {...argument};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      const singleQuery = `\nupdateQuestion${questionID}: updateQuestionnaireSubmission(ID: \"${submissionID}\", QuestionID: \"${questionID}\", AnswerData: \"${answerDataStr}\") {\n  ID\n  AnswerData\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = _.get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async submitQuestionnaire(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToSubmitted(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToSubmitted.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToSubmitted.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async submitQuestionnaireForApproval(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToWaitingForSecurityArchitectApproval(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToWaitingForSecurityArchitectApproval.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async approveQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnApproveByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnApproveByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireOnDenyByGroupMember(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireOnDenyByGroupMember.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editQuestionnaireSubmission(argument: { submissionID: string, csrfToken: string }): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToInProgress(ID: \"${submissionID}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToInProgress.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchUserSubmissionList(userID: string): Promise<Array<MyQuestionnaireItem>> {\n    const query = `query {\n      readQuestionnaireSubmission(UserID: \"${userID}\") {\n        ID\n        UUID\n        QuestionnaireStatus\n        QuestionnaireName\n        Created\n        ProductName\n      }\n    }`;\n\n    const json = await GraphQLRequestHelper.request({query});\n\n    // TODO: parse data\n    const data = _.get(json, 'data.readQuestionnaireSubmission', []);\n    if (!Array.isArray(data)) {\n      throw 'error';\n    }\n\n    return data.map((item: any) : MyQuestionnaire => {\n      let obj = {};\n      obj['id'] = _.get(item, 'ID', '');\n      obj['uuid'] = _.get(item, 'UUID', '');\n      obj['status'] = _.get(item, 'QuestionnaireStatus', '');\n      obj['productName'] = _.get(item, 'ProductName', '');\n      obj['questionnaireName'] = _.get(item, 'QuestionnaireName', '');\n      obj['created'] = _.get(item, 'Created', '');\n      return obj;\n    });\n  }\n}\n","// @flow\n\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\n\ntype CalculateCursorMoveFromQuestionArgument = {\n  answeredQuestion: Question,\n  questions: Array<Question>\n};\n\ntype CalculateCursorMoveFromQuestionReturn = {\n  currentIndex: number,\n  targetIndex: number,\n  nonApplicableIndexes: Array<number>,\n  complete: boolean,\n  terminate: boolean,\n  result: string\n};\n\nexport default class SubmissionDataUtil {\n\n  static transformFromFullQuestionToData(fullQuestion: Question): SubmissionQuestionData {\n    const answerData: SubmissionQuestionData = {\n      isCurrent: fullQuestion.isCurrent,\n      hasAnswer: fullQuestion.hasAnswer,\n      isApplicable: fullQuestion.isApplicable,\n      answerType: fullQuestion.type,\n    };\n\n    if (fullQuestion.type === \"input\" && Array.isArray(fullQuestion.inputs)) {\n      answerData.inputs = fullQuestion.inputs.map((input) => {\n        let data = input.data;\n        if (data && _.isString(data)) {\n          data = data.trim();\n        }\n\n        return {\n          id: input.id,\n          data: data,\n        };\n      });\n    }\n\n    if (fullQuestion.type === \"action\" && Array.isArray(fullQuestion.actions)) {\n      answerData.actions = fullQuestion.actions.map((action) => {\n        return {\n          id: action.id,\n          isChose: action.isChose,\n        };\n      });\n    }\n\n    return answerData;\n  }\n\n  static existsUnansweredQuestion(questions: Array<Question>): boolean {\n    let hasUnansweredQuestion = false;\n    questions.forEach((question) => {\n      const {hasAnswer, isApplicable} = {...question};\n      // Invalid question state: does not have answer and still available\n      if (!hasAnswer && isApplicable) {\n        hasUnansweredQuestion = true;\n      }\n    });\n    return hasUnansweredQuestion;\n  }\n\n  static existsIncompleteTaskSubmission(taskSubmissions: Array<TaskSubmissionDisplay>): boolean {\n    let exists = false;\n    taskSubmissions.forEach((taskSubmission) => {\n      if (taskSubmission.status === \"in_progress\") {\n        exists = true;\n      }\n    });\n    return exists;\n  }\n\n  static getDataUpdateIntent(\n    argument: CalculateCursorMoveFromQuestionArgument,\n  ): CalculateCursorMoveFromQuestionReturn {\n    const {answeredQuestion, questions} = {...argument};\n\n    const currentIndex = questions.findIndex((question) => question.id === answeredQuestion.id);\n    const isLastQuestion = (currentIndex === questions.length - 1);\n\n    const returnPackage = {\n      currentIndex: currentIndex,\n      nonApplicableIndexes: [],\n      targetIndex: 0,\n      complete: false,\n      terminate: false,\n      result: \"\"\n    };\n\n    // Process for input question\n    if (answeredQuestion.type === \"input\") {\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      } else {\n        // Move to next question\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      return returnPackage;\n    }\n\n    // If question is action type, move to the defined target\n    if (answeredQuestion.type === \"action\") {\n      if (!answeredQuestion.actions) {\n        throw new Error(\"This question does not have any action!\");\n      }\n\n      const choseAction = answeredQuestion.actions.find((action) => {\n        return action.isChose;\n      });\n      if (!choseAction) {\n        throw new Error(\"This question does not have any chosen action!\");\n      }\n\n      // \"continue\" | \"goto\" | \"message\" | \"finish\"\n      if (choseAction.type === \"finish\") {\n        // Mark all questions later to be non-applicable\n        for (let i = returnPackage.currentIndex + 1; i < questions.length; i++) {\n          returnPackage.nonApplicableIndexes.push(i);\n        }\n\n        returnPackage.result = choseAction.result || \"\";\n        returnPackage.complete = true;\n      }\n\n      if (choseAction.type === \"message\") {\n        returnPackage.terminate = true;\n      }\n\n      if (choseAction.type === \"continue\" && !isLastQuestion) {\n        returnPackage.targetIndex = returnPackage.currentIndex + 1;\n      }\n\n      if (choseAction.type === \"goto\") {\n        // Go to another question, need to mark questions between current and target to be non-applicable\n        const targetID = choseAction.goto;\n        returnPackage.targetIndex = questions.findIndex((question) => {\n          return question.id === targetID;\n        });\n\n        // Don't move if the target index is wrong\n        if (returnPackage.targetIndex <= returnPackage.currentIndex) {\n          throw new Error(\"The next question is not set correctly!\");\n        }\n\n        // Find questions between target and current to be \"not applicable\"\n        if (returnPackage.targetIndex - returnPackage.currentIndex > 1) {\n          let cursor = returnPackage.currentIndex + 1;\n          while (cursor < returnPackage.targetIndex) {\n            returnPackage.nonApplicableIndexes.push(cursor);\n            cursor++;\n          }\n        }\n      }\n\n      if (isLastQuestion) {\n        // Mark complete if this is the last question\n        returnPackage.complete = true;\n      }\n      return returnPackage;\n    }\n\n    throw new Error(\"Wrong question type!\");\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class SecurityComponentParser {\n\n  static parseFromJSONOArray(jsonArray: *): Array<SecurityComponent> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return SecurityComponentParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): SecurityComponent {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      name: toString(get(jsonObject, \"Name\")),\n      description: toString(get(jsonObject, \"Description\")),\n    }\n  }\n}\n","// @flow\n\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport toArray from \"lodash/toArray\";\n\nexport default class JiraTicketParser {\n\n  static parseFromJSONArray(jsonArray: *): Array<JiraTicket> {\n    return toArray(jsonArray).map((jsonObject) => {\n      return JiraTicketParser.parseFromJSONObject(jsonObject);\n    });\n  }\n\n  static parseFromJSONObject(jsonObject: *): JiraTicket {\n    return {\n      id: toString(get(jsonObject, \"ID\")),\n      jiraKey: toString(get(jsonObject, \"JiraKey\")),\n      link: toString(get(jsonObject, \"TicketLink\")),\n    }\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport uniq from \"lodash/uniq\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Question, SubmissionQuestionData} from \"../types/Questionnaire\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport TaskParser from \"../utils/TaskParser\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype BatchUpdateTaskSubmissionDataArgument = {\n  uuid: string,\n  questionIDList: Array<string>,\n  answerDataList: Array<SubmissionQuestionData>,\n  csrfToken: string,\n  secureToken?: string,\n};\n\nexport default class TaskDataService {\n\n  static async createTaskSubmissionsAccordingToQuestions(args: {\n    questions: Array<Question>,\n    questionnaireSubmissionID: string,\n    csrfToken: string,\n  }): Promise<void> {\n    const {questions, questionnaireSubmissionID, csrfToken} = {...args};\n\n    // Find task id list for questionnaire submission\n    const taskIDList = [];\n    questions.forEach((question: Question) => {\n      // Only applicable questions can generate task submissions\n      if (!question.isApplicable || !question.hasAnswer) {\n        return;\n      }\n\n      // Only action question can generate task submissions\n      if (question.type !== \"action\") {\n        return;\n      }\n\n      // Action data need to be valid\n      const actions = question.actions;\n      if (!actions || !Array.isArray(actions)) {\n        throw new Error(\"Invalid questionnaire data, please reload the questionnaire\");\n      }\n\n      // Push task id to the list\n      actions.forEach((action) => {\n        if (!action.isChose) {\n          return;\n        }\n\n        const taskID = action.taskID;\n        if (!taskID || Number.parseInt(taskID) <= 0) {\n          return;\n        }\n\n        taskIDList.push(taskID);\n      });\n    });\n\n    const uniqueTaskIDList = uniq(taskIDList);\n\n    // Stop if there is no task to create\n    if (uniqueTaskIDList.length === 0) {\n      return;\n    }\n\n    // Create task submissions in a batch manner\n    const mutations = [];\n    uniqueTaskIDList.forEach((taskID) => {\n      const query = `\ncreateTaskSubmission${taskID}: createTaskSubmission(TaskID: \"${taskID}\", QuestionnaireSubmissionID: \"${questionnaireSubmissionID}\") {\n  ID\n  UUID\n}`;\n      mutations.push(query);\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async fetchTaskSubmission(args: { uuid: string, secureToken?: string }): Promise<TaskSubmission> {\n    const {uuid, secureToken} = {...args};\n    const query = `\nquery {\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    QuestionnaireSubmission {\n      ID\n      UUID\n      QuestionnaireStatus\n    }\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = get(responseJSONObject, \"data.readTaskSubmission.0\", null);\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: TaskSubmission = {\n      id: toString(get(submissionJSONObject, \"ID\", \"\")),\n      uuid: toString(get(submissionJSONObject, \"UUID\", \"\")),\n      taskName: toString(get(submissionJSONObject, \"TaskName\", \"\")),\n      taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n      status: toString(get(submissionJSONObject, \"Status\", \"\")),\n      result: toString(get(submissionJSONObject, \"Result\", \"\")),\n      submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n      lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n      questionnaireSubmissionUUID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n      questionnaireSubmissionID: toString(get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n      questionnaireSubmissionStatus: toString(get(submissionJSONObject, \"QuestionnaireSubmission.QuestionnaireStatus\", \"\")),\n      questions: QuestionParser.parseQuestionsFromJSON({\n        schemaJSON: toString(get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n        answersJSON: toString(get(submissionJSONObject, \"AnswerData\", \"\")),\n      }),\n      selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n      jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n    };\n\n    return data;\n  }\n\n  static async batchUpdateTaskSubmissionData(args: BatchUpdateTaskSubmissionDataArgument): Promise<void> {\n    const {uuid, questionIDList, answerDataList, csrfToken, secureToken} = {...args};\n\n    if (questionIDList.length !== answerDataList.length) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    let mutations = [];\n    for (let index = 0; index < questionIDList.length; index++) {\n      const questionID = questionIDList[index];\n      const answerData = answerDataList[index];\n      const answerDataStr = window.btoa(JSON.stringify(answerData));\n      let singleQuery = `\nupdateQuestion${questionID}: updateTaskSubmission(\n  UUID: \"${uuid}\",\n  QuestionID: \"${questionID}\",\n  AnswerData: \"${answerDataStr}\",\n  SecureToken: \"${secureToken || \"\"}\"\n) {\n  UUID\n  Status\n}`;\n      mutations.push(singleQuery);\n    }\n\n    let query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}\n`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n  }\n\n  static async completeTaskSubmission(args: {\n    uuid: string,\n    result: string,\n    csrfToken: string,\n    secureToken: string\n  }): Promise<{ uuid: string }> {\n    const {uuid, result, csrfToken, secureToken} = {...args};\n    let query = `\nmutation {\n completeTaskSubmission(UUID: \"${uuid}\", Result: \"${result}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.completeTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async editTaskSubmission(args: { uuid: string, csrfToken: string, secureToken?: string }): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, secureToken} = {...args};\n\n    const query = `\nmutation {\n editTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken || \"\"}\") {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.editTaskSubmission.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async fetchStandaloneTask(args: { taskId: string }): Promise<Task> {\n    const {taskId} = {...args};\n    const query = `\nquery {\n  readTask(ID: \"${taskId}\") {\n    ID\n    Name\n    TaskType\n    QuestionsDataJSON\n  }\n}`;\n\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const taskJSONObject = get(responseJSONObject, \"data.readTask\", null);\n    if (!taskJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    const task = TaskParser.parseFromJSONObject(taskJSONObject);\n\n    return task;\n  }\n\n  static async updateTaskSubmissionWithSelectedComponents(\n    args: {\n      uuid: string,\n      csrfToken: string,\n      componentIDs: Array<string>,\n      jiraKey: string\n    }\n  ): Promise<{ uuid: string }> {\n    const {uuid, csrfToken, componentIDs, jiraKey} = {...args};\n\n    const query = `\nmutation {\n updateTaskSubmissionWithSelectedComponents(\n UUID: \"${uuid}\",\n ComponentIDs: \"${window.btoa(JSON.stringify(componentIDs))}\",\n JiraKey: \"${jiraKey}\"\n ) {\n   UUID\n   Status\n }\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    if (!get(json, \"data.updateTaskSubmissionWithSelectedComponents.UUID\", null)) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport type {Submission} from \"../types/Questionnaire\";\nimport type {TaskSubmissionDisplay} from \"../types/Task\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {User} from \"../types/User\";\n\ntype QuestionnaireSubmissionState = {\n  siteTitle: string,\n  submission: Submission | null,\n};\n\nexport default class QuestionnaireForBusinessOwnerDataService {\n\n  static async fetchSubmissionData(argument: { uuid: string, secureToken: string, isBusinessOwnerSummaryPage: string }): Promise<QuestionnaireSubmissionState> {\n    const {uuid, secureToken, isBusinessOwnerSummaryPage} = {...argument};\n    const query = `\nquery {\n  readQuestionnaireSubmission(UUID: \"${uuid}\", SecureToken: \"${secureToken}\", IsBusinessOwnerSummaryPage: \"${isBusinessOwnerSummaryPage}\") {\n    ID\n    UUID\n    User {\n      ID\n    }\n    SubmitterName,\n    SubmitterEmail,\n    QuestionnaireStatus,\n    BusinessOwnerApproverName,\n    Questionnaire {\n      ID\n      Name\n    }\n    QuestionnaireData\n    AnswerData\n    CisoApprovalStatus\n    BusinessOwnerApprovalStatus\n    SecurityArchitectApprovalStatus\n    IsCurrentUserAnApprover\n    CisoApprover {\n      FirstName\n      Surname\n    }\n    SecurityArchitectApprover {\n      FirstName\n      Surname\n    }\n    TaskSubmissions {\n      UUID\n      TaskName\n      TaskType\n      Status\n    }\n  }\n  readSiteConfig {\n    Title\n  }\n}`;\n    const json = await GraphQLRequestHelper.request({query});\n\n    const submissionJSON = _.get(json, \"data.readQuestionnaireSubmission.0\", {});\n    if (!submissionJSON) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: QuestionnaireSubmissionState = {\n      siteTitle: _.toString(_.get(json, \"data.readSiteConfig.0.Title\", \"\")),\n      submission: {\n        questionnaireID: _.toString(_.get(submissionJSON, \"Questionnaire.ID\", \"\")),\n        questionnaireTitle: _.toString(_.get(submissionJSON, \"Questionnaire.Name\", \"\")),\n        submissionID: _.toString(_.get(submissionJSON, \"ID\", \"\")),\n        submissionUUID: _.toString(_.get(submissionJSON, \"UUID\", \"\")),\n        submitter: {\n          id: _.toString(_.get(submissionJSON, \"User.ID\")),\n          name: _.toString(_.get(submissionJSON, \"SubmitterName\", \"\")),\n          email: _.toString(_.get(submissionJSON, \"SubmitterEmail\", \"\")),\n          isSA: false,\n          isCISO: false\n        },\n        status: _.toString(_.get(submissionJSON, \"QuestionnaireStatus\", \"\")).toLowerCase().replace(\"-\", \"_\"),\n        businessOwnerApproverName: _.toString(_.get(submissionJSON, \"BusinessOwnerApproverName\", \"\")),\n        approvalStatus: {\n          chiefInformationSecurityOfficer: _.toString(_.get(submissionJSON, \"CisoApprovalStatus\", \"\")),\n          businessOwner: _.toString(_.get(submissionJSON, \"BusinessOwnerApprovalStatus\", \"\")),\n          securityArchitect: _.toString(_.get(submissionJSON, \"SecurityArchitectApprovalStatus\", \"\")),\n        },\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSON, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSON, \"AnswerData\", \"\")),\n        }),\n        securityArchitectApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"SecurityArchitectApprover.Surname\", \"\")),\n        },\n        cisoApprover: {\n          FirstName: _.toString(_.get(submissionJSON, \"CisoApprover.FirstName\", \"\")),\n          Surname: _.toString(_.get(submissionJSON, \"CisoApprover.Surname\", \"\")),\n        },\n        taskSubmissions: _\n          .toArray(_.get(submissionJSON, \"TaskSubmissions\", []))\n          .map((item) => {\n            const taskSubmission: TaskSubmissionDisplay = {\n              uuid: _.toString(_.get(item, \"UUID\", \"\")),\n              taskName: _.toString(_.get(item, \"TaskName\", \"\")),\n              taskType: _.toString(_.get(item, \"TaskType\", \"\")),\n              status: _.toString(_.get(item, \"Status\", \"\")),\n            };\n            return taskSubmission;\n          }),\n      },\n    };\n\n    return data;\n  }\n\n  static async approveQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToApproved(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(\n      _.get(json, \"data.updateQuestionnaireStatusToApproved.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToApproved.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n\n  static async denyQuestionnaireSubmission(\n    argument: { submissionID: string, csrfToken: string, secureToken: string },\n  ): Promise<{ uuid: string }> {\n    const {submissionID, csrfToken, secureToken} = {...argument};\n    const query = `\nmutation {\n updateQuestionnaireStatusToDenied(ID: \"${submissionID}\", SecureToken: \"${secureToken}\") {\n   QuestionnaireStatus\n   UUID\n }\n}`;\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const status = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.QuestionnaireStatus\", null));\n    const uuid = _.toString(_.get(json, \"data.updateQuestionnaireStatusToDenied.UUID\", null));\n    if (!status || !uuid) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n    return {uuid};\n  }\n}\n","// @flow\n\nimport type {QuestionnaireStartState, QuestionnaireSubmissionState} from \"../store/QuestionnaireState\";\nimport ActionType from \"./ActionType\";\nimport type {LoadQuestionnaireStartAction, LoadQuestionnaireSubmissionAction} from \"./ActionType\";\nimport {ThunkAction} from \"redux-thunk\";\nimport QuestionnaireDataService from \"../services/QuestionnaireDataService\";\nimport type {\n  Question,\n  Submission,\n  SubmissionActionData,\n  SubmissionInputData,\n  SubmissionQuestionData,\n} from \"../types/Questionnaire\";\nimport type {RootState} from \"../store/RootState\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport _ from \"lodash\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport URLUtil from \"../utils/URLUtil\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport QuestionnaireForBusinessOwnerDataService from \"../services/QuestionnaireForBusinessOwnerDataService\";\n// Start\n\nexport function loadQuestionnaireStartState(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchStartData(questionnaireID);\n      dispatch(loadQuestionnaireStartStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireStartStateFinished(payload: QuestionnaireStartState): LoadQuestionnaireStartAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE,\n    payload\n  }\n}\n\n// Submission\nexport function createInProgressSubmission(questionnaireID: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      // Get CSRF token\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n\n      // Send request to create submission record\n      const uuid = await QuestionnaireDataService.createInProgressSubmission({questionnaireID, csrfToken});\n\n      // Redirect to questionnaire page\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionState(submissionHash: string): ThunkAction {\n  return async (dispatch) => {\n    // TODO: maybe dispatch a global loading action\n    try {\n      const data = await QuestionnaireDataService.fetchSubmissionData(submissionHash);\n      dispatch(loadQuestionnaireSubmissionStateFinished(data));\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n  };\n}\n\nexport function loadQuestionnaireSubmissionStateFinished(payload: QuestionnaireSubmissionState): LoadQuestionnaireSubmissionAction {\n  return {\n    type: ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE,\n    payload\n  }\n}\n\n// TODO: split big functions\n\nexport function putDataInQuestionnaireAnswer(payload: Question): ThunkAction {\n  return async (dispatch, getState) => {\n\n    // Save local state\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER,\n      payload\n    });\n\n    const rootState: RootState = getState();\n    const submissionID = _.get(rootState, \"questionnaireState.submissionState.submission.submissionID\", null);\n    if (!submissionID) {\n      throw new Error(\"Something is wrong, please reload the page\");\n    }\n\n    const csrfToken = await CSRFTokenService.getCSRFToken();\n    const questionID = payload.id;\n    const answerData: SubmissionQuestionData = SubmissionDataUtil.transformFromFullQuestionToData(payload);\n\n    // Update state of current answered question in cloud\n    try {\n      await QuestionnaireDataService.updateSubmissionData({\n        submissionID,\n        questionID,\n        csrfToken,\n        answerData\n      });\n\n      // Move cursor\n      dispatch(moveAfterQuestionAnswered(payload));\n    } catch (error) {\n      // TODO: error handling\n      alert(error.message);\n    }\n  };\n}\n\nexport function moveAfterQuestionAnswered(answeredQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const {\n      currentIndex,\n      targetIndex,\n      nonApplicableIndexes,\n      complete\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: submission.questions\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE,\n        nonApplicableIndexes\n      });\n    }\n\n    // Move cursor if target question is valid\n    if (targetIndex > currentIndex) {\n      dispatch({\n        type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n        targetIndex\n      });\n    }\n\n    // Batch update states for all related questions to cloud\n    await batchUpdateSubmissionData(getState(), _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]));\n\n    if (complete) {\n      URLUtil.redirectToQuestionnaireReview(submission.submissionUUID);\n    }\n  };\n}\n\nexport function moveToPreviousQuestion(targetQuestion: Question): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const submission = rootState.questionnaireState.submissionState.submission;\n    if (!submission) {\n      return;\n    }\n\n    const currentIndex = submission.questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the questionnaire\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = submission.questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION,\n      targetIndex,\n    });\n\n    // Batch update states for all related questions to cloud (\"current\" cursor changes)\n    await batchUpdateSubmissionData(getState(), [currentIndex, targetIndex]);\n  };\n}\n\nexport function submitQuestionnaire(): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const rootState: RootState = getState();\n      const submissionState = rootState.questionnaireState.submissionState;\n      const submission = submissionState.submission;\n      if (!submission) {\n        return;\n      }\n\n      // Check if the questionnaire is answered properly (only have answered and non-applicable questions)\n      if (SubmissionDataUtil.existsUnansweredQuestion(submission.questions)) {\n        alert(\"There are questions not answered properly, please check your answers\");\n        return;\n      }\n\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaire({submissionID: submission.submissionID, csrfToken});\n      await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n        questions: submission.questions,\n        questionnaireSubmissionID: submission.submissionID,\n        csrfToken\n      });\n      URLUtil.redirectToQuestionnaireSummary(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function submitQuestionnaireForApproval(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.submitQuestionnaireForApproval({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  };\n}\n\nexport function approveQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.approveQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.denyQuestionnaireSubmission({submissionID, csrfToken});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function approveQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function denyQuestionnaireSubmissionFromBusinessOwner(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({submissionID, csrfToken, secureToken:''});\n      dispatch(loadQuestionnaireSubmissionState(uuid));\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function editQuestionnaireSubmission(submissionID: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const {uuid} = await QuestionnaireDataService.editQuestionnaireSubmission({submissionID, csrfToken});\n      URLUtil.redirectToQuestionnaireEditing(uuid);\n    } catch(error) {\n      // TODO: errors\n      alert(error);\n    }\n  }\n}\n\nexport function loadMySubmissionList(): ThunkAction {\n  return async (dispatch: any, getState: () => RootState) => {\n    const user = getState().currentUserState.user;\n    if (!user) {\n      return;\n    }\n    const data = await QuestionnaireDataService.fetchUserSubmissionList(user.id);\n    dispatch({\n      type: ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST,\n      payload: data\n    });\n  };\n}\n\n// Commons\nasync function batchUpdateSubmissionData(rootState: RootState, indexesToUpdate: Array<number>) {\n  const submission = rootState.questionnaireState.submissionState.submission;\n  if (!submission) {\n    return;\n  }\n\n  const csrfToken = await CSRFTokenService.getCSRFToken();\n  try {\n    await QuestionnaireDataService.batchUpdateSubmissionData({\n      submissionID: submission.submissionID,\n      questionIDList: indexesToUpdate.map((index) => submission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(submission.questions[index])),\n      csrfToken,\n    });\n  } catch (error) {\n    // TODO: error handling\n    alert(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport LogoutButton from \"../Button/LogoutButton\";\n\ntype Props = {\n  title: string,\n  subtitle: string,\n  username: string,\n  showLogoutButton?: boolean;\n};\n\nclass Header extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    subtitle: \"\",\n    username: \"\",\n    showLogoutButton: true\n  };\n\n  render() {\n    const {title, subtitle, showLogoutButton, username} = {...this.props};\n\n    return (\n      <header className=\"Header\">\n        <div className=\"top-banner\">\n          <a href=\"/\"><img src={LogoImage} className=\"logo\"/></a>\n        </div>\n        <div className=\"logout-layout\">\n          {showLogoutButton && (\n            <div className=\"logout-block\">\n              <span className=\"username\">{username}</span>\n              <LogoutButton/>\n            </div>\n          )}\n        </div>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Start from \"./Start\";\nimport {createInProgressSubmission, loadQuestionnaireStartState} from \"../../actions/questionnaire\";\nimport type {QuestionnaireStartState} from \"../../store/QuestionnaireState\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    startState: state.questionnaireState.startState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadQuestionnaireAction(questionnaireID: string) {\n      dispatch(loadQuestionnaireStartState(questionnaireID));\n    },\n    dispatchCreateInProgressSubmissionAction(questionnaireID: string) {\n      dispatch(createInProgressSubmission(questionnaireID));\n    }\n  };\n};\n\ntype ownProps = {\n  questionnaireID: string\n};\n\ntype reduxProps = {\n  startState: QuestionnaireStartState,\n  dispatchLoadQuestionnaireAction: (id: string) => void,\n  dispatchCreateInProgressSubmissionAction: (questionnaireID: string) => void\n};\n\ntype Props = ownProps & reduxProps;\n\nclass StartContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {questionnaireID, dispatchLoadQuestionnaireAction} = {...this.props};\n    dispatchLoadQuestionnaireAction(questionnaireID);\n  }\n\n  render() {\n    const {title, subtitle, keyInformation, user} = {...this.props.startState};\n    const {questionnaireID, dispatchCreateInProgressSubmissionAction} = {...this.props};\n\n    if(!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"StartContainer\">\n        <Header title={title} subtitle={subtitle} username={user.name}/>\n\n        <Start keyInformation={keyInformation}\n               user={user}\n               onStartButtonClick={() => {\n                 dispatchCreateInProgressSubmissionAction(questionnaireID);\n               }}/>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StartContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport QuesiontEditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  question: Question,\n  onItemClick: (question: Question) => void,\n  index: number\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {question, onItemClick, index} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon(question)}\n        <button className=\"btn\"\n                disabled={!question.isApplicable}\n                onClick={(event) => {\n                  onItemClick(question);\n                }}>\n          {index+1}. {question.title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon(question: Question) {\n    const {isCurrent, hasAnswer, isApplicable} = {...question};\n\n    if (isCurrent) {\n      return (\n        <img src={QuesiontEditingIcon} />\n      );\n    }\n\n    if (!isApplicable) {\n      return (\n        <i className=\"fas fa-question-circle not-applicable\"/>\n      );\n    }\n\n    if (hasAnswer && isApplicable) {\n      return (\n        <i className=\"fas fa-check-circle success\"/>\n      );\n    }\n\n    return (\n      <i className=\"fas fa-check-circle pending\"/>\n    );\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport LeftBarItem from \"./LeftBarItem\";\n\ntype Props = {\n  questions: Array<Question>,\n  onItemClick: (question: Question) => void\n};\n\nclass LeftBar extends Component<Props> {\n\n  render() {\n    const {questions, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">QUESTIONS:</div>\n        <div className=\"items\">\n          {questions.map((question, index) => {\n            return <LeftBarItem question={question} onItemClick={onItemClick} key={question.id} index={index}/>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftBar;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport BaseButton from \"./BaseButton\";\n\ntype Props = {\n  title: string,\n  disabled: boolean,\n  classes: Array<string>,\n  onClick: (event: Event) => void,\n  iconImage?: string\n};\n\nclass DarkButton extends Component<Props> {\n\n  static defaultProps = {\n    title: \"\",\n    disabled: false,\n    classes: [],\n    onClick: () => {}\n  };\n\n  render() {\n    return <BaseButton {...this.props} classes={[\"DarkButton\", ...this.props.classes]} />;\n  }\n}\n\nexport default DarkButton;\n","// @flow\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport {Field, Form, Formik, FormikBag} from \"formik\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  question: Question,\n  index: number,\n  handleFormSubmit: (formik: FormikBag, values: Object) => void,\n  handleActionClick: (action: AnswerAction) => void\n};\n\nclass QuestionForm extends Component<Props> {\n\n  render() {\n    const {question, index} = {...this.props};\n\n    return (\n      <div className=\"QuestionForm\">\n        <div className=\"heading\">\n          {index+1}. {question.heading}\n        </div>\n        <div className=\"description\">\n          {question.description}\n        </div>\n\n        {this.renderActions(question)}\n        {this.renderInputsForm(question)}\n      </div>\n    );\n  }\n\n  renderActions(question: Question) {\n    const {handleActionClick} = {...this.props};\n    if (question.type !== \"action\") {\n      return;\n    }\n\n    const actions: Array<AnswerAction> = _.get(question, \"actions\", null);\n    if (!actions) {\n      return null;\n    }\n\n    // Render message of the chosen action\n    let message = null;\n    const chosenAction = actions.find((action) => action.isChose);\n    if (chosenAction && chosenAction.message) {\n      message = (\n        <div className=\"message\">\n          <b>Message:</b>\n          <div dangerouslySetInnerHTML={{__html: chosenAction.message}}/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"actions\">\n          {actions.map((action, index) => {\n            switch (index) {\n              case 0:\n                return <DarkButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n              default:\n                return <LightButton title={action.label} key={action.id} classes={[\"mr-3\"]} onClick={() => {\n                  handleActionClick(action);\n                }}/>;\n            }\n          })}\n        </div>\n        {message}\n      </div>\n    );\n  }\n\n  renderInputsForm(question: Question) {\n    const {handleFormSubmit} = {...this.props};\n    if (question.type !== \"input\") {\n      return;\n    }\n\n    const inputs: Array<AnswerInput> = _.get(question, \"inputs\", null);\n    if (!inputs) {\n      return null;\n    }\n\n    const initialValues = {};\n    inputs.forEach((input) => {\n      initialValues[input.id] = input.data || \"\";\n    });\n\n    return <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        inputs.forEach((input: AnswerInput) => {\n          const {id, type, required, label, minLength} = {...input};\n          const value = _.get(values, id, null);\n\n          // Required\n          if (required && !value) {\n            errors[id] = `- Please enter a value for ${label}`;\n            return;\n          }\n\n          // Min Length\n          if (minLength > 0 && value && value.length < minLength) {\n            errors[id] = `- Please enter a value with at least ${minLength} characters for ${label}`;\n            return;\n          }\n\n          // Email\n          if (type === \"email\" &&\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n            errors[id] = \"- Invalid email address\";\n            return;\n          }\n\n          // Date validation\n          if (type === \"date\") {\n            const date = moment(value, \"YYYY-MM-DD\");\n            if (!date.isValid()) {\n              errors[id] = \"- Invalid date\";\n            }\n          }\n        });\n\n        return errors;\n      }}\n      onSubmit={(values, formik) => {\n        handleFormSubmit(formik, values);\n      }}\n    >\n      {({isSubmitting, errors, touched, setFieldValue}) => {\n        const filteredErrors = [];\n        _.keys(errors)\n          .filter(key => {\n            return Boolean(touched[key]);\n          })\n          .forEach(key => {\n            filteredErrors[key] = errors[key];\n          });\n\n        return (\n          <Form>\n            <table>\n              <tbody>\n              {inputs.map((input) => {\n                const {id, type, label, placeholder} = {...input};\n                const hasError = Boolean(_.get(filteredErrors, id, null));\n                const classes = [];\n                if (hasError) {\n                  classes.push(\"error\");\n                }\n\n                if ([\"text\", \"email\", \"url\"].includes(type)) {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field type={type} name={id} className={classes.join(\" \")} placeholder={placeholder}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"date\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id} render={({field}) => {\n                          let date = null;\n                          const dateValue = field.value || null;\n                          if (dateValue && dateValue.trim().length > 0) {\n                            date = moment(dateValue).toDate();\n                          }\n\n                          return (\n                            <DatePicker\n                                        dateFormat=\"dd-MM-yyyy\"\n                                        className={classes.join(\" \")}\n                                        selected={date}\n                                        onChange={(value) => {\n                                          if (!value) {\n                                            setFieldValue(id, null);\n                                            return;\n                                          }\n                                          const date = moment(value).format(\"YYYY-MM-DD\");\n                                          setFieldValue(id, date);\n                                        }}\n                                        placeholderText={placeholder}\n                                        dropdownMode=\"scroll\"\n                                        withPortal/>\n                          );\n                        }}/>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n\n                if (type === \"textarea\") {\n                  return (\n                    <tr key={id}>\n                      <td className=\"label\"><label>{label}</label></td>\n                      <td>\n                        <Field name={id}>\n                          {({field}) => {\n                            return <textarea {...field} className={classes.join(\" \")} placeholder={placeholder}/>;\n                          }}\n                        </Field>\n                        {hasError && <i className=\"fas fa-exclamation-circle text-danger ml-1\"/>}\n                      </td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n              <tr>\n                <td/>\n                <td>\n                  <DarkButton title=\"Continue\"/>\n                </td>\n              </tr>\n              <tr>\n                <td/>\n                <td className=\"text-danger\">\n                  {filteredErrors && _.keys(filteredErrors).length > 0 && (\n                    <div>\n                      Whoops!\n                      {_.keys(filteredErrors)\n                        .map((key) => {\n                          return (\n                            <div className=\"text-error\" key={key}>{filteredErrors[key]}</div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </Form>\n        );\n      }}\n    </Formik>;\n  }\n}\n\nexport default QuestionForm;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {FormikBag} from \"formik\";\nimport type {AnswerAction, Question, Submission} from \"../../types/Questionnaire\";\nimport LeftBar from \"./LeftBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport _ from \"lodash\";\n\ntype Props = {\n  questions: Array<Question>,\n  saveAnsweredQuestion: (question: Question) => void,\n  onLeftBarItemClick: (question: Question) => void\n};\n\nclass Questionnaire extends Component<Props> {\n\n  handleFormSubmit(formik: FormikBag, values: Object) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    _.forIn(values, (value, key) => {\n      const index = answeredQuestion.inputs.findIndex((item) => item.id === key);\n      if(index >= 0) {\n        _.set(answeredQuestion, `inputs.${index}.data`, value)\n      }\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion)\n  }\n\n  handleActionClick(action: AnswerAction) {\n    const {questions, saveAnsweredQuestion} = {...this.props};\n\n    // Generate new question with data\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n    if (!currentQuestion) {\n      return;\n    }\n\n    const answeredQuestion = {...currentQuestion};\n    answeredQuestion.actions = answeredQuestion.actions.map((item) => {\n      item.isChose = (item.id === action.id);\n      return item;\n    });\n    answeredQuestion.hasAnswer = true;\n    answeredQuestion.isApplicable = true;\n\n    saveAnsweredQuestion(answeredQuestion);\n  }\n\n  render() {\n    const {questions, onLeftBarItemClick} = {...this.props};\n\n    const currentQuestion = questions.find((question) => {\n      return question.isCurrent === true;\n    });\n\n    const currentQuestionIndex = questions.findIndex((question) => question.id === currentQuestion.id);\n\n    return (\n      <div className=\"Questionnaire mx-1\">\n        <div className=\"major\">\n          <LeftBar questions={questions} onItemClick={onLeftBarItemClick}/>\n          {currentQuestion && <QuestionForm\n            index={currentQuestionIndex}\n            key={currentQuestion.id}\n            question={currentQuestion}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            handleActionClick={this.handleActionClick.bind(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport {\n  loadQuestionnaireSubmissionState,\n  moveAfterQuestionAnswered, moveToPreviousQuestion,\n  putDataInQuestionnaireAnswer,\n} from \"../../actions/questionnaire\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport Questionnaire from \"./Questionnaire\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(putDataInQuestionnaireAnswer(answeredQuestion));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestion(targetQuestion));\n    }\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSaveAnsweredQuestionAction: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction: (targetQuestion: Question) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass QuestionnaireContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {dispatchSaveAnsweredQuestionAction, dispatchMoveToPreviousQuestionAction} = {...this.props};\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"QuestionnaireContainer\">\n          <Header title={title} subtitle={siteTitle} username={user.name}/>\n          <div className=\"Questionnaire\">\n            <h1>\n              The questionnaire is not in progress...\n            </h1>\n          </div>\n          <Footer/>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"QuestionnaireContainer\">\n        <Header title={title} subtitle={siteTitle} username={user.name} />\n\n        <Questionnaire\n          questions={submission.questions}\n          saveAnsweredQuestion={(answeredQuestion) => {\n            dispatchSaveAnsweredQuestionAction(answeredQuestion);\n          }}\n          onLeftBarItemClick={(targetQuestion) => {\n            dispatchMoveToPreviousQuestionAction(targetQuestion);\n          }}\n        />\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QuestionnaireContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {AnswerAction, AnswerInput, Question, Submission} from \"../../types/Questionnaire\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\ntype Props = {\n  questions: Array<Question>\n};\n\nclass AnswersPreview extends Component<Props> {\n\n  render() {\n    const {questions} = {...this.props};\n\n    return (\n      <div className=\"AnswersPreview\">\n        <div className=\"questions\">\n          {questions.map((question, index, all) => {\n            const renderedData = this.renderData(question);\n            return (\n              <div className=\"row\" key={question.id}>\n                <div className=\"col\">\n                  <b>{index + 1}. {question.heading}</b>\n                </div>\n                <div className=\"vertical-divider\"/>\n                <div className=\"col\">\n                  {renderedData}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderData(question: Question): * {\n    // Render data for non-applicable question\n    if (!question.isApplicable) {\n      const msg = \"(Not applicable)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for non-answered question\n    if (!question.hasAnswer) {\n      const msg = \"(Has no answer)\";\n      return (\n        <div>{msg}</div>\n      );\n    }\n\n    // Render data for input\n    if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n      const renderInputData = (input: AnswerInput) => {\n        let data: string = input.data || \"\";\n        // Format data\n        if (input.type === \"date\") {\n          data = moment(data).format(\"DD-MM-YYYY\");\n        }\n        // Format textarea\n        if (input.type === \"textarea\") {\n          data = \"\\n\" + data;\n        }\n        return data;\n      };\n\n      // For multiple-inputs question, display their labels\n      if (question.inputs.length > 1) {\n        return (\n          <div>\n            {question.inputs.map((input => {\n              const data = renderInputData(input);\n              return (\n                <div key={input.id}>\n                  <b>{input.label}</b>&nbsp;\n                  <span>-</span>&nbsp;\n                  <span>{data}</span>\n                </div>\n              );\n            }))}\n          </div>\n        );\n      }\n\n      // For single-input question, display its answer directly\n      return (\n        <div>\n          {renderInputData(question.inputs[0]).trim()}\n        </div>\n      );\n    }\n\n    // Render data for action\n    if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n      let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n\n      return (\n        <div>\n          {action && <div>{action.label}</div>}\n        </div>\n      );\n    }\n  }\n}\n\nexport default AnswersPreview;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport AnswersPreview from \"./AnswersPreview\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  siteTitle: string,\n  submission: Submission | null,\n  handleSubmitButtonClick: () => void,\n  handlePDFDownloadButtonClick: () => void,\n  handleEditAnswerButtonClick: () => void,\n};\n\nclass Review extends Component<Props> {\n\n  render() {\n    const {\n      submission,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleEditAnswerButtonClick,\n    } = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status !== \"in_progress\") {\n      return (\n        <div className=\"Review\">\n          <h3>\n            The questionnaire is not in progress...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Review\">\n        <AnswersPreview questions={submission.questions}/>\n        <div className=\"buttons\">\n          <LightButton title=\"EDIT ANSWERS\"\n                       iconImage={editIcon}\n                       classes={[\"button\"]}\n                       onClick={handleEditAnswerButtonClick}/>\n          <LightButton title=\"DOWNLOAD PDF\"\n                       iconImage={pdfIcon}\n                       classes={[\"button\"]}\n                       onClick={handlePDFDownloadButtonClick}/>\n          <DarkButton title=\"SUBMIT QUESTIONNAIRE\"\n                      classes={[\"button\"]}\n                      disabled={SubmissionDataUtil.existsUnansweredQuestion(submission.questions)}\n                      onClick={handleSubmitButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","// @flow\n\nexport default class StringUtil {\n\n  static toString(any: *) {\n    if(!any) {\n      return \"\";\n    }\n    return `${any}`;\n  }\n}\n","// @flow\n\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport type {AnswerAction, AnswerInput, Question} from \"../types/Questionnaire\";\nimport React from \"react\";\nimport StringUtil from \"./StringUtil\";\nimport _ from \"lodash\";\nimport headingImage from \"../../img/PDF/heading.jpg\";\nimport footerImage from \"../../img/PDF/footer.jpg\";\nimport type {User} from \"../types/User\";\nimport moment from \"moment\";\n\ntype GeneratePDFArgument = {\n  questions: Array<Question>,\n  submitter: User,\n  questionnaireTitle: string,\n  siteTitle: string\n}\n\nasync function getImageDataByBlob(blob: Blob): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: *) => {\n      resolve(event.target.result);\n    });\n    reader.readAsDataURL(blob);\n  });\n}\n\nasync function getImageDataByURL(imageURL: string) {\n  const response = await fetch(imageURL);\n  const blob = await response.blob();\n  const data = await getImageDataByBlob(blob);\n  return data;\n}\n\nexport default class PDFUtil {\n\n  static async generatePDF(args: GeneratePDFArgument) {\n    const {questions, submitter, questionnaireTitle, siteTitle} = {...args};\n\n    const defaultFontSize = 12;\n    const content = [];\n    const styles = {\n      questionnaireTitle: {\n        bold: true,\n        fontSize: defaultFontSize + 4,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      siteTitle: {\n        bold: true,\n        fontSize: defaultFontSize ,\n        color: \"#004071\",\n        alignment: \"center\"\n      },\n      sectionHeading: {\n        bold: true,\n        fontSize: defaultFontSize + 2,\n        color: \"#004071\"\n      },\n      questionHeading: {\n        bold: true,\n      },\n    };\n    const defaultStyle = {\n      fontSize: defaultFontSize\n    };\n    const info = {\n      title: `${questionnaireTitle} - ${submitter.name}.pdf`\n    };\n\n    const {vfs} = vfsFonts.pdfMake;\n    pdfMake.vfs = vfs;\n\n\n    // Heading image\n    const headingImageData = await getImageDataByURL(headingImage);\n\n    content.push({\n      image: headingImageData,\n      width: 500, // Page size A4 in 72 dpi (web) = 595 X 842 pixels,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    // Questionnaire title\n    content.push({\n      text: questionnaireTitle,\n      style: \"questionnaireTitle\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    // Site title\n    content.push({\n      text: siteTitle,\n      style: \"siteTitle\",\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Submitter info\n    content.push({\n      text: `Submitted by:`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    content.push({\n      text: `Name: ${submitter.name}`,\n      style: \"questionHeading\",\n      margin: [0, 0, 0, defaultFontSize / 2],\n    });\n\n    content.push({\n      text: `Email: ${submitter.email}`,\n      margin: [0, 0, 0, defaultFontSize * 2],\n    });\n\n    // Response heading\n    content.push({\n      text: `Responses`,\n      style: \"sectionHeading\",\n      margin: [0, 0, 0, defaultFontSize],\n    });\n\n    // Questions\n    questions.forEach((question, index) => {\n      // Heading of questions\n      content.push({\n        text: `${index + 1}. ${question.heading}`,\n        style: \"questionHeading\",\n        margin: [0, 0, 0, defaultFontSize / 2],\n      });\n\n      // Non-applicable questions\n      if (!question.isApplicable) {\n        content.push({\n          text: \"(Not applicable)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Empty-answer questions\n      if (!question.hasAnswer) {\n        content.push({\n          text: \"(Has no answer)\",\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Input-type questions\n      if (question.type === \"input\" && question.inputs && Array.isArray(question.inputs) && question.inputs.length > 0) {\n        const renderInputData = (input: AnswerInput) => {\n          let data: string = input.data || \"\";\n          // Format data\n          if (input.type === \"date\") {\n            data = moment(data).format(\"DD-MM-YYYY\");\n          }\n          // Format textarea\n          if (input.type === \"textarea\") {\n            data = \"\\n\" + data;\n          }\n          return data;\n        };\n\n        // For multiple-inputs question, display their labels\n        if (question.inputs.length > 1) {\n          question.inputs.forEach((input, index, arr) => {\n            const isLast = (index === arr.length - 1);\n            content.push({\n              text: `${input.label}: ${StringUtil.toString(renderInputData(input))}`,\n              margin: [0, 0, 0, isLast ? defaultFontSize : parseInt(`${defaultFontSize / 3}`)],\n            });\n          });\n          return;\n        }\n\n        // For single-input question, display its answer directly\n        content.push({\n          text: renderInputData(question.inputs[0]).trim(),\n          margin: [0, 0, 0, defaultFontSize],\n        });\n        return;\n      }\n\n      // Action-type questions\n      if (question.type === \"action\" && question.actions && Array.isArray(question.actions)) {\n        let action: AnswerAction = _.head(question.actions.filter((action) => action.isChose));\n        content.push({\n          text: action.label,\n          margin: [0, 0, 0, defaultFontSize],\n        });\n      }\n    });\n\n    // Footer\n    const footerImageData = await getImageDataByURL(footerImage);\n\n    content.push({\n      image: footerImageData,\n      width: 500,\n      margin: [0, 0, 0, defaultFontSize]\n    });\n\n    try {\n      await pdfMake.createPdf({info, content, styles, defaultStyle}).download(info.title);\n    } catch {\n      alert(\"Can't download PDF, please disable AdBlock!\");\n    }\n\n  }\n\n  static async blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        resolve(event.target.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {loadQuestionnaireSubmissionState, submitQuestionnaire} from \"../../actions/questionnaire\";\nimport Review from \"./Review\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitQuestionnaire() {\n      dispatch(submitQuestionnaire());\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitQuestionnaire: () => void,\n};\n\ntype Props = ownProps & reduxProps;\n\nclass ReviewContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, siteTitle, user, submission} = {...this.props.submissionState};\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <div className=\"ReviewContainer\">\n        <Header title={title} subtitle=\"Review Responses\" username={user.name}/>\n        <Review siteTitle={siteTitle}\n                submission={submission}\n                handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                handleEditAnswerButtonClick={this.handleEditAnswerButtonClick.bind(this)}/>\n        <Footer/>\n      </div>\n    );\n  }\n\n  handleSubmitButtonClick() {\n    this.props.dispatchSubmitQuestionnaire();\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleEditAnswerButtonClick() {\n    const uuid = _.get(this.props.submissionState, \"submission.submissionUUID\", \"\");\n    if (!uuid) {\n      return;\n    }\n    URLUtil.redirectToQuestionnaireEditing(uuid);\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport LightButton from \"../Button/LightButton\";\nimport DarkButton from \"../Button/DarkButton\";\nimport pdfIcon from \"../../../img/icons/pdf.svg\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport _ from \"lodash\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport SubmissionDataUtil from \"../../utils/SubmissionDataUtil\";\n\ntype Props = {\n  submission: Submission | null,\n  handlePDFDownloadButtonClick: () => void,\n  handleSubmitButtonClick: () => void,\n  handleApproveButtonClick: () => void,\n  handleDenyButtonClick: () => void,\n  handleEditButtonClick: () => void,\n  viewAs: \"submitter\" | \"approver\" | \"others\",\n  token: string,\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nclass Summary extends Component<Props> {\n\n  static defaultProps = {\n    submission: null,\n    handlePDFDownloadButtonClick: () => {},\n    handleSubmitButtonClick: () => {},\n    handleApproveButtonClick: () => {},\n    handleDenyButtonClick: () => {},\n    handleEditButtonClick: () => {},\n    viewAs: \"others\",\n    token: \"\",\n  };\n\n  render() {\n    const {submission, viewAs} = {...this.props};\n\n    if (!submission) {\n      return null;\n    }\n\n    if (submission.status === \"in_progress\" && viewAs === \"submitter\") {\n      return (\n        <div className=\"Summary\">\n          <h3>\n            Submission has not been complete...\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Summary\">\n        {this.renderSubmitterInfo(submission)}\n        {this.renderTasks(submission)}\n        {this.renderApprovals(submission)}\n        {this.renderButtons(submission)}\n      </div>\n    );\n  }\n\n  renderSubmitterInfo(submission: Submission) {\n    const submitter = submission.submitter;\n\n    return (\n      <div className=\"request-info\">\n        <h3>Request Information</h3>\n        <div><b>Submitted by:</b> {submitter.name}</div>\n        <div><b>Email:</b> {submitter.email}</div>\n        <div><b>Status:</b> {prettifyStatus(submission.status)}</div>\n      </div>\n    );\n  }\n\n  renderTasks(submission: Submission) {\n    const taskSubmissions = submission.taskSubmissions;\n    if (taskSubmissions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"tasks\">\n        <h3>Tasks</h3>\n        {taskSubmissions.map(({uuid, taskName, taskType, status}) => {\n          const {token} = {...this.props};\n          return (\n            <div key={uuid}>\n              <button className={\"btn btn-link\"} onClick={(event: Event) => {\n                if (taskType === \"selection\") {\n                  URLUtil.redirectToComponentSelectionSubmission(uuid, token);\n                  return;\n                }\n                URLUtil.redirectToTaskSubmission(uuid, token);\n              }}>\n                {taskName} ({prettifyStatus(status)})\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderButtons(submission: Submission) {\n    const {\n      viewAs,\n      handleSubmitButtonClick,\n      handlePDFDownloadButtonClick,\n      handleApproveButtonClick,\n      handleDenyButtonClick,\n      handleEditButtonClick\n    } = {...this.props};\n\n    const downloadPDFButton = (\n      <LightButton title=\"DOWNLOAD PDF OF ANSWERS\"\n                   iconImage={pdfIcon}\n                   classes={[\"button\"]}\n                   onClick={handlePDFDownloadButtonClick}/>\n    );\n\n    // Display buttons for submitter\n    if (viewAs === \"submitter\") {\n      // Render edit answers button for submitter in all cases\n      const editAnswersButton = (\n        <LightButton title=\"EDIT ANSWERS\"\n                     iconImage={editIcon}\n                     classes={[\"button\"]}\n                     onClick={handleEditButtonClick}\n        />\n      );\n\n      // Render send for approval button for submitter only in specific submission status\n      const sendForApprovalButton = (\n        <DarkButton title=\"SEND FOR APPROVAL\"\n                    classes={[\"button\"]}\n                    disabled={SubmissionDataUtil.existsIncompleteTaskSubmission(submission.taskSubmissions)}\n                    onClick={handleSubmitButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n              {sendForApprovalButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      if (submission.status === \"waiting_for_security_architect_approval\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {editAnswersButton}\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div/>\n        </div>\n      );\n    }\n\n    // Display buttons for approvers\n    if (viewAs === \"approver\" || viewAs === \"businessOwnerApprover\") {\n      const approveButton = (\n        <DarkButton title=\"APPROVE\"\n                    classes={[\"button\"]}\n                    onClick={handleApproveButtonClick}\n        />\n      );\n      const denyButton = (\n        <LightButton title=\"DENY\"\n                     classes={[\"button\"]}\n                     onClick={handleDenyButtonClick}\n        />\n      );\n\n      if (submission.status === \"submitted\") {\n        return (\n          <div className=\"buttons\">\n            <div>\n              {downloadPDFButton}\n            </div>\n            <div/>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"buttons\">\n          <div>\n            {downloadPDFButton}\n          </div>\n          <div>\n            {approveButton}\n            {denyButton}\n          </div>\n        </div>\n      );\n    }\n\n    // Display buttons for others (either a submitter not an approver)\n    return (\n      <div className=\"buttons\">\n        <div>\n          {downloadPDFButton}\n        </div>\n        <div/>\n      </div>\n    );\n  }\n\n  renderApprovals(submission: Submission) {\n    // TODO: Refactor - consider using constants instead of string literal\n    if (submission.status === \"in_progress\" ||\n      submission.status === \"submitted\"\n    ) {\n      return null;\n    }\n\n    const approvalStatus = submission.approvalStatus;\n    const securityArchitectApprover = submission.securityArchitectApprover;\n    const cisoApprover = submission.cisoApprover;\n\n    let securityArchitectApprovalStatus = prettifyStatus(approvalStatus.securityArchitect);\n    let cisoApprovalStatus = prettifyStatus(approvalStatus.chiefInformationSecurityOfficer);\n\n    if (securityArchitectApprovalStatus !== \"Pending\") {\n      securityArchitectApprovalStatus = securityArchitectApprover.FirstName + \" \" +\n        securityArchitectApprover.Surname + \" - \" + securityArchitectApprovalStatus;\n    }\n\n    if (cisoApprovalStatus !== \"Pending\") {\n      cisoApprovalStatus = cisoApprover.FirstName + \" \" + cisoApprover.Surname + \" - \" + cisoApprovalStatus;\n    }\n\n    let businessOwnerApprovalStatus = prettifyStatus(approvalStatus.businessOwner)\n    if (businessOwnerApprovalStatus !== \"Pending\") {\n        businessOwnerApprovalStatus = submission.businessOwnerApproverName + \" - \" + businessOwnerApprovalStatus;\n    }\n    return (\n      <div className=\"approvals\">\n        <h3>Approvals</h3>\n        <div>\n          <b>Security Architect</b>\n          &nbsp;-&nbsp;\n          {securityArchitectApprovalStatus}\n        </div>\n        <div>\n          <b>Chief Information Security Officer</b>\n          &nbsp;-&nbsp;\n          {cisoApprovalStatus}\n        </div>\n        <div>\n          <b>Business Owner</b>\n          &nbsp;-&nbsp;\n          {businessOwnerApprovalStatus}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {QuestionnaireSubmissionState} from \"../../store/QuestionnaireState\";\nimport {\n  approveQuestionnaireSubmission,\n  denyQuestionnaireSubmission,\n  editQuestionnaireSubmission,\n  loadQuestionnaireSubmissionState,\n  submitQuestionnaireForApproval,\n  approveQuestionnaireSubmissionFromBusinessOwner,\n  denyQuestionnaireSubmissionFromBusinessOwner\n} from \"../../actions/questionnaire\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport ReactModal from \"react-modal\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    submissionState: state.questionnaireState.submissionState,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadSubmissionAction(submissionHash: string) {\n      dispatch(loadQuestionnaireSubmissionState(submissionHash));\n    },\n    dispatchSubmitForApprovalAction(submissionID: string) {\n      dispatch(submitQuestionnaireForApproval(submissionID));\n    },\n    dispatchBusinessOwnerApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchApproveSubmissionAction(submissionID: string) {\n      dispatch(approveQuestionnaireSubmission(submissionID));\n    },\n    dispatchDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmissionFromBusinessOwner(submissionID));\n    },\n    dispatchBusinessOwnerDenySubmissionAction(submissionID: string) {\n      dispatch(denyQuestionnaireSubmission(submissionID));\n    },\n    dispatchEditSubmissionAction(submissionID: string) {\n      dispatch(editQuestionnaireSubmission(submissionID));\n    },\n  };\n};\n\ntype ownProps = {\n  submissionHash: string\n};\n\ntype reduxProps = {\n  submissionState: QuestionnaireSubmissionState,\n  dispatchLoadSubmissionAction: (submissionHash: string) => void,\n  dispatchSubmitForApprovalAction: (submissionID: string) => void,\n  dispatchApproveSubmissionAction: (submissionID: string) => void,\n  dispatchDenySubmissionAction: (submissionID: string) => void,\n  dispatchEditSubmissionAction: (submissionID: string) => void,\n  approveQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n  denyQuestionnaireSubmissionFromBusinessOwner: (submissionID: string) => void,\n};\n\ntype Props = ownProps & reduxProps;\n\ntype State = {\n  showModal: boolean\n};\n\nclass SummaryContainer extends Component<Props, State> {\n\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    const {submissionHash, dispatchLoadSubmissionAction} = {...this.props};\n    dispatchLoadSubmissionAction(submissionHash);\n  }\n\n  render() {\n    const {title, user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return null;\n    }\n\n    // Decide what the permission of the current user\n    let viewAs = \"others\";\n\n    do {\n      // Check if the current user is the submitter\n      if (user.id === submission.submitter.id) {\n        viewAs = \"submitter\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserApprover) {\n        viewAs = \"approver\";\n        break;\n      }\n\n      // Check if the current user is an approver\n      if (isCurrentUserABusinessOwnerApprover) {\n        viewAs = \"businessOwnerApprover\";\n        break;\n      }\n    } while (false);\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" username={user.name}/>\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={this.handlePDFDownloadButtonClick.bind(this)}\n                 handleSubmitButtonClick={this.handleSubmitButtonClick.bind(this)}\n                 handleApproveButtonClick={this.handleApproveButtonClick.bind(this)}\n                 handleDenyButtonClick={this.handleDenyButtonClick.bind(this)}\n                 handleEditButtonClick={this.handleOpenModal.bind(this)}\n                 viewAs={viewAs}\n        />\n        <Footer/>\n        <ReactModal\n          isOpen={this.state.showModal}\n          parentSelector={() => {return document.querySelector(\".SummaryContainer\");}}\n        >\n          <h3>\n            Are you sure you want to edit this submission?\n          </h3>\n          <div className=\"content\">\n            This will cancel your current submission and require it to be resubmitted for approval.\n          </div>\n          <div>\n            <DarkButton title=\"Yes\" onClick={this.handleEditButtonClick.bind(this)}/>\n            <LightButton title=\"No\" onClick={this.handleCloseModal.bind(this)}/>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n\n  handlePDFDownloadButtonClick() {\n    const {submission, siteTitle} = {...this.props.submissionState};\n    if (!submission) {\n      return;\n    }\n\n    PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  handleSubmitButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.props.dispatchSubmitForApprovalAction(submission.submissionID);\n  }\n\n  handleApproveButtonClick() {\n    const {user, submission, isCurrentUserApprover, isCurrentUserABusinessOwnerApprover} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchApproveSubmissionAction(submission.submissionID);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerApproveSubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleDenyButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    if (isCurrentUserApprover) {\n      this.props.dispatchDenySubmissionAction(submission.submissionID);\n    }\n\n    if (isCurrentUserABusinessOwnerApprover) {\n      this.props.dispatchBusinessOwnerDenySubmissionAction(submission.submissionID);\n    }\n  }\n\n  handleEditButtonClick() {\n    const {user, submission} = {...this.props.submissionState};\n\n    if (!user || !submission) {\n      return;\n    }\n\n    this.handleCloseModal();\n    this.props.dispatchEditSubmissionAction(submission.submissionID);\n  }\n\n  handleOpenModal() {\n    this.setState({showModal: true});\n  }\n\n  handleCloseModal() {\n    this.setState({showModal: false});\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SummaryContainer);\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport TaskDataService from \"../services/TaskDataService\";\nimport ActionType from \"./ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport SubmissionDataUtil from \"../utils/SubmissionDataUtil\";\nimport _ from \"lodash\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {Task, TaskSubmission} from \"../types/Task\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport type {\n  LoadTaskSubmissionAction,\n  MarkQuestionsNotApplicableInTaskSubmissionAction, MoveToQuestionInTaskSubmissionAction,\n  PutDataInTaskSubmissionAction,\n} from \"./ActionType\";\nimport type {User} from \"../types/User\";\nimport type {RootState} from \"../store/RootState\";\n\nexport function loadTaskSubmission(args: {uuid: string, secureToken?: string}): ThunkAction {\n  const {uuid, secureToken} = {...args};\n\n  return async (dispatch) => {\n    try {\n      const payload = await TaskDataService.fetchTaskSubmission({\n        uuid,\n        secureToken\n      });\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function loadStandaloneTaskSubmission(args: {taskId: string}): ThunkAction {\n  const {taskId} = {...args};\n\n  return async (dispatch, getState) => {\n    try {\n      const task = await TaskDataService.fetchStandaloneTask({taskId});\n\n      const payload: TaskSubmission = {\n        id: \"\",\n        uuid: \"\",\n        taskName: task.name,\n        taskType: \"questionnaire\",\n        status: \"in_progress\",\n        result: \"\",\n        questions: task.questions,\n        selectedComponents: [],\n        jiraTickets: [],\n        questionnaireSubmissionUUID: \"\",\n        questionnaireSubmissionID: \"\",\n        submitter: getState().currentUserState,\n        lockWhenComplete: false\n      };\n\n      const action: LoadTaskSubmissionAction = {\n        type: ActionType.TASK.LOAD_TASK_SUBMISSION,\n        payload,\n      };\n      await dispatch(action);\n    }\n    catch (error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function saveAnsweredQuestionInTaskSubmission(\n  args: {\n    answeredQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {answeredQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!getTaskSubmission()) {\n      return;\n    }\n\n    // Save local state\n    const putDataAction: PutDataInTaskSubmissionAction = {\n      type: ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION,\n      payload: answeredQuestion,\n    };\n    await dispatch(putDataAction);\n\n    // Network request - save answer\n    if (!bypassNetwork) {\n      try {\n        await TaskDataService.batchUpdateTaskSubmissionData({\n          uuid: getTaskSubmission().uuid,\n          questionIDList: [answeredQuestion.id],\n          answerDataList: [SubmissionDataUtil.transformFromFullQuestionToData(answeredQuestion)],\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n    // Move cursor\n    const {\n      currentIndex,\n      nonApplicableIndexes,\n      targetIndex,\n      complete,\n      terminate,\n      result\n    } = SubmissionDataUtil.getDataUpdateIntent({\n      answeredQuestion,\n      questions: getTaskSubmission().questions,\n    });\n\n    // Mark non applicable questions\n    if (nonApplicableIndexes.length > 0) {\n      const markNotApplicableAction: MarkQuestionsNotApplicableInTaskSubmissionAction = {\n        type: ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE,\n        payload: nonApplicableIndexes,\n      };\n      await dispatch(markNotApplicableAction);\n    }\n\n    // Move cursor\n    if (targetIndex > currentIndex) {\n      const moveAction: MoveToQuestionInTaskSubmissionAction = {\n        type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n        payload: {currentIndex, targetIndex},\n      };\n      await dispatch(moveAction);\n    }\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      try {\n        await batchUpdateTaskSubmissionData(\n          getTaskSubmission(),\n          _.uniq([currentIndex, ...nonApplicableIndexes, targetIndex]),\n          secureToken\n        );\n      } catch(error) {\n        ErrorUtil.displayError(error);\n      }\n    }\n\n\n    if (complete) {\n      await dispatch(completeTaskSubmission({bypassNetwork, secureToken, result}));\n    }\n  };\n}\n\nexport function saveSelectedComponents(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    const rootState: RootState = getState();\n    const taskSubmission = rootState.taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    const componentIDs = rootState.componentSelectionState.selectedComponents.map((component) => {\n      return component.id\n    });\n\n    try {\n      await TaskDataService.updateTaskSubmissionWithSelectedComponents({\n        jiraKey,\n        componentIDs,\n        uuid: taskSubmission.uuid,\n        csrfToken: await CSRFTokenService.getCSRFToken()\n      });\n      await dispatch(completeTaskSubmission());\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n\nexport function completeTaskSubmission(args: {\n  secureToken?: string,\n  bypassNetwork?: boolean,\n  result?: string\n} = {}): ThunkAction {\n  const {secureToken, bypassNetwork, result} = {...args};\n\n  return async (dispatch, getState) => {\n    const getTaskSubmission = () => {\n      return getState().taskSubmissionState.taskSubmission;\n    };\n\n    if (!bypassNetwork) {\n      try {\n        const csrfToken = await CSRFTokenService.getCSRFToken();\n\n        // Prevent anonymous user to create other task submissions according to the answers\n        if (!secureToken) {\n          await TaskDataService.createTaskSubmissionsAccordingToQuestions({\n            questions: getTaskSubmission().questions,\n            questionnaireSubmissionID: getTaskSubmission().questionnaireSubmissionID,\n            csrfToken\n          });\n        }\n\n        const {uuid} = await TaskDataService.completeTaskSubmission({\n          uuid: getTaskSubmission().uuid,\n          result: result || \"\",\n          secureToken: secureToken,\n          csrfToken\n        });\n\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      await dispatch({\n        type: ActionType.TASK.COMPLETE_TASK_SUBMISSION,\n        payload: result\n      });\n    }\n  };\n}\n\nexport function moveToPreviousQuestionInTaskSubmission(\n  args: {\n    targetQuestion: Question,\n    secureToken?: string,\n    bypassNetwork?: boolean\n  }): ThunkAction {\n  const {targetQuestion, secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n\n    if (!taskSubmission) {\n      return;\n    }\n\n    const questions = taskSubmission.questions;\n    const currentIndex = questions.findIndex((question) => question.isCurrent);\n    if (currentIndex < 0) {\n      throw new Error(\"Wrong state, please reload the task\");\n    }\n\n    // Don't move if the target question is not applicable or doesn't have answer\n    if (!targetQuestion.isApplicable || !targetQuestion.hasAnswer) {\n      return;\n    }\n\n    const targetIndex = questions.findIndex((question) => question.id === targetQuestion.id);\n    if (targetIndex < 0) {\n      return;\n    }\n\n    // Move cursor\n    const moveAction: MoveToQuestionInTaskSubmissionAction = {\n      type: ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION,\n      payload: {currentIndex, targetIndex},\n    };\n    await dispatch(moveAction);\n\n    // Network request - batch update\n    if (!bypassNetwork) {\n      await batchUpdateTaskSubmissionData(\n        taskSubmission,\n        _.uniq([currentIndex, targetIndex]),\n        secureToken\n      );\n    }\n  };\n}\n\nexport function editCompletedTaskSubmission(\n  args: {\n    secureToken?: string,\n    bypassNetwork?: boolean\n  } = {}): ThunkAction {\n  const {secureToken, bypassNetwork} = {...args};\n\n  return async (dispatch, getState) => {\n    const taskSubmission: TaskSubmission = getState().taskSubmissionState.taskSubmission;\n    if (!taskSubmission) {\n      return;\n    }\n\n    if (!bypassNetwork) {\n      try {\n        const {uuid} = await TaskDataService.editTaskSubmission({\n          uuid: taskSubmission.uuid,\n          csrfToken: await CSRFTokenService.getCSRFToken(),\n          secureToken: secureToken,\n        });\n        await dispatch(loadTaskSubmission({uuid, secureToken}));\n      } catch (error) {\n        ErrorUtil.displayError(error);\n      }\n    } else {\n      dispatch({\n        type: ActionType.TASK.EDIT_TASK_SUBMISSION\n      })\n    }\n  };\n}\n\nasync function batchUpdateTaskSubmissionData(taskSubmission: TaskSubmission, indexesToUpdate: Array<number>, secureToken?: string) {\n  try {\n    await TaskDataService.batchUpdateTaskSubmissionData({\n      uuid: taskSubmission.uuid,\n      questionIDList: indexesToUpdate.map((index) => taskSubmission.questions[index].id),\n      answerDataList: indexesToUpdate.map((index) => SubmissionDataUtil.transformFromFullQuestionToData(taskSubmission.questions[index])),\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: secureToken,\n    });\n  } catch (error) {\n    ErrorUtil.displayError(error.message);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport Questionnaire from \"../Questionnaire/Questionnaire\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport editIcon from \"../../../img/icons/edit.svg\";\nimport LightButton from \"../Button/LightButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport DarkButton from \"../Button/DarkButton\";\n\ntype Props = {\n  taskSubmission: TaskSubmissionType,\n  saveAnsweredQuestion: (answeredQuestion: Question) => void,\n  moveToPreviousQuestion: (targetQuestion: Question) => void,\n  editAnswers: () => void,\n  showBackButton: boolean,\n  showEditButton: boolean,\n  canUpdateAnswers: boolean\n};\n\nclass TaskSubmission extends Component<Props> {\n\n  render() {\n    const {\n      taskSubmission,\n      saveAnsweredQuestion,\n      moveToPreviousQuestion,\n      editAnswers,\n      showBackButton,\n      showEditButton,\n      canUpdateAnswers\n    } = {...this.props};\n\n    let body = (\n      <AnswersPreview questions={taskSubmission.questions}/>\n    );\n\n    if (canUpdateAnswers) {\n      body = (\n        <Questionnaire\n          questions={taskSubmission.questions}\n          saveAnsweredQuestion={saveAnsweredQuestion}\n          onLeftBarItemClick={moveToPreviousQuestion}\n        />\n      );\n    }\n\n    const backButton = showBackButton ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n        }}\n      />\n    ) : null;\n\n    const editButton = showEditButton ? (\n      <LightButton title={\"EDIT ANSWERS\"} onClick={editAnswers} iconImage={editIcon}/>\n    ) : null;\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmission\">\n        {result}\n        {body}\n\n        <div className=\"buttons\">\n          {editButton}\n          {backButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSubmission;\n","// @flow\n\nimport type {User} from \"../types/User\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport UserParser from \"../utils/UserParser\";\n\nexport default class UserDataService {\n\n  static async fetchCurrentUser(): Promise<User> {\n    const query = `\nquery {\n  readCurrentMember {\n    ID\n    Email\n    FirstName\n    Surname\n    IsSA\n    IsCISO\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const currentMemberJSONObject = _.get(responseJSONObject, \"data.readCurrentMember.0\", null);\n    if (!currentMemberJSONObject) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    const user = UserParser.parseUserFromJSON(currentMemberJSONObject);\n    if (!user.id) {\n      throw new Error(\"Authenticate error\");\n    }\n\n    return user;\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetCurrentUserAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport UserDataService from \"../services/UserDataService\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport function loadCurrentUser(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const user = await UserDataService.fetchCurrentUser();\n      const action: SetCurrentUserAction = {\n        type: ActionType.USER.SET_CURRENT_USER,\n        payload: user,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\n\ntype SiteConfig = {\n  siteTitle: string\n};\n\nexport default class SiteConfigDataService {\n\n  static async fetchSiteConfig(): Promise<SiteConfig> {\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n\n    const siteTitle = _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\"));\n    return {siteTitle};\n  }\n}\n","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport type {SetSiteTitleAction} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\nimport SiteConfigDataService from \"../services/SiteConfigDataService\";\n\nexport function loadSiteTitle(): ThunkAction {\n  return async (dispatch) => {\n    // TODO: loading\n    try {\n      const siteConfig = await SiteConfigDataService.fetchSiteConfig();\n      const action: SetSiteTitleAction = {\n        type: ActionType.SITE_CONFIG.SET_SITE_TITLE,\n        payload: siteConfig.siteTitle,\n      };\n      dispatch(action);\n    }\n    catch (error) {\n      // TODO: errors\n      ErrorUtil.displayError(error);\n    }\n  };\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    questionnaireSubmission: state.questionnaireState.submissionState,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction(uuid: string) {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission());\n    },\n  };\n};\n\ntype Props = {\n  uuid: string,\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: (uuid: string) => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\nclass TaskSubmissionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {uuid, dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction(uuid);\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    // As logged-in user, only submitter and SA can edit answers\n    const isCurrentUserSubmitter = parseInt(currentUser.id) === parseInt(taskSubmission.submitter.id);\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\") && (currentUser.isSA || isCurrentUserSubmitter);\n    const showEditButton =\n      (taskSubmission.status === \"complete\") && (taskSubmission.questionnaireSubmissionStatus === \"submitted\")&&\n      (currentUser.isSA || (isCurrentUserSubmitter && !taskSubmission.lockWhenComplete));\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={!!taskSubmission.questionnaireSubmissionUUID}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadStandaloneTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {User} from \"../../types/User\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {taskId} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadStandaloneTaskSubmission({taskId}))\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, bypassNetwork: true}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, bypassNetwork: true}));\n    },\n    dispatchEditAnswersAction() {\n      dispatch(editCompletedTaskSubmission({bypassNetwork: true}));\n    },\n  };\n};\n\ntype OwnProps = {\n  taskId: string\n}\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n}\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    const canUpdateAnswers = (taskSubmission.status === \"in_progress\");\n    const showEditButton = (taskSubmission.status === \"complete\");\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} username={currentUser.name}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showEditButton={showEditButton}\n          canUpdateAnswers={canUpdateAnswers}\n          showBackButton={false}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskStandaloneContainer);\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\n\ntype Props = {\n  title: string,\n  children?: *\n};\n\nexport default class LeftBar extends Component<Props> {\n\n  render() {\n    const {title, children} = {...this.props};\n\n    return (\n      <div className=\"LeftBar\">\n        <div className=\"title\">{title}</div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\n// This is used for component selection\n\nimport React, {Component} from \"react\";\nimport EditingIcon from \"../../../img/icons/question-editing.svg\";\n\ntype Props = {\n  title: string,\n  iconType: \"editing\" | \"success\" | \"pending\" | \"not-applicable\",\n  disabled: boolean,\n  onItemClick: () => void\n};\n\nexport default class LeftBarItem extends Component<Props> {\n\n  render() {\n    const {title, disabled, onItemClick} = {...this.props};\n\n    return (\n      <div className=\"LeftBarItem\">\n        {this.renderIcon()}\n        <button className=\"btn\"\n                disabled={disabled}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onItemClick();\n                }}>\n                {title}\n        </button>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    const {iconType} = {...this.props};\n\n    switch (iconType) {\n      case \"editing\":\n        return <img src={EditingIcon} alt=\"\"/>;\n      case \"success\":\n        return <i className=\"fas fa-check-circle success\"/>;\n      case \"pending\":\n        return <i className=\"fas fa-check-circle pending\"/>;\n      case \"not-applicable\":\n        return <i className=\"fas fa-question-circle not-applicable\"/>;\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  id: string,\n  name: string,\n  description: string,\n  removeComponent: () => void\n};\n\nexport default class ComponentInfo extends React.Component<Props> {\n\n  render() {\n    const {id, name, description, removeComponent} = {...this.props};\n\n    return (\n      <div className=\"ComponentInfo\" key={id}>\n        <h3>\n          <button onClick={(event) => {\n            event.preventDefault();\n            removeComponent();\n          }}>\n            <i className=\"fas fa-minus-circle text-danger\"/>\n          </button>\n          <span>{name}</span>\n        </h3>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}","// @flow\n\nimport type {SecurityComponent} from \"../types/SecurityComponent\";\n\nexport default class ComponentSelectionUtil {\n  static isComponentExists(id: string, collection: Array<SecurityComponent>): boolean {\n    return collection.filter((component) => component.id === id).length > 0;\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport type {SecurityComponent} from \"../../types/SecurityComponent\";\nimport LeftBar from \"../LeftBar/LeftBar\";\nimport LeftBarItem from \"../LeftBar/LeftBarItem\";\nimport toString from \"lodash/toString\";\nimport DarkButton from \"../Button/DarkButton\";\nimport LightButton from \"../Button/LightButton\";\nimport ComponentInfo from \"./ComponentInfo\";\nimport ComponentSelectionUtil from \"../../utils/ComponentSelectionUtil\";\n\ntype Props = {\n  availableComponents: Array<SecurityComponent>,\n  selectedComponents: Array<SecurityComponent>,\n  createJIRATickets: (jiraKey: string) => void,\n  removeComponent: (id: string) => void,\n  addComponent: (id: string) => void,\n  finishWithSelection: () => void,\n  extraButtons?: *,\n};\n\ntype State = {\n  filter: string,\n  jiraKey: string,\n};\n\nexport default class ComponentSelection extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      jiraKey: \"\"\n    };\n  }\n\n  render() {\n    const {\n      availableComponents,\n      selectedComponents,\n      createJIRATickets,\n      removeComponent,\n      addComponent,\n      finishWithSelection,\n      extraButtons\n    } = {...this.props};\n\n    const {filter, jiraKey} = {...this.state};\n\n    return (\n      <div className=\"ComponentSelection\">\n\n        <div className=\"main-wrapper\">\n          <LeftBar title={\"Available Components\".toUpperCase()}>\n            <div className=\"search\">\n              <i className=\"fas fa-search\"/>\n              <input type=\"text\" placeholder=\"Filter component...\" onChange={(event) => {\n                const value = toString(event.target.value).trim();\n                this.setState({filter: value});\n              }}/>\n            </div>\n\n            <div className=\"items\">\n              {availableComponents\n                .filter((component) => {\n                  if (!filter) {\n                    return true;\n                  }\n                  return component.name.includes(filter);\n                })\n                .map((component) => {\n                  const isSelected = ComponentSelectionUtil.isComponentExists(component.id, selectedComponents);\n\n                  return (\n                    <LeftBarItem\n                      title={component.name}\n                      iconType={isSelected ? \"success\" : \"pending\"}\n                      disabled={false}\n                      key={component.id}\n                      onItemClick={() => {\n                        // Toggle selection\n                        if (isSelected) {\n                          removeComponent(component.id);\n                        } else {\n                          addComponent(component.id);\n                        }\n                      }}/>\n                  );\n                })}\n            </div>\n          </LeftBar>\n\n          <div className=\"main-content\">\n            <div className=\"heading\">\n              Selected Components\n            </div>\n\n            <div className=\"selected-components\">\n              {selectedComponents.map((component) => {\n                return (\n                  <ComponentInfo\n                    key={component.id}\n                    id={component.id}\n                    name={component.name}\n                    description={component.description}\n                    removeComponent={() => {\n                      removeComponent(component.id);\n                    }}\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"buttons\">\n              {selectedComponents.length > 0 && (\n                <React.Fragment>\n                  <input type=\"text\" placeholder=\"JIRA Project Key\" onChange={(event) => {\n                    const value = toString(event.target.value).trim();\n                    this.setState({jiraKey: value});\n                  }}/>\n                  <DarkButton title=\"CREATE JIRA TICKETS\" classes={[\"mr-3\"]} onClick={() => {\n                    createJIRATickets(jiraKey);\n                  }}/>\n                </React.Fragment>\n              )}\n              <LightButton title=\"FINISH WITHOUT SELECTION\" classes={[\"mr-3\"]} onClick={() => {\n                finishWithSelection();\n              }}/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"extra-wrapper\">\n          {extraButtons}\n        </div>\n\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type {JiraTicket, SecurityComponent} from \"../types/SecurityComponent\";\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport compact from \"lodash/compact\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\n\nexport default class SecurityComponentDataService {\n\n  static async loadAvailableComponents(): Promise<Array<SecurityComponent>> {\n    const query = `\nquery {\n  readSecurityComponents {\n    ID\n    Name\n    Description\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const jsonArray = get(responseJSONObject, \"data.readSecurityComponents\");\n    if (!Array.isArray(jsonArray)) {\n      return [];\n    }\n\n    const components = jsonArray.map((jsonObject) => {\n      const id = toString(get(jsonObject, \"ID\", \"\"));\n      const name = toString(get(jsonObject, \"Name\", \"\"));\n      const description = toString(get(jsonObject, \"Description\", \"\"));\n      return {id, name, description};\n    });\n\n    return components;\n  }\n\n  static async createJiraTickets(args: {\n    jiraKey: string,\n    componentIDList: Array<string>,\n    csrfToken: string\n  }): Promise<Array<JiraTicket>> {\n    const {jiraKey, componentIDList, csrfToken} = {...args};\n\n    const mutations = componentIDList.map((id) => {\n      return `\ncreateJiraTicket${id}: createJiraTicket(ComponentID: \"${id}\", JiraKey: \"${jiraKey}\") {\n  ID\n  JiraKey\n  TicketLink\n}`;\n    });\n\n    const query = `\nmutation {\n  ${mutations.join(\"\\n\")}\n}`;\n\n    const json = await GraphQLRequestHelper.request({query, csrfToken});\n    const updatedData = get(json, \"data\", null);\n    if (!updatedData) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const jiraTickets = compact(componentIDList.map((id) => {\n        const key = `createJiraTicket${id}`;\n        const json = get(updatedData, key, null);\n        if (!json) {\n          return null;\n        }\n        const ticket: JiraTicket = {\n          id: toString(get(json, \"ID\", \"\")),\n          jiraKey: toString(get(json, \"JiraKey\", \"\")),\n          link: toString(get(json, \"TicketLink\", \"\"))\n        };\n        return ticket;\n    }));\n\n    return jiraTickets\n  }\n}","// @flow\n\nimport {ThunkAction} from \"redux-thunk\";\nimport uniq from \"lodash/uniq\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"./ActionType\";\nimport ActionType from \"./ActionType\";\nimport type {RootState} from \"../store/RootState\";\nimport SecurityComponentDataService from \"../services/SecurityComponentDataService\";\nimport CSRFTokenService from \"../services/CSRFTokenService\";\nimport type {JiraTicket} from \"../types/SecurityComponent\";\nimport ErrorUtil from \"../utils/ErrorUtil\";\n\nexport type SetViewModeAction = {\n  type: string,\n  payload: \"edit\" | \"review\"\n};\n\nexport type SetJiraTicketsAction = {\n  type: string,\n  payload: Array<JiraTicket>\n};\n\nexport function loadAvailableComponents(): ThunkAction {\n  return async (dispatch) => {\n    const availableComponents = await SecurityComponentDataService.loadAvailableComponents();\n    const action: LoadAvailableComponentsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS,\n      payload: availableComponents\n    };\n\n    await dispatch(action);\n  };\n}\n\nexport function addSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: AddSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function removeSelectedComponent(id: string): ThunkAction {\n  return async (dispatch) => {\n    const action: RemoveSelectedComponentAction = {\n      type: ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT,\n      payload: id\n    };\n    await dispatch(action);\n  }\n}\n\nexport function createJIRATickets(jiraKey: string): ThunkAction {\n  return async (dispatch, getState) => {\n    try {\n      if (!jiraKey) {\n        throw new Error(\"Please enter the project key!\");\n      }\n\n      const rootState: RootState = getState();\n      const selectedComponents = rootState.componentSelectionState.selectedComponents;\n      if (!selectedComponents) {\n        throw new Error(\"Nothing to create in JIRA!\");\n      }\n      const csrfToken = await CSRFTokenService.getCSRFToken();\n      const jiraTickets = await SecurityComponentDataService.createJiraTickets({\n        jiraKey,\n        componentIDList: uniq(selectedComponents.map((component) => component.id)),\n        csrfToken\n      });\n      await dispatch(setJiraTickets(jiraTickets));\n      await dispatch(setViewMode(\"review\"));\n    } catch(error) {\n      ErrorUtil.displayError(error);\n    }\n  }\n}\n\nexport function setViewMode(viewMode: \"review\" | \"edit\"): ThunkAction {\n  return async (dispatch) => {\n    const action: SetViewModeAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_VIEW_MODE,\n      payload: viewMode\n    };\n    await dispatch(action);\n  };\n}\n\nexport function setJiraTickets(tickets: Array<JiraTicket>): ThunkAction {\n  return async (dispatch) => {\n    const action: SetJiraTicketsAction = {\n      type: ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS,\n      payload: tickets\n    };\n    await dispatch(action);\n  };\n}","// @flow\n\nimport React from \"react\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\n\ntype Props = {\n  selectedComponents: Array<SecurityComponent>,\n  jiraTickets: Array<JiraTicket>,\n  children?: *\n};\n\nexport default class ComponentSelectionReview extends React.Component<Props> {\n\n  render() {\n    const {selectedComponents, jiraTickets, children} = {...this.props};\n\n    return (\n      <div className=\"ComponentSelectionReview\">\n        <div className=\"section\">\n          <h4>Selected Components</h4>\n          <ul>\n            {selectedComponents.map((component: SecurityComponent) => {\n              return (\n                <li key={component.id}>{component.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"section\">\n          <h4>Created Jira Tickets</h4>\n          <ul>\n            {jiraTickets.map((ticket: JiraTicket) => {\n              return (\n                <li key={ticket.id}><a href={ticket.link} target=\"_blank\">{ticket.link}</a></li>\n              );\n            })}\n          </ul>\n        </div>\n        {children && (\n          <div className=\"children\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n    viewMode: state.componentSelectionState.viewMode,\n    jiraTickets: state.componentSelectionState.jiraTickets\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    dispatchLoadDataAction() {\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents())\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(createJIRATickets(jiraKey))\n    }\n  };\n};\n\ntype Props = {\n  siteTitle?: string,\n  currentUser?: User | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  viewMode?: \"edit\" | \"review\",\n  jiraTickets?: Array<JiraTicket>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n}\n\nclass ComponentSelectionStandaloneContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      viewMode,\n      jiraTickets\n    } = {...this.props};\n\n    if (!currentUser) {\n      return null;\n    }\n\n    let body = null;\n    switch (viewMode) {\n      case \"edit\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              URLUtil.redirectToHome()\n            }}\n          />\n        );\n        break;\n      case \"review\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={selectedComponents}\n            jiraTickets={jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton title=\"BACK TO HOME\" onClick={() => {URLUtil.redirectToHome()}} />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionStandaloneContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport type {JiraTicket, SecurityComponent} from \"../../types/SecurityComponent\";\nimport ComponentSelection from \"./ComponentSelection\";\nimport {\n  addSelectedComponent,\n  createJIRATickets,\n  loadAvailableComponents,\n  removeSelectedComponent\n} from \"../../actions/componentSelection\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {completeTaskSubmission, loadTaskSubmission, saveSelectedComponents} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    currentUser: state.currentUserState.user,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    availableComponents: state.componentSelectionState.availableComponents,\n    selectedComponents: state.componentSelectionState.selectedComponents,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid} = {...props};\n      dispatch(loadCurrentUser());\n      dispatch(loadSiteTitle());\n      dispatch(loadAvailableComponents());\n      dispatch(loadTaskSubmission({uuid}));\n    },\n    dispatchAddComponentAction(id: string) {\n      dispatch(addSelectedComponent(id));\n    },\n    dispatchRemoveComponentAction(id: string) {\n      dispatch(removeSelectedComponent(id))\n    },\n    dispatchCreateJIRATicketsAction(jiraKey: string) {\n      dispatch(saveSelectedComponents(jiraKey));\n    },\n    dispatchFinishAction() {\n      dispatch(completeTaskSubmission());\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  currentUser?: User | null,\n  taskSubmission?: TaskSubmission | null,\n  availableComponents?: Array<SecurityComponent>,\n  selectedComponents?: Array<SecurityComponent>,\n  dispatchLoadDataAction?: () => void,\n  dispatchCreateJIRATicketsAction?: (jiraKey: string) => void,\n  dispatchAddComponentAction?: (id: string) => void,\n  dispatchRemoveComponentAction?: (id: string) => void,\n  dispatchFinishAction?: () => void,\n}\n\nclass ComponentSelectionContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      currentUser,\n      taskSubmission,\n      availableComponents,\n      selectedComponents,\n      dispatchAddComponentAction,\n      dispatchRemoveComponentAction,\n      dispatchCreateJIRATicketsAction,\n      dispatchFinishAction\n    } = {...this.props};\n\n    if (!currentUser || !taskSubmission) {\n      return null;\n    }\n\n    let body = null;\n    switch (taskSubmission.status) {\n      case \"in_progress\":\n        body = (\n          <ComponentSelection\n            availableComponents={availableComponents}\n            selectedComponents={selectedComponents}\n            extraButtons={[(\n              <DarkButton\n                key=\"back\"\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            )]}\n            createJIRATickets={(jiraKey) => {\n              dispatchCreateJIRATicketsAction(jiraKey);\n            }}\n            removeComponent={(id) => {\n              dispatchRemoveComponentAction(id);\n            }}\n            addComponent={(id) => {\n              dispatchAddComponentAction(id);\n            }}\n            finishWithSelection={() => {\n              dispatchFinishAction();\n            }}\n          />\n        );\n        break;\n      case \"complete\":\n        body = (\n          <ComponentSelectionReview\n            selectedComponents={taskSubmission.selectedComponents}\n            jiraTickets={taskSubmission.jiraTickets}\n          >\n            <div className=\"buttons\">\n              <DarkButton\n                title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n                onClick={() => {\n                  URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID);\n                }}\n              />\n            </div>\n          </ComponentSelectionReview>\n        );\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        {body}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionContainer);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {User} from \"../../types/User\";\nimport type {MyQuestionnaireItem} from \"../../types/Questionnaire\";\nimport {loadCurrentUser} from \"../../actions/user\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport {loadMySubmissionList} from \"../../actions/questionnaire\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    currentUser: state.currentUserState.user,\n    mySubmissionList: state.mySubmissionListState.mySubmissionList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: *) => {\n  return {\n    async dispatchLoadDataAction() {\n      await dispatch(loadCurrentUser());\n      await dispatch(loadMySubmissionList());\n    }\n  };\n};\n\ntype Props = {\n  currentUser?: User | null,\n  dispatchLoadDataAction?: () => void,\n  mySubmissionList?: Array<MyQuestionnaireItem>\n};\n\nconst prettifyStatus = (status: string) => {\n  return status\n    .split(\"_\")\n    .map((str) => {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    })\n    .join(\" \");\n};\n\nconst list = (mySubmissionList: MyQuestionnaireItem) => {\n  if(!mySubmissionList.length)\n  {\n    return (\n      <div className=\"container\">\n        <div class=\"alert alert-danger\">\n          Sorry, No data to display.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr key=\"submission_table_header\">\n              <th className=\"text-center\">Date Created</th>\n              <th className=\"text-center\">Pillar</th>\n              <th className=\"text-center\">Product Name</th>\n              <th className=\"text-center\">Status</th>\n              <th className=\"text-center\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mySubmissionList.map((mySubmission) => {\n              let url = \"\";\n              if (mySubmission.status === \"in_progress\") {\n                url = \"#/questionnaire/submission/\" + mySubmission.uuid;\n              } else {\n                url = \"#/questionnaire/summary/\" + mySubmission.uuid;\n              }\n              return (\n                <tr key={mySubmission.id}>\n                  <td>\n                    {moment(mySubmission.created).format(\"DD MMM YYYY\")}\n                  </td>\n                  <td>\n                    {mySubmission.questionnaireName}\n                  </td>\n                  <td>\n                    {mySubmission.productName}\n                  </td>\n                  <td>\n                    {prettifyStatus(mySubmission.status)}\n                  </td>\n                  <td>\n                      <a href={url}>View</a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nclass MySubmissionList extends Component<Props> {\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      currentUser,\n      mySubmissionList\n    } = {...this.props};\n\n    if (!currentUser || !mySubmissionList) {\n      return null;\n    }\n\n    return (\n      <div className=\"AnswersPreview\">\n        <Header title=\"My Submission\" subtitle=\"\" username={currentUser.name} />\n        {list(mySubmissionList)}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MySubmissionList);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeContainer from \"../Home/HomeContainer\";\nimport StartContainer from \"../Questionnaire/StartContainer\";\nimport QuestionnaireContainer from \"../Questionnaire/QuestionnaireContainer\";\nimport ReviewContainer from \"../Questionnaire/ReviewContainer\";\nimport SummaryContainer from \"../Questionnaire/SummaryContainer\";\nimport TaskSubmissionContainer from \"../Task/TaskSubmissionContainer\";\nimport TaskStandaloneContainer from \"../Task/TaskStandaloneContainer\";\nimport ComponentSelectionStandaloneContainer from \"../ComponentSelection/ComponentSelectionStandaloneContainer\";\nimport ComponentSelectionContainer from \"../ComponentSelection/ComponentSelectionContainer\";\nimport MySubmissionList from \"../MySubmission/MySubmissionList\";\n\n\nclass MainApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              {() => {\n                return <HomeContainer/>;\n              }}\n            </Route>\n            <Route path='/questionnaire/start/:id'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <StartContainer questionnaireID={match.params.id}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/submission/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <QuestionnaireContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/review/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ReviewContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/questionnaire/summary/:hash'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <SummaryContainer submissionHash={match.params.hash}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/task/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/tasks/standalone/:taskId'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskStandaloneContainer taskId={match.params.taskId}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/component-selection/standalone'>\n              <div className=\"gray-bg\">\n                <ComponentSelectionStandaloneContainer/>\n              </div>\n            </Route>\n            <Route path='/component-selection/submission/:uuid'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <ComponentSelectionContainer uuid={match.params.uuid}/>\n                  </div>\n                );\n              }}\n            </Route>\n            <Route path='/MySubmissions'>\n              {({match}) => {\n                return (\n                  <div className=\"gray-bg\">\n                    <MySubmissionList/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default MainApp;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport LogoImage from \"../../../img/Logo.svg\";\nimport Footer from \"../Footer/Footer\";\nimport type {Submission} from \"../../types/Questionnaire\";\nimport QuestionnaireForBusinessOwnerDataService from \"../../services/QuestionnaireForBusinessOwnerDataService\";\nimport Summary from \"./Summary\";\nimport PDFUtil from \"../../utils/PDFUtil\";\nimport CSRFTokenService from \"../../services/CSRFTokenService\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  submission: Submission | null\n};\n\nclass SummaryForBusinessOwnerContainer extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      submission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {submission, siteTitle} = {...this.state};\n    const {token} = {...this.props};\n\n    let title = \"\";\n    let summary = null;\n    if (submission) {\n      // Business owner can only approve/deny under specific status\n      let viewAs = (\n        submission.approvalStatus.securityArchitect === \"approved\" &&\n        submission.approvalStatus.businessOwner === \"pending\"\n      ) ? \"approver\" : \"others\";\n\n      title = submission.questionnaireTitle;\n      summary = (\n        <Summary submission={submission}\n                 handlePDFDownloadButtonClick={() => { this.downloadPDF(submission, siteTitle);}}\n                 handleApproveButtonClick={() => { this.approve(submission);}}\n                 handleDenyButtonClick={() => { this.deny(submission);}}\n                 viewAs={viewAs}\n                 token={token}\n        />\n      );\n    }\n\n    return (\n      <div className=\"SummaryContainer\">\n        <Header title={title} subtitle=\"Summary\" showLogoutButton={false}/>\n        {summary}\n        <Footer/>\n      </div>\n    );\n  }\n\n  async downloadPDF(submission: Submission, siteTitle: string) {\n    await PDFUtil.generatePDF({\n      questions: submission.questions,\n      submitter: submission.submitter,\n      questionnaireTitle: submission.questionnaireTitle,\n      siteTitle,\n    });\n  }\n\n  async approve(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.approveQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async deny(submission: Submission) {\n    await QuestionnaireForBusinessOwnerDataService.denyQuestionnaireSubmission({\n      submissionID: submission.submissionID,\n      csrfToken: await CSRFTokenService.getCSRFToken(),\n      secureToken: this.props.token\n    });\n    await this.loadData();\n  }\n\n  async loadData() {\n\n    try {\n      const data = await QuestionnaireForBusinessOwnerDataService.fetchSubmissionData({\n        uuid: this.props.uuid,\n        secureToken: this.props.token,\n        isBusinessOwnerSummaryPage: '1'\n      });\n      this.setState({\n        siteTitle: data.siteTitle,\n        submission: data.submission,\n      });\n    } catch (error) {\n      // TODO: maybe dispatch a global error action\n      alert(error);\n    }\n\n  }\n}\n\nexport default SummaryForBusinessOwnerContainer;\n","// @flow\n\nimport GraphQLRequestHelper from \"../utils/GraphQLRequestHelper\";\nimport _ from \"lodash\";\nimport {DEFAULT_NETWORK_ERROR} from \"../constants/errors\";\nimport QuestionParser from \"../utils/QuestionParser\";\nimport type {TaskSubmission} from \"../types/Task\";\nimport UserParser from \"../utils/UserParser\";\nimport get from \"lodash/get\";\nimport toString from \"lodash/toString\";\nimport toArray from \"lodash/toArray\";\nimport SecurityComponentParser from \"../utils/SecurityComponentParser\";\nimport JiraTicketParser from \"../utils/JiraTicketParser\";\n\ntype FetchTaskSubmissionDataArgument = { uuid: string, token: string };\ntype FetchTaskSubmissionDataReturn = { siteTitle: string, taskSubmission: TaskSubmission };\n\n// TODO: Refactor - Should use TaskDataService instead as TaskDataService now accepts `token` argument\nexport default class TaskForBusinessOwnerDataService {\n\n  static async fetchTaskSubmissionData(argument: FetchTaskSubmissionDataArgument): Promise<FetchTaskSubmissionDataReturn> {\n\n    const {uuid, token} = {...argument};\n\n    const query = `\nquery {\n  readSiteConfig {\n    Title\n  }\n  readTaskSubmission(UUID: \"${uuid}\", SecureToken: \"${token}\") {\n    ID\n    UUID\n    TaskName\n    TaskType\n    Status\n    Result\n    LockAnswersWhenComplete\n    Submitter {\n      ID\n      Email\n      FirstName\n      Surname\n      IsSA\n      IsCISO\n    }\n    QuestionnaireSubmission {\n      UUID\n      ID\n    }\n    QuestionnaireData\n    AnswerData\n    SelectedComponents {\n      ID\n      Name\n      Description\n    }\n    JiraTickets {\n      ID\n      JiraKey\n      TicketLink\n    }\n  }\n}`;\n    const responseJSONObject = await GraphQLRequestHelper.request({query});\n    const submissionJSONObject = _.get(responseJSONObject, \"data.readTaskSubmission.0\", {});\n    if (!submissionJSONObject) {\n      throw DEFAULT_NETWORK_ERROR;\n    }\n\n    const data: FetchTaskSubmissionDataReturn = {\n      siteTitle: _.toString(_.get(responseJSONObject, \"data.readSiteConfig.0.Title\", \"\")),\n      taskSubmission: {\n        id: _.toString(_.get(submissionJSONObject, \"ID\", \"\")),\n        uuid: _.toString(_.get(submissionJSONObject, \"UUID\", \"\")),\n        taskName: _.toString(_.get(submissionJSONObject, \"TaskName\", \"\")),\n        taskType: toString(get(submissionJSONObject, \"TaskType\", \"\")),\n        status: _.toString(_.get(submissionJSONObject, \"Status\", \"\")),\n        result: _.toString(_.get(submissionJSONObject, \"Result\", \"\")),\n        submitter: UserParser.parseUserFromJSON(get(submissionJSONObject, \"Submitter\")),\n        questionnaireSubmissionUUID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.UUID\", \"\")),\n        questionnaireSubmissionID: _.toString(_.get(submissionJSONObject, \"QuestionnaireSubmission.ID\", \"\")),\n        lockWhenComplete: Boolean(get(submissionJSONObject, \"LockAnswersWhenComplete\", false)),\n        questions: QuestionParser.parseQuestionsFromJSON({\n          schemaJSON: _.toString(_.get(submissionJSONObject, \"QuestionnaireData\", \"\")),\n          answersJSON: _.toString(_.get(submissionJSONObject, \"AnswerData\", \"\")),\n        }),\n        selectedComponents: SecurityComponentParser.parseFromJSONOArray(get(submissionJSONObject, \"SelectedComponents\", [])),\n        jiraTickets: JiraTicketParser.parseFromJSONArray(get(submissionJSONObject, \"JiraTickets\", []))\n      },\n    };\n\n    return data;\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport TaskForBusinessOwnerDataService from \"../../services/TaskForBusinessOwnerDataService\";\nimport Footer from \"../Footer/Footer\";\nimport AnswersPreview from \"../Questionnaire/AnswersPreview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport Header from \"../Header/Header\";\n\ntype Props = {\n  uuid: string,\n  token: string\n};\n\ntype State = {\n  siteTitle: string,\n  taskSubmission: TaskSubmission | null,\n};\n\nexport default class TaskSubmissionForBusinessOwner extends Component<Props, State> {\n\n  constructor(props: *) {\n    super(props);\n\n    this.state = {\n      siteTitle: \"\",\n      taskSubmission: null,\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  render() {\n    const {siteTitle, taskSubmission} = {...this.state};\n    const {token} = {...this.props};\n\n    if (!taskSubmission) {return null;}\n\n    const result = taskSubmission.result && taskSubmission.status === \"complete\" ? (\n      <div className=\"result\">\n        <h3>Result:</h3>\n        <div>{taskSubmission.result}</div>\n      </div>\n    ) : null;\n\n    const backButton = taskSubmission.questionnaireSubmissionUUID ? (\n      <DarkButton\n        title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n        onClick={() => {\n          URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n        }}\n      />\n    ) : null;\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <div className=\"TaskSubmission\">\n          {result}\n          <AnswersPreview questions={taskSubmission.questions}/>\n\n          <div className=\"buttons\">\n            {backButton}\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  async loadData() {\n    const {uuid, token} = {...this.props};\n    const data = await TaskForBusinessOwnerDataService.fetchTaskSubmissionData({uuid, token});\n    this.setState(data);\n  }\n}\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\nimport URLUtil from \"../../utils/URLUtil\";\nimport ComponentSelectionReview from \"./ComponentSelectionReview\";\nimport DarkButton from \"../Button/DarkButton\";\nimport type {TaskSubmission} from \"../../types/Task\";\nimport {loadTaskSubmission} from \"../../actions/task\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    siteTitle: state.siteConfigState.siteTitle,\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, token} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken: token}));\n    }\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  token: string,\n};\n\ntype Props = OwnProps & {\n  siteTitle?: string,\n  taskSubmission?: TaskSubmission | null,\n  dispatchLoadDataAction?: () => void,\n}\n\nclass ComponentSelectionForBusinessOwnerContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      token\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"ComponentSelectionContainer\">\n        <Header title=\"Component Selection\" subtitle={siteTitle}/>\n        <ComponentSelectionReview\n          selectedComponents={taskSubmission.selectedComponents}\n          jiraTickets={taskSubmission.jiraTickets}\n        >\n          <div className=\"buttons\">\n            <DarkButton\n              title={\"BACK TO QUESTIONNAIRE SUMMARY\"}\n              onClick={() => {\n                URLUtil.redirectToQuestionnaireSummary(taskSubmission.questionnaireSubmissionUUID, token);\n              }}\n            />\n          </div>\n        </ComponentSelectionReview>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComponentSelectionForBusinessOwnerContainer);","// @flow\n\nimport React, {Component} from \"react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport SummaryForBusinessOwnerContainer from \"../Questionnaire/SummaryForBusinessOwner\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForBusinessOwner from \"../Task/TaskSubmissionForBusinessOwner\";\nimport ComponentSelectionForBusinessOwnerContainer\n  from \"../ComponentSelection/ComponentSelectionForBusinessOwnerContainer\";\n\nclass BusinessOwnerApp extends Component<*> {\n\n  render() {\n\n    return (\n      <div>\n        <main>\n          <HashRouter>\n            <Switch>\n              <Route path='/questionnaire/summary/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <SummaryForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/task/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <TaskSubmissionForBusinessOwner uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n              <Route path='/component-selection/submission/:uuid'>\n                {({match, location}) => {\n                  const query = parse(location.search);\n                  return (\n                    <div className=\"gray-bg\">\n                      <ComponentSelectionForBusinessOwnerContainer uuid={match.params.uuid} token={query.token || \"\"}/>\n                    </div>\n                  );\n                }}\n              </Route>\n            </Switch>\n          </HashRouter>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default BusinessOwnerApp;\n","// @flow\n\nimport type {HomeState} from \"../store/HomeState\";\nimport type {LoadHomeStateFinishedAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: HomeState = {\n  title: \"\",\n  subtitle: \"\",\n  pillars: [],\n  tasks: [],\n};\n\nexport function homeState(state: HomeState = defaultState, action: LoadHomeStateFinishedAction) {\n  switch (action.type) {\n    case ActionType.HOME.LOAD_HOME_STATE_FINISHED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {\n  QuestionnaireStartState,\n  QuestionnaireState,\n  QuestionnaireSubmissionState,\n} from \"../store/QuestionnaireState\";\nimport type {LoadQuestionnaireStartAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport _ from \"lodash\";\n\nconst defaultStartState: QuestionnaireStartState = {\n  title: \"\",\n  subtitle: \"\",\n  keyInformation: \"\",\n  questionnaireID: \"\",\n  user: null\n};\n\nconst defaultSubmissionState: QuestionnaireSubmissionState = {\n  title: \"\",\n  siteTitle: \"\",\n  user: null,\n  submission: null,\n  isCurrentUserApprover: false,\n  isCurrentUserABusinessOwnerApprover: false\n};\n\nexport function startState(state: QuestionnaireStartState = defaultStartState, action: LoadQuestionnaireStartAction) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_START_STATE) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport function submissionState(state: QuestionnaireSubmissionState = defaultSubmissionState, action: *) {\n  if (action.type === ActionType.QUESTIONNAIRE.LOAD_QUESTIONNAIRE_SUBMISSION_STATE) {\n    return action.payload;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.PUT_DATA_IN_QUESTIONNAIRE_ANSWER) {\n    if (!state.submission) {\n      return state;\n    }\n\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = state.submission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = {...state};\n    _.set(newState, `submission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MOVE_TO_ANOTHER_QUESTIONNAIRE_QUESTION) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n\n    const {targetIndex} = {...action};\n    const currentIndex = submission.questions.findIndex((question) => {\n      return question.isCurrent;\n    });\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= submission.questions.length) {\n      return state;\n    }\n\n    const newState = {...state};\n\n    // Mark current question is not current anymore\n    _.set(newState, `submission.questions.${currentIndex}.isCurrent`, false);\n\n    // Mark target question to be current\n    _.set(newState, `submission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.QUESTIONNAIRE.MARK_QUESTIONNAIRE_QUESTION_NOT_APPLICABLE) {\n    const submission = state.submission;\n    if (!submission) {\n      return state;\n    }\n    const newState = {...state};\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.nonApplicableIndexes;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = submission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        _.set(newState, `submission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  return state;\n}\n\nexport default combineReducers<QuestionnaireState>({\n  startState,\n  submissionState\n});\n","// @flow\n\nimport type {TaskSubmissionState} from \"../store/TaskSubmissionState\";\nimport type {LoadTaskSubmissionAction, PutDataInTaskSubmissionAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport type {Question} from \"../types/Questionnaire\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\nimport type {TaskSubmission} from \"../types/Task\";\n\nconst defaultStartState: TaskSubmissionState = {\n  taskSubmission: null,\n};\n\nexport function taskSubmissionState(state: TaskSubmissionState = defaultStartState, action: *): TaskSubmissionState {\n  const taskSubmission: TaskSubmission | null = state.taskSubmission;\n\n  if (action.type === ActionType.TASK.LOAD_TASK_SUBMISSION) {\n    (action: LoadTaskSubmissionAction);\n    return {\n      taskSubmission: action.payload,\n    };\n  }\n\n  if (action.type === ActionType.TASK.PUT_DATA_IN_TASK_SUBMISSION) {\n    (action: PutDataInTaskSubmissionAction);\n    if (!taskSubmission) {\n      return state;\n    }\n    // Find the matched question\n    const answeredQuestion: Question = action.payload;\n    const index = taskSubmission.questions.findIndex((question) => {\n      return question.id === answeredQuestion.id;\n    });\n    if (index < 0) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.questions.${index}`, answeredQuestion);\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MARK_TASK_QUESTION_NOT_APPLICABLE) {\n    if (!taskSubmission) {\n      return state;\n    }\n    const newState = cloneDeep(state);\n\n    // Mark questions between target and current to be \"not applicable\"\n    const nonApplicableIndexes = action.payload;\n    if (nonApplicableIndexes && nonApplicableIndexes.length > 0) {\n      nonApplicableIndexes.forEach(index => {\n        const nonApplicableQuestion = taskSubmission.questions[index];\n        nonApplicableQuestion.isApplicable = false;\n        set(newState, `taskSubmission.questions.${index}`, nonApplicableQuestion);\n      });\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.MOVE_TO_ANOTHER_TASK_QUESTION) {\n    if (!taskSubmission) {\n      return state;\n    }\n\n    const {currentIndex, targetIndex} = {...action.payload};\n\n    // Don't move when target is wrong\n    if (targetIndex < 0 || targetIndex >= taskSubmission.questions.length) {\n      return state;\n    }\n\n    const newState = cloneDeep(state);\n\n    // Mark current question is not current anymore\n    set(newState, `taskSubmission.questions.${currentIndex}.isCurrent`, false);\n    // Mark target question to be current\n    set(newState, `taskSubmission.questions.${targetIndex}.isCurrent`, true);\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.COMPLETE_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"complete\");\n\n    if (action.payload) {\n      set(newState, `taskSubmission.result`, action.payload);\n    }\n\n    return newState;\n  }\n\n  if (action.type === ActionType.TASK.EDIT_TASK_SUBMISSION) {\n    const newState = cloneDeep(state);\n    set(newState, `taskSubmission.status`, \"in_progress\");\n    set(newState, `taskSubmission.result`, null);\n    return newState;\n  }\n\n  return state;\n}\n\n","// @flow\n\nimport type {CurrentUserState} from \"../store/CurrentUserState\";\nimport type {SetCurrentUserAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: CurrentUserState = {\n  user: null,\n};\n\nexport function currentUserState(state: CurrentUserState = defaultState, action: SetCurrentUserAction) {\n  switch (action.type) {\n    case ActionType.USER.SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {SiteConfigState} from \"../store/SiteConfigState\";\nimport type {SetSiteTitleAction} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\n\nconst defaultState: SiteConfigState = {\n  siteTitle: \"\",\n};\n\nexport function siteConfigState(state: SiteConfigState = defaultState, action: SetSiteTitleAction) {\n  switch (action.type) {\n    case ActionType.SITE_CONFIG.SET_SITE_TITLE:\n      return {\n        ...state,\n        siteTitle: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport type {ComponentSelectionState} from \"../store/ComponentSelectionState\";\nimport type {\n  AddSelectedComponentAction,\n  LoadAvailableComponentsAction,\n  RemoveSelectedComponentAction\n} from \"../actions/ActionType\";\nimport ActionType from \"../actions/ActionType\";\nimport concat from \"lodash/concat\";\nimport ComponentSelectionUtil from \"../utils/ComponentSelectionUtil\";\nimport type {SetJiraTicketsAction, SetViewModeAction} from \"../actions/componentSelection\";\n\nconst defaultState: ComponentSelectionState = {\n  availableComponents: [],\n  selectedComponents: [],\n  jiraTickets: [],\n  viewMode: \"edit\"\n};\n\nconst isComponentExists = ComponentSelectionUtil.isComponentExists;\n\nexport function componentSelectionState(state: ComponentSelectionState = defaultState, action: *) {\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_AVAILABLE_COMPONENTS) {\n    const act: LoadAvailableComponentsAction = action;\n    return {\n      ...state,\n      availableComponents: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.ADD_SELECTED_COMPONENT) {\n    const act: AddSelectedComponentAction = action;\n    if (!isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: concat(\n          state.selectedComponents,\n          state.availableComponents.filter((component) => component.id === act.payload)\n        )\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.REMOVE_SELECTED_COMPONENT) {\n    const act: RemoveSelectedComponentAction = action;\n    if (isComponentExists(act.payload, state.selectedComponents) &&\n      isComponentExists(act.payload, state.availableComponents)) {\n      return {\n        ...state,\n        selectedComponents: state.selectedComponents.filter((component) => component.id !== act.payload)\n      };\n    }\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_JIRA_TICKETS) {\n    const act: SetJiraTicketsAction = action;\n    return {\n      ...state,\n      jiraTickets: act.payload\n    };\n  }\n\n  if (action.type === ActionType.COMPONENT_SELECTION.SET_VIEW_MODE) {\n    const act: SetViewModeAction = action;\n    return {\n      ...state,\n      viewMode: act.payload\n    };\n  }\n\n  return state;\n}","// @flow\nimport ActionType from \"../actions/ActionType\";\n\nconst initalState: MySubmissionListState = {\n  submissionList: []\n}\n\nexport function mySubmissionListState(state: MySubmissionListState = initalState, action: any): MySubmissionListState {\n  if (action.type === ActionType.QUESTIONNAIRE.FETCH_MY_SUBMISSION_LIST) {\n    return {\n      ...state,\n      mySubmissionList: action.payload\n    };\n  }\n\n  return state;\n}\n","// @flow\n\nimport {combineReducers} from \"redux\";\nimport type {RootState} from \"../store/RootState\";\nimport {homeState} from \"./homeState\";\nimport questionnaireState from \"./questionnaireState\";\nimport {taskSubmissionState} from \"./taskSubmissionState\";\nimport {currentUserState} from \"./currentUserState\";\nimport {siteConfigState} from \"./siteConfigState\";\nimport {componentSelectionState} from \"./componentSelectionState\";\nimport {mySubmissionListState} from \"./mySubmissionListState\"\n\nexport default combineReducers<RootState>({\n  homeState,\n  questionnaireState,\n  taskSubmissionState,\n  currentUserState,\n  siteConfigState,\n  componentSelectionState,\n  mySubmissionListState\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport rootState from \"../reducers/rootState\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger({diff: true, collapsed: true}));\n}\n\nexport const store = createStore(\n  rootState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../../store/RootState\";\nimport {Dispatch} from \"redux\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport type {Question} from \"../../types/Questionnaire\";\nimport {\n  editCompletedTaskSubmission,\n  loadTaskSubmission,\n  moveToPreviousQuestionInTaskSubmission,\n  saveAnsweredQuestionInTaskSubmission,\n} from \"../../actions/task\";\nimport TaskSubmission from \"./TaskSubmission\";\nimport type {TaskSubmission as TaskSubmissionType} from \"../../types/Task\";\nimport {loadSiteTitle} from \"../../actions/siteConfig\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    taskSubmission: state.taskSubmissionState.taskSubmission,\n    siteTitle: state.siteConfigState.siteTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, props: OwnProps) => {\n  return {\n    dispatchLoadDataAction() {\n      const {uuid, secureToken} = {...props};\n      dispatch(loadSiteTitle());\n      dispatch(loadTaskSubmission({uuid, secureToken}));\n    },\n    dispatchSaveAnsweredQuestionAction(answeredQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(saveAnsweredQuestionInTaskSubmission({answeredQuestion, secureToken}));\n    },\n    dispatchMoveToPreviousQuestionAction(targetQuestion: Question) {\n      const {secureToken} = {...props};\n      dispatch(moveToPreviousQuestionInTaskSubmission({targetQuestion, secureToken}));\n    },\n    dispatchEditAnswersAction() {\n      const {secureToken} = {...props};\n      dispatch(editCompletedTaskSubmission({secureToken}));\n    },\n  };\n};\n\ntype OwnProps = {\n  uuid: string,\n  secureToken: string,\n};\n\ntype ReduxProps = {\n  taskSubmission?: TaskSubmissionType | null,\n  siteTitle?: string,\n  dispatchLoadDataAction?: () => void,\n  dispatchSaveAnsweredQuestionAction?: (answeredQuestion: Question) => void,\n  dispatchMoveToPreviousQuestionAction?: (targetQuestion: Question) => void,\n  dispatchEditAnswersAction?: () => void\n};\n\ntype Props = OwnProps & ReduxProps;\n\nclass TaskSubmissionForVendorContainer extends Component<Props> {\n\n  componentDidMount() {\n    const {dispatchLoadDataAction} = {...this.props};\n    dispatchLoadDataAction();\n  }\n\n  render() {\n    const {\n      siteTitle,\n      taskSubmission,\n      dispatchSaveAnsweredQuestionAction,\n      dispatchMoveToPreviousQuestionAction,\n      dispatchEditAnswersAction,\n    } = {...this.props};\n\n    if (!taskSubmission) {\n      return null;\n    }\n\n    return (\n      <div className=\"TaskSubmissionContainer\">\n        <Header title={taskSubmission.taskName} subtitle={siteTitle} showLogoutButton={false}/>\n        <TaskSubmission\n          taskSubmission={taskSubmission}\n          saveAnsweredQuestion={dispatchSaveAnsweredQuestionAction}\n          moveToPreviousQuestion={dispatchMoveToPreviousQuestionAction}\n          editAnswers={dispatchEditAnswersAction}\n          showBackButton={false}\n          showEditButton={false}\n          canUpdateAnswers={taskSubmission.status === \"in_progress\"}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskSubmissionForVendorContainer);\n","// @flow\n\nimport React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {parse} from \"query-string\";\nimport TaskSubmissionForVendorContainer from \"../Task/TaskSubmissionForVendorContainer\";\n\nclass VendorApp extends Component<*> {\n\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            <Route path='/task/submission/:uuid'>\n              {({match, location}) => {\n                const query = parse(location.search);\n                return (\n                  <div className=\"gray-bg\">\n                    <TaskSubmissionForVendorContainer uuid={match.params.uuid} secureToken={query.token || \"\"}/>\n                  </div>\n                );\n              }}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default VendorApp;\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/App/MainApp\";\nimport BusinessOwnerApp from \"./components/App/BusinessOwnerApp\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport VendorApp from \"./components/App/VendorApp\";\nimport ReactModal from \"react-modal\";\n\nwindow.addEventListener(\"load\", () => {\n\n  ReactModal.defaultStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    content: {\n      background: \"#fff\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      padding: \"20px\",\n    },\n  };\n\n  const mainContainer = document.getElementById(\"main-app\");\n  if (mainContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <MainApp/>\n        </Provider>\n      </HashRouter>\n    ), mainContainer);\n  }\n\n  const businessOwnerContainer = document.getElementById(\"business-owner-app\");\n  if (businessOwnerContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <BusinessOwnerApp/>\n        </Provider>\n      </HashRouter>\n    ), businessOwnerContainer);\n  }\n\n  const vendorContainer = document.getElementById(\"vendor-app\");\n  if (vendorContainer) {\n    ReactDOM.render((\n      <HashRouter>\n        <Provider store={store}>\n          <VendorApp/>\n        </Provider>\n      </HashRouter>\n    ), vendorContainer);\n  }\n});\n\n\n","module.exports = __webpack_public_path__ + \"../img/b0b707ee0bdf8b4add381179f4a89bf9.svg\";","module.exports = __webpack_public_path__ + \"../img/4aa06b86ab33745eda39a0996b2a31bd.svg\";","module.exports = __webpack_public_path__ + \"../img/b002cf666ac7512c21ad21462efdf4e8.svg\";"],"sourceRoot":""}